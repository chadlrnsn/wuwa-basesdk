#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Xiakong

#include "Basic.hpp"

#include "ECharViewDirectionState_structs.hpp"
#include "sInputCommand_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.攻击按下
// 0x02D0 (0x02D0 - 0x0000)
struct BP_Input_Xiakong_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagCount_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0058(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x007C(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x0094(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x00AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x00C0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_1;                                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x00E0(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x0118(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0138(0x0020)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0160(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x016C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_7;         // 0x01AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x01F0(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_8;         // 0x0224(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x0268(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B6[0x2];                                      // 0x02B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Xiakong_C_攻击按下) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_攻击按下");
static_assert(sizeof(BP_Input_Xiakong_C_攻击按下) == 0x0002D0, "Wrong size on BP_Input_Xiakong_C_攻击按下");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, time) == 0x000000, "Member 'BP_Input_Xiakong_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_攻击按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ___int_Loop_Counter_Variable) == 0x000040, "Member 'BP_Input_Xiakong_C_攻击按下::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_GetTagCount_ReturnValue) == 0x000044, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_GetTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Clamp_ReturnValue) == 0x000054, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000058, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CanResponseInput_ReturnValue) == 0x000078, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x00007C, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ___int_Variable) == 0x000090, "Member 'BP_Input_Xiakong_C_攻击按下::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x000094, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x0000A8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x0000AC, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x0000C0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ___bool_True_if_break_was_hit_Variable) == 0x0000D4, "Member 'BP_Input_Xiakong_C_攻击按下::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Not_PreBool_ReturnValue) == 0x0000D5, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ___int_Variable_1) == 0x0000D8, "Member 'BP_Input_Xiakong_C_攻击按下::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0000E0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000100, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x000118, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_BooleanAND_ReturnValue) == 0x00012C, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00012D, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00012E, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00012F, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_BooleanAND_ReturnValue_1) == 0x000130, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000138, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_BooleanOR_ReturnValue) == 0x000158, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, ___int_Array_Index_Variable) == 0x00015C, "Member 'BP_Input_Xiakong_C_攻击按下::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x00016C, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000180, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000190, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000198, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0001A8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_7) == 0x0001AC, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0001C0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001D0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0001D8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0001E8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x0001F0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000210, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000220, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_8) == 0x000224, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000238, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000248, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000250, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000260, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x000268, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x000288, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x000298, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, K2Node_MakeArray_Array) == 0x0002A0, "Member 'BP_Input_Xiakong_C_攻击按下::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Array_Get_Item_1) == 0x0002B0, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002B4, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x0002B5, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x0002B8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x0002C8, "Member 'BP_Input_Xiakong_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.攻击抬起
// 0x0080 (0x0080 - 0x0000)
struct BP_Input_Xiakong_C_攻击抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x004C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Xiakong_C_攻击抬起) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_攻击抬起");
static_assert(sizeof(BP_Input_Xiakong_C_攻击抬起) == 0x000080, "Wrong size on BP_Input_Xiakong_C_攻击抬起");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, time) == 0x000000, "Member 'BP_Input_Xiakong_C_攻击抬起::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_攻击抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc______ReturnValue) == 0x000038, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue) == 0x00004C, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_CanResponseInput_ReturnValue) == 0x000060, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_GetDirectionState_ReturnValue) == 0x000061, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000062, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000068, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000078, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_IsMovingOnGround_ReturnValue) == 0x00007B, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00007C, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击抬起, CallFunc_BooleanOR_ReturnValue) == 0x00007E, "Member 'BP_Input_Xiakong_C_攻击抬起::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.攻击长按
// 0x01F0 (0x01F0 - 0x0000)
struct BP_Input_Xiakong_C_攻击长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x0054(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x0080(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x0094(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x00A8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_TraceGround_ReturnValue;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_EqualEqual_VectorVector_ReturnValue;    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_5;     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_7;         // 0x01DC(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Xiakong_C_攻击长按) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_攻击长按");
static_assert(sizeof(BP_Input_Xiakong_C_攻击长按) == 0x0001F0, "Wrong size on BP_Input_Xiakong_C_攻击长按");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, time) == 0x000000, "Member 'BP_Input_Xiakong_C_攻击长按::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_攻击长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000040, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x000054, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CanResponseInput_ReturnValue) == 0x000068, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x00006C, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x000080, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x000094, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x0000A8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x0000BC, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x0000BD, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BooleanOR_ReturnValue) == 0x0000BE, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BF, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C0, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_IsMovingOnGround_ReturnValue) == 0x0000C1, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C3, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0000C8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000D8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0000E0, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0000F0, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0000F8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000108, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000110, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000120, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000128, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BreakVectorDouble_X) == 0x000140, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BreakVectorDouble_Y) == 0x000148, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_BreakVectorDouble_Z) == 0x000150, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_MakeVectorDouble_ReturnValue) == 0x000158, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000170, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000180, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_D_Subtract_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_D_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x000190, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_TraceGround_ReturnValue) == 0x0001A8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_TraceGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_D_EqualEqual_VectorVector_ReturnValue) == 0x0001C0, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_D_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput_5) == 0x0001C8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue_5) == 0x0001D8, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_7) == 0x0001DC, "Member 'BP_Input_Xiakong_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_7' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.技能1按下
// 0x0220 (0x0220 - 0x0000)
struct BP_Input_Xiakong_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x003C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0064(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0078(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x00AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x00C0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_5;     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x014C(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_6; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_6;     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_7; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_7;     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0190(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x01C4(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x01D8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_8; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_8;     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Xiakong_C_技能1按下) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_技能1按下");
static_assert(sizeof(BP_Input_Xiakong_C_技能1按下) == 0x000220, "Wrong size on BP_Input_Xiakong_C_技能1按下");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, time) == 0x000000, "Member 'BP_Input_Xiakong_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_技能1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CanResponseInput_ReturnValue) == 0x000038, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000039, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x00003C, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000064, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000078, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000098, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0000A8, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x0000AC, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x0000C0, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0000D8, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x0000E8, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x0000F0, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000100, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000108, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000118, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000120, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000130, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_5) == 0x000138, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_5) == 0x000148, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x00014C, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_6) == 0x000160, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_6) == 0x000170, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_7) == 0x000178, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_7) == 0x000188, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000190, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0001B0, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0001C0, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x0001C4, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc___1___ReturnValue) == 0x0001D8, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_8) == 0x0001F0, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_8) == 0x000200, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000208, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_技能1按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000218, "Member 'BP_Input_Xiakong_C_技能1按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.大招按下
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Input_Xiakong_C_大招按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0020(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0038(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0094(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Xiakong_C_大招按下) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_大招按下");
static_assert(sizeof(BP_Input_Xiakong_C_大招按下) == 0x0000D8, "Wrong size on BP_Input_Xiakong_C_大招按下");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, time) == 0x000000, "Member 'BP_Input_Xiakong_C_大招按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_大招按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_CanResponseInput_ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00001A, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000020, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000038, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000078, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x00007C, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000080, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000090, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000091, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000094, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0000A8, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0000B8, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0000C0, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_大招按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000D0, "Member 'BP_Input_Xiakong_C_大招按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.闪避按下
// 0x002C (0x002C - 0x0000)
struct BP_Input_Xiakong_C_闪避按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Xiakong_C_闪避按下) == 0x000004, "Wrong alignment on BP_Input_Xiakong_C_闪避按下");
static_assert(sizeof(BP_Input_Xiakong_C_闪避按下) == 0x00002C, "Wrong size on BP_Input_Xiakong_C_闪避按下");
static_assert(offsetof(BP_Input_Xiakong_C_闪避按下, time) == 0x000000, "Member 'BP_Input_Xiakong_C_闪避按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_闪避按下, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_闪避按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_闪避按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_闪避按下::CallFunc______ReturnValue' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.瞄准按下
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Input_Xiakong_C_瞄准按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x004C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0060(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0094(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Xiakong_C_瞄准按下) == 0x000008, "Wrong alignment on BP_Input_Xiakong_C_瞄准按下");
static_assert(sizeof(BP_Input_Xiakong_C_瞄准按下) == 0x0000A8, "Wrong size on BP_Input_Xiakong_C_瞄准按下");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, time) == 0x000000, "Member 'BP_Input_Xiakong_C_瞄准按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_瞄准按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000038, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000048, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x00004C, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000060, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_CanResponseInput_ReturnValue) == 0x000074, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_GetDirectionState_ReturnValue) == 0x000075, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000076, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000077, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x000078, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000079, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_BooleanOR_ReturnValue) == 0x00007B, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000080, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000090, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准按下, CallFunc______ReturnValue) == 0x000094, "Member 'BP_Input_Xiakong_C_瞄准按下::CallFunc______ReturnValue' has a wrong offset!");

// Function BP_Input_Xiakong.BP_Input_Xiakong_C.瞄准抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_Input_Xiakong_C_瞄准抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Xiakong_C_瞄准抬起) == 0x000004, "Wrong alignment on BP_Input_Xiakong_C_瞄准抬起");
static_assert(sizeof(BP_Input_Xiakong_C_瞄准抬起) == 0x000018, "Wrong size on BP_Input_Xiakong_C_瞄准抬起");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准抬起, time) == 0x000000, "Member 'BP_Input_Xiakong_C_瞄准抬起::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Xiakong_C_瞄准抬起, ReturnValue) == 0x000004, "Member 'BP_Input_Xiakong_C_瞄准抬起::ReturnValue' has a wrong offset!");

}

