#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MagicLeapSharedWorld

#include "Basic.hpp"

#include "MagicLeapSharedWorld_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MagicLeapSharedWorld.MagicLeapSharedWorldGameMode.DetermineSharedWorldData
// 0x0010 (0x0010 - 0x0000)
struct MagicLeapSharedWorldGameMode_DetermineSharedWorldData final
{
public:
	struct FMagicLeapSharedWorldSharedData        NewSharedWorldData;                                // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldGameMode_DetermineSharedWorldData) == 0x000008, "Wrong alignment on MagicLeapSharedWorldGameMode_DetermineSharedWorldData");
static_assert(sizeof(MagicLeapSharedWorldGameMode_DetermineSharedWorldData) == 0x000010, "Wrong size on MagicLeapSharedWorldGameMode_DetermineSharedWorldData");
static_assert(offsetof(MagicLeapSharedWorldGameMode_DetermineSharedWorldData, NewSharedWorldData) == 0x000000, "Member 'MagicLeapSharedWorldGameMode_DetermineSharedWorldData::NewSharedWorldData' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldGameMode.SendSharedWorldDataToClients
// 0x0001 (0x0001 - 0x0000)
struct MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients) == 0x000001, "Wrong alignment on MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients");
static_assert(sizeof(MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients) == 0x000001, "Wrong size on MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients");
static_assert(offsetof(MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients, ReturnValue) == 0x000000, "Member 'MagicLeapSharedWorldGameMode_SendSharedWorldDataToClients::ReturnValue' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldGameState.CalculateXRCameraRootTransform
// 0x0030 (0x0030 - 0x0000)
struct MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform) == 0x000010, "Wrong alignment on MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform");
static_assert(sizeof(MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform) == 0x000030, "Wrong size on MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform");
static_assert(offsetof(MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform, ReturnValue) == 0x000000, "Member 'MagicLeapSharedWorldGameState_CalculateXRCameraRootTransform::ReturnValue' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.ClientSetChosenOne
// 0x0001 (0x0001 - 0x0000)
struct MagicLeapSharedWorldPlayerController_ClientSetChosenOne final
{
public:
	bool                                          bChosenOne;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldPlayerController_ClientSetChosenOne) == 0x000001, "Wrong alignment on MagicLeapSharedWorldPlayerController_ClientSetChosenOne");
static_assert(sizeof(MagicLeapSharedWorldPlayerController_ClientSetChosenOne) == 0x000001, "Wrong size on MagicLeapSharedWorldPlayerController_ClientSetChosenOne");
static_assert(offsetof(MagicLeapSharedWorldPlayerController_ClientSetChosenOne, bChosenOne) == 0x000000, "Member 'MagicLeapSharedWorldPlayerController_ClientSetChosenOne::bChosenOne' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.ServerSetAlignmentTransforms
// 0x0010 (0x0010 - 0x0000)
struct MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms final
{
public:
	struct FMagicLeapSharedWorldAlignmentTransforms InAlignmentTransforms;                           // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms) == 0x000008, "Wrong alignment on MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms");
static_assert(sizeof(MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms) == 0x000010, "Wrong size on MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms");
static_assert(offsetof(MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms, InAlignmentTransforms) == 0x000000, "Member 'MagicLeapSharedWorldPlayerController_ServerSetAlignmentTransforms::InAlignmentTransforms' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.ServerSetLocalWorldData
// 0x0010 (0x0010 - 0x0000)
struct MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData final
{
public:
	struct FMagicLeapSharedWorldLocalData         LocalWorldReplicationData;                         // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData) == 0x000008, "Wrong alignment on MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData");
static_assert(sizeof(MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData) == 0x000010, "Wrong size on MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData");
static_assert(offsetof(MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData, LocalWorldReplicationData) == 0x000000, "Member 'MagicLeapSharedWorldPlayerController_ServerSetLocalWorldData::LocalWorldReplicationData' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.CanSendLocalDataToServer
// 0x0001 (0x0001 - 0x0000)
struct MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer) == 0x000001, "Wrong alignment on MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer");
static_assert(sizeof(MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer) == 0x000001, "Wrong size on MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer");
static_assert(offsetof(MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer, ReturnValue) == 0x000000, "Member 'MagicLeapSharedWorldPlayerController_CanSendLocalDataToServer::ReturnValue' has a wrong offset!");

// Function MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.IsChosenOne
// 0x0001 (0x0001 - 0x0000)
struct MagicLeapSharedWorldPlayerController_IsChosenOne final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MagicLeapSharedWorldPlayerController_IsChosenOne) == 0x000001, "Wrong alignment on MagicLeapSharedWorldPlayerController_IsChosenOne");
static_assert(sizeof(MagicLeapSharedWorldPlayerController_IsChosenOne) == 0x000001, "Wrong size on MagicLeapSharedWorldPlayerController_IsChosenOne");
static_assert(offsetof(MagicLeapSharedWorldPlayerController_IsChosenOne, ReturnValue) == 0x000000, "Member 'MagicLeapSharedWorldPlayerController_IsChosenOne::ReturnValue' has a wrong offset!");

}

