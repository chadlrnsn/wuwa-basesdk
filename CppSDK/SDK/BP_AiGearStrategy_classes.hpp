#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AiGearStrategy

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AiGearStrategy.BP_AIGearStrategy_C
// 0x0018 (0x0050 - 0x0038)
class UBP_AIGearStrategy_C final : public UPrimaryDataAsset
{
public:
	float                                         LostWeight;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RoundDecay;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IterationCount;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIterationCount;                              // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IterationDecay;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIGearStrategy_C">();
	}
	static class UBP_AIGearStrategy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIGearStrategy_C>();
	}
};
static_assert(alignof(UBP_AIGearStrategy_C) == 0x000008, "Wrong alignment on UBP_AIGearStrategy_C");
static_assert(sizeof(UBP_AIGearStrategy_C) == 0x000050, "Wrong size on UBP_AIGearStrategy_C");
static_assert(offsetof(UBP_AIGearStrategy_C, LostWeight) == 0x000038, "Member 'UBP_AIGearStrategy_C::LostWeight' has a wrong offset!");
static_assert(offsetof(UBP_AIGearStrategy_C, RoundDecay) == 0x00003C, "Member 'UBP_AIGearStrategy_C::RoundDecay' has a wrong offset!");
static_assert(offsetof(UBP_AIGearStrategy_C, IterationCount) == 0x000040, "Member 'UBP_AIGearStrategy_C::IterationCount' has a wrong offset!");
static_assert(offsetof(UBP_AIGearStrategy_C, PlayerIterationCount) == 0x000044, "Member 'UBP_AIGearStrategy_C::PlayerIterationCount' has a wrong offset!");
static_assert(offsetof(UBP_AIGearStrategy_C, IterationDecay) == 0x000048, "Member 'UBP_AIGearStrategy_C::IterationDecay' has a wrong offset!");

}

