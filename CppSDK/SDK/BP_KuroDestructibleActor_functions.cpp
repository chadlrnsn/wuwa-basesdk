#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroDestructibleActor

#include "Basic.hpp"

#include "BP_KuroDestructibleActor_classes.hpp"
#include "BP_KuroDestructibleActor_parameters.hpp"


namespace SDK
{

// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.ExecuteUbergraph_BP_KuroDestructibleActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroDestructibleActor_C::ExecuteUbergraph_BP_KuroDestructibleActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "ExecuteUbergraph_BP_KuroDestructibleActor");

	Params::BP_KuroDestructibleActor_C_ExecuteUbergraph_BP_KuroDestructibleActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroDestructibleActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "ReceiveTick");

	Params::BP_KuroDestructibleActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.PlayDestruction
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HurtOrigin_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Impluse_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsZeroImpluse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_KuroDestructibleActor_C::PlayDestruction(const struct FVector& HurtOrigin_0, float Impluse_0, bool IsZeroImpluse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "PlayDestruction");

	Params::BP_KuroDestructibleActor_C_PlayDestruction Parms{};

	Parms.HurtOrigin_0 = std::move(HurtOrigin_0);
	Parms.Impluse_0 = Impluse_0;
	Parms.IsZeroImpluse = IsZeroImpluse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.OnFractureEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitPoint                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitDirection                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroDestructibleActor_C::OnFractureEvent(const struct FVector& HitPoint, const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "OnFractureEvent");

	Params::BP_KuroDestructibleActor_C_OnFractureEvent Parms{};

	Parms.HitPoint = std::move(HitPoint);
	Parms.HitDirection = std::move(HitDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_KuroDestructibleActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.ApplyDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HurtOrigin_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpeedDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroDestructibleActor_C::ApplyDamage(const struct FVector& HurtOrigin_0, const struct FVector& SpeedDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "ApplyDamage");

	Params::BP_KuroDestructibleActor_C_ApplyDamage Parms{};

	Parms.HurtOrigin_0 = std::move(HurtOrigin_0);
	Parms.SpeedDirection = std::move(SpeedDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.ModifiedCollison
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_KuroDestructibleActor_C::ModifiedCollison()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "ModifiedCollison");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.IsMobile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_KuroDestructibleActor_C::IsMobile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "IsMobile");

	Params::BP_KuroDestructibleActor_C_IsMobile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_KuroDestructibleActor.BP_KuroDestructibleActor_C.EnableFakeGravityDirect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          FakeGravityValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroDestructibleActor_C::EnableFakeGravityDirect(bool Enable, const struct FVector& FakeGravityValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroDestructibleActor_C", "EnableFakeGravityDirect");

	Params::BP_KuroDestructibleActor_C_EnableFakeGravityDirect Parms{};

	Parms.Enable = Enable;
	Parms.FakeGravityValue = std::move(FakeGravityValue);

	UObject::ProcessEvent(Func, &Parms);
}

}

