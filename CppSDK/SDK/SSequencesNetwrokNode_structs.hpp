#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SSequencesNetwrokNode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESeqSwtichType_structs.hpp"
#include "SSeqOptionJumpGroup_structs.hpp"
#include "SeqCameraMode_structs.hpp"


namespace SDK
{

// UserDefinedStruct SSequencesNetwrokNode.SSequencesNetwrokNode
// 0x0060 (0x0060 - 0x0000)
struct FSSequencesNetwrokNode final
{
public:
	class FName                                   SeqNodeID_8_0C44D5184E9C897AA3CA8AAEA9E76D19;      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PreSeqNodeID_13_05C932D74E8DC1BAD474D1AD560AEF94;  // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        SeqNodeData_44_6266215844F469543EFA2CB97D91FA70;   // 0x0018(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          是否禁止输入_18_D8F8DC4148F982E9D851E5AB21ED205E;  // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          是否禁止视角控制_19_8302A4B6442EC67F96D100AD7A85893C; // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendInTime_26_41AAC7F6417E901E7D01FB9AA9A87B72;   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendOutTime_25_C1997C4B4E37C27B5303D38C24A9C0F8;  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESeqSwtichType                                跳转类型_31_F6B5B5BF47457E42D4DFA196EF6C6891;      // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSSeqOptionJumpGroup>           选项跳转组_34_1EEE6BA64BE3BB169DEAA3B37660750F;    // 0x0048(0x0010)(Edit, BlueprintVisible)
	ESeqCameraMode                                相机模式_37_3C7E44F548695030B69751B93ED709AE;      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否隐藏其他UI_39_22B309494CC15ABB41B5C786E8B2B009; // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          是否可跳过_42_FFCF4A5640D8CD0F903D738EA878B91D;    // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          是否可交互_43_260ABC114592F8088FC20DAC1AE172CD;    // 0x005B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FSSequencesNetwrokNode) == 0x000008, "Wrong alignment on FSSequencesNetwrokNode");
static_assert(sizeof(FSSequencesNetwrokNode) == 0x000060, "Wrong size on FSSequencesNetwrokNode");
static_assert(offsetof(FSSequencesNetwrokNode, SeqNodeID_8_0C44D5184E9C897AA3CA8AAEA9E76D19) == 0x000000, "Member 'FSSequencesNetwrokNode::SeqNodeID_8_0C44D5184E9C897AA3CA8AAEA9E76D19' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, PreSeqNodeID_13_05C932D74E8DC1BAD474D1AD560AEF94) == 0x00000C, "Member 'FSSequencesNetwrokNode::PreSeqNodeID_13_05C932D74E8DC1BAD474D1AD560AEF94' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, SeqNodeData_44_6266215844F469543EFA2CB97D91FA70) == 0x000018, "Member 'FSSequencesNetwrokNode::SeqNodeData_44_6266215844F469543EFA2CB97D91FA70' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 是否禁止输入_18_D8F8DC4148F982E9D851E5AB21ED205E) == 0x000038, "Member 'FSSequencesNetwrokNode::是否禁止输入_18_D8F8DC4148F982E9D851E5AB21ED205E' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 是否禁止视角控制_19_8302A4B6442EC67F96D100AD7A85893C) == 0x000039, "Member 'FSSequencesNetwrokNode::是否禁止视角控制_19_8302A4B6442EC67F96D100AD7A85893C' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, BlendInTime_26_41AAC7F6417E901E7D01FB9AA9A87B72) == 0x00003C, "Member 'FSSequencesNetwrokNode::BlendInTime_26_41AAC7F6417E901E7D01FB9AA9A87B72' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, BlendOutTime_25_C1997C4B4E37C27B5303D38C24A9C0F8) == 0x000040, "Member 'FSSequencesNetwrokNode::BlendOutTime_25_C1997C4B4E37C27B5303D38C24A9C0F8' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 跳转类型_31_F6B5B5BF47457E42D4DFA196EF6C6891) == 0x000044, "Member 'FSSequencesNetwrokNode::跳转类型_31_F6B5B5BF47457E42D4DFA196EF6C6891' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 选项跳转组_34_1EEE6BA64BE3BB169DEAA3B37660750F) == 0x000048, "Member 'FSSequencesNetwrokNode::选项跳转组_34_1EEE6BA64BE3BB169DEAA3B37660750F' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 相机模式_37_3C7E44F548695030B69751B93ED709AE) == 0x000058, "Member 'FSSequencesNetwrokNode::相机模式_37_3C7E44F548695030B69751B93ED709AE' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 是否隐藏其他UI_39_22B309494CC15ABB41B5C786E8B2B009) == 0x000059, "Member 'FSSequencesNetwrokNode::是否隐藏其他UI_39_22B309494CC15ABB41B5C786E8B2B009' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 是否可跳过_42_FFCF4A5640D8CD0F903D738EA878B91D) == 0x00005A, "Member 'FSSequencesNetwrokNode::是否可跳过_42_FFCF4A5640D8CD0F903D738EA878B91D' has a wrong offset!");
static_assert(offsetof(FSSequencesNetwrokNode, 是否可交互_43_260ABC114592F8088FC20DAC1AE172CD) == 0x00005B, "Member 'FSSequencesNetwrokNode::是否可交互_43_260ABC114592F8088FC20DAC1AE172CD' has a wrong offset!");

}

