#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThunderGenerator

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.UpdateCloudThunderParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_ThunderGenerator_C_UpdateCloudThunderParameter final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThunderGenerator_C_UpdateCloudThunderParameter) == 0x000008, "Wrong alignment on BP_ThunderGenerator_C_UpdateCloudThunderParameter");
static_assert(sizeof(BP_ThunderGenerator_C_UpdateCloudThunderParameter) == 0x000030, "Wrong size on BP_ThunderGenerator_C_UpdateCloudThunderParameter");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateCloudThunderParameter, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_ThunderGenerator_C_UpdateCloudThunderParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateCloudThunderParameter, CallFunc_Percent_IntInt_ReturnValue) == 0x000004, "Member 'BP_ThunderGenerator_C_UpdateCloudThunderParameter::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateCloudThunderParameter, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_ThunderGenerator_C_UpdateCloudThunderParameter::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateCloudThunderParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'BP_ThunderGenerator_C_UpdateCloudThunderParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateCloudThunderParameter, CallFunc_MakeColor_ReturnValue) == 0x00001C, "Member 'BP_ThunderGenerator_C_UpdateCloudThunderParameter::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.CalculateThunderPosition_Cloud
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ThunderGenerator_C_CalculateThunderPosition_Cloud final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bAttack;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutPosition;                                       // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CloudUV;                                           // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theta;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rand;                                              // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud) == 0x000010, "Wrong alignment on BP_ThunderGenerator_C_CalculateThunderPosition_Cloud");
static_assert(sizeof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud) == 0x0000C0, "Wrong size on BP_ThunderGenerator_C_CalculateThunderPosition_Cloud");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CameraTransform) == 0x000000, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, bAttack) == 0x000030, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::bAttack' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, OutPosition) == 0x000034, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, ReturnValue) == 0x000040, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CloudUV) == 0x000044, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CloudUV' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, Radius) == 0x00004C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::Radius' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, Theta) == 0x000050, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::Theta' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, Rand) == 0x000054, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::Rand' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_BreakTransform_Location) == 0x000058, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_BreakTransform_Rotation) == 0x000064, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_BreakTransform_Scale) == 0x000070, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Percent_IntInt_ReturnValue) == 0x000084, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Cloud, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Cloud::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ForceUpdate
// 0x0018 (0x0018 - 0x0000)
struct BP_ThunderGenerator_C_ForceUpdate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_ThunderConfig_C*                   CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_ForceUpdate) == 0x000008, "Wrong alignment on BP_ThunderGenerator_C_ForceUpdate");
static_assert(sizeof(BP_ThunderGenerator_C_ForceUpdate) == 0x000018, "Wrong size on BP_ThunderGenerator_C_ForceUpdate");
static_assert(offsetof(BP_ThunderGenerator_C_ForceUpdate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ThunderGenerator_C_ForceUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ForceUpdate, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_ThunderGenerator_C_ForceUpdate::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ForceUpdate, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_ThunderGenerator_C_ForceUpdate::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.CalculateThunderPosition_Common
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ThunderGenerator_C_CalculateThunderPosition_Common final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          bAttack;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OutPosition;                                       // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Theta;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rand;                                              // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue_1;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_CalculateThunderPosition_Common) == 0x000010, "Wrong alignment on BP_ThunderGenerator_C_CalculateThunderPosition_Common");
static_assert(sizeof(BP_ThunderGenerator_C_CalculateThunderPosition_Common) == 0x0000A0, "Wrong size on BP_ThunderGenerator_C_CalculateThunderPosition_Common");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CameraTransform) == 0x000000, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, bAttack) == 0x000030, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::bAttack' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, OutPosition) == 0x000034, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, ReturnValue) == 0x000040, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, Radius) == 0x000044, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::Radius' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, Theta) == 0x000048, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::Theta' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, Rand) == 0x00004C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::Rand' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Sin_ReturnValue) == 0x000050, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Cos_ReturnValue) == 0x000054, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_TransformLocation_ReturnValue) == 0x00006C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_RandomFloatInRange_ReturnValue) == 0x000078, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_GetPI_ReturnValue) == 0x00007C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_GetPI_ReturnValue_1) == 0x000080, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_GetPI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000084, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000088, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00008C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000090, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000094, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_RandomFloat_ReturnValue) == 0x000098, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition_Common, CallFunc_Less_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition_Common::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.CalculateThunderPosition
// 0x0060 (0x0060 - 0x0000)
struct BP_ThunderGenerator_C_CalculateThunderPosition final
{
public:
	struct FTransform                             CameraTransform;                                   // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                OutPosition;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttack;                                           // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x003D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateThunderPosition_Cloud_OutPosition; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateThunderPosition_Cloud_ReturnValue; // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateThunderPosition_Common_OutPosition; // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateThunderPosition_Common_ReturnValue; // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_CalculateThunderPosition) == 0x000010, "Wrong alignment on BP_ThunderGenerator_C_CalculateThunderPosition");
static_assert(sizeof(BP_ThunderGenerator_C_CalculateThunderPosition) == 0x000060, "Wrong size on BP_ThunderGenerator_C_CalculateThunderPosition");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, CameraTransform) == 0x000000, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, OutPosition) == 0x000030, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, bAttack) == 0x00003C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::bAttack' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, ReturnValue) == 0x00003D, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, CallFunc_CalculateThunderPosition_Cloud_OutPosition) == 0x000040, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::CallFunc_CalculateThunderPosition_Cloud_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, CallFunc_CalculateThunderPosition_Cloud_ReturnValue) == 0x00004C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::CallFunc_CalculateThunderPosition_Cloud_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, CallFunc_CalculateThunderPosition_Common_OutPosition) == 0x000050, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::CallFunc_CalculateThunderPosition_Common_OutPosition' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, CallFunc_CalculateThunderPosition_Common_ReturnValue) == 0x00005C, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::CallFunc_CalculateThunderPosition_Common_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_CalculateThunderPosition, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'BP_ThunderGenerator_C_CalculateThunderPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.UpdateAudio2D
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) BP_ThunderGenerator_C_UpdateAudio2D final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable; // 0x0008(0x0028)(ConstParm, ZeroConstructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThunderGenerator_C_UpdateAudio2D) == 0x000008, "Wrong alignment on BP_ThunderGenerator_C_UpdateAudio2D");
static_assert(sizeof(BP_ThunderGenerator_C_UpdateAudio2D) == 0x000038, "Wrong size on BP_ThunderGenerator_C_UpdateAudio2D");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateAudio2D, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ThunderGenerator_C_UpdateAudio2D::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateAudio2D, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_ThunderGenerator_C_UpdateAudio2D::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateAudio2D, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_ThunderGenerator_C_UpdateAudio2D::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateAudio2D, ___delegate_Variable) == 0x000008, "Member 'BP_ThunderGenerator_C_UpdateAudio2D::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_UpdateAudio2D, CallFunc_PostEvent_ReturnValue) == 0x000030, "Member 'BP_ThunderGenerator_C_UpdateAudio2D::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnReceiveThunderAttack
// 0x0010 (0x0010 - 0x0000)
struct BP_ThunderGenerator_C_OnReceiveThunderAttack final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAttack;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_OnReceiveThunderAttack) == 0x000004, "Wrong alignment on BP_ThunderGenerator_C_OnReceiveThunderAttack");
static_assert(sizeof(BP_ThunderGenerator_C_OnReceiveThunderAttack) == 0x000010, "Wrong size on BP_ThunderGenerator_C_OnReceiveThunderAttack");
static_assert(offsetof(BP_ThunderGenerator_C_OnReceiveThunderAttack, Location) == 0x000000, "Member 'BP_ThunderGenerator_C_OnReceiveThunderAttack::Location' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_OnReceiveThunderAttack, bAttack) == 0x00000C, "Member 'BP_ThunderGenerator_C_OnReceiveThunderAttack::bAttack' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnUpdateThunderEffect
// 0x0004 (0x0004 - 0x0000)
struct BP_ThunderGenerator_C_OnUpdateThunderEffect final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThunderGenerator_C_OnUpdateThunderEffect) == 0x000004, "Wrong alignment on BP_ThunderGenerator_C_OnUpdateThunderEffect");
static_assert(sizeof(BP_ThunderGenerator_C_OnUpdateThunderEffect) == 0x000004, "Wrong size on BP_ThunderGenerator_C_OnUpdateThunderEffect");
static_assert(offsetof(BP_ThunderGenerator_C_OnUpdateThunderEffect, DeltaSeconds) == 0x000000, "Member 'BP_ThunderGenerator_C_OnUpdateThunderEffect::DeltaSeconds' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ThunderGenerator_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThunderGenerator_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ThunderGenerator_C_ReceiveEndPlay");
static_assert(sizeof(BP_ThunderGenerator_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ThunderGenerator_C_ReceiveEndPlay");
static_assert(offsetof(BP_ThunderGenerator_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ThunderGenerator_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.OnReceiveThunderTrigger
// 0x0040 (0x0040 - 0x0000)
struct BP_ThunderGenerator_C_OnReceiveThunderTrigger final
{
public:
	class AThunderTrigger*                        Trigger;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraTransform;                                   // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_OnReceiveThunderTrigger) == 0x000010, "Wrong alignment on BP_ThunderGenerator_C_OnReceiveThunderTrigger");
static_assert(sizeof(BP_ThunderGenerator_C_OnReceiveThunderTrigger) == 0x000040, "Wrong size on BP_ThunderGenerator_C_OnReceiveThunderTrigger");
static_assert(offsetof(BP_ThunderGenerator_C_OnReceiveThunderTrigger, Trigger) == 0x000000, "Member 'BP_ThunderGenerator_C_OnReceiveThunderTrigger::Trigger' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_OnReceiveThunderTrigger, CameraTransform) == 0x000010, "Member 'BP_ThunderGenerator_C_OnReceiveThunderTrigger::CameraTransform' has a wrong offset!");

// Function BP_ThunderGenerator.BP_ThunderGenerator_C.ExecuteUbergraph_BP_ThunderGenerator
// 0x01B0 (0x01B0 - 0x0000)
struct BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAttack;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Float_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Float_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Float_ReturnValue_2;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AThunderTrigger*                        K2Node_Event_Trigger;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_CameraTransform;                      // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue_1;  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator) == 0x000010, "Wrong alignment on BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator");
static_assert(sizeof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator) == 0x0001B0, "Wrong size on BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, EntryPoint) == 0x000000, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_Location) == 0x000008, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_bAttack) == 0x000014, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_bAttack' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_EndPlayReason) == 0x00001C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue_1) == 0x00001D, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakTransform_Location) == 0x000020, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakTransform_Rotation) == 0x00002C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakTransform_Scale) == 0x000038, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_InverseTransformDirection_ReturnValue) == 0x000050, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Normal_ReturnValue) == 0x00005C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Normal_ReturnValue_1) == 0x000068, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_X) == 0x000074, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Y) == 0x000078, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Z) == 0x00007C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_MakeStruct_LinearColor) == 0x000080, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_GetValue_Float_ReturnValue) == 0x000094, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_GetValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_GetValue_Float_ReturnValue_1) == 0x00009C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_GetValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A5, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_GetValue_Float_ReturnValue_2) == 0x0000A8, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_GetValue_Float_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_Trigger) == 0x0000B0, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_Trigger' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_Event_CameraTransform) == 0x0000C0, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_Event_CameraTransform' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Y_1) == 0x0000F4, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_MapRangeClamped_ReturnValue) == 0x0000FC, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000100, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_MakeColor_ReturnValue) == 0x000104, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000114, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector2D_X) == 0x00011C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector2D_Y) == 0x000120, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_MakeVector_ReturnValue) == 0x000124, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_InverseTransformDirection_ReturnValue_1) == 0x000130, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_InverseTransformDirection_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_LinearColorLerp_ReturnValue) == 0x00013C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Normal_ReturnValue_2) == 0x00014C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Normal_ReturnValue_3) == 0x000158, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_X_2) == 0x000164, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Y_2) == 0x000168, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_BreakVector_Z_2) == 0x00016C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, K2Node_MakeStruct_LinearColor_1) == 0x000170, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue_2) == 0x000180, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue_3) == 0x000181, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue_4) == 0x000182, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_PostEventAtLocation_ReturnValue) == 0x000184, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000188, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Subtract_IntInt_ReturnValue) == 0x00019C, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_IsValid_ReturnValue_5) == 0x0001A0, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Min_ReturnValue) == 0x0001A4, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001A8, "Member 'BP_ThunderGenerator_C_ExecuteUbergraph_BP_ThunderGenerator::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

