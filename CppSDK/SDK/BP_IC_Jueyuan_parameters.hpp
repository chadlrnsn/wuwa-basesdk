#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IC_Jueyuan

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "sInputCommand_structs.hpp"


namespace SDK::Params
{

// Function BP_IC_Jueyuan.BP_IC_Jueyuan_C.攻击按下
// 0x0298 (0x0298 - 0x0000)
struct BP_IC_Jueyuan_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagCount_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0048(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_True_if_break_was_hit_Variable_1;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagCount_ReturnValue_1;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0090(0x0020)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_1;           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x00E8(0x0020)()
	int32                                         ___int_Variable_2;                                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags_1; // 0x0110(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0120(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0138(0x0020)()
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0174(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x0188(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x019C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x01B0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x01F4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_2;           // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_3;                                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_2;                         // 0x022C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x0238(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3;  // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IC_Jueyuan_C_攻击按下) == 0x000008, "Wrong alignment on BP_IC_Jueyuan_C_攻击按下");
static_assert(sizeof(BP_IC_Jueyuan_C_攻击按下) == 0x000298, "Wrong size on BP_IC_Jueyuan_C_攻击按下");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, time) == 0x000000, "Member 'BP_IC_Jueyuan_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_IC_Jueyuan_C_攻击按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'BP_IC_Jueyuan_C_攻击按下::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x00002E, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CanResponseInput_ReturnValue) == 0x00002F, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000030, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000035, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Loop_Counter_Variable) == 0x000038, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetTagCount_ReturnValue) == 0x00003C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000048, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x00005C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x00005D, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000060, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000070, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanOR_ReturnValue) == 0x000071, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Not_PreBool_ReturnValue_1) == 0x000072, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___bool_True_if_break_was_hit_Variable_1) == 0x000073, "Member 'BP_IC_Jueyuan_C_攻击按下::___bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Not_PreBool_ReturnValue_2) == 0x000074, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x000075, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetTagCount_ReturnValue_1) == 0x000078, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetTagCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Array_Index_Variable) == 0x000080, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Variable) == 0x000084, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Variable_1) == 0x000088, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00008D, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00008E, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000090, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0000B8, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C8, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x0000D0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000D1, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_IsMovingOnGround_ReturnValue_1) == 0x0000D2, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_IsMovingOnGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000D3, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D4, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D5, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Loop_Counter_Variable_1) == 0x0000D8, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E4, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0000E8, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Variable_2) == 0x000108, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BreakGameplayTagContainer_GameplayTags_1) == 0x000110, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BreakGameplayTagContainer_GameplayTags_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Get_Item) == 0x000120, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Length_ReturnValue_1) == 0x00012C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000138, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanAND_ReturnValue_3) == 0x000158, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000160, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000170, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000174, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x000188, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x00019C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x0001B0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, K2Node_MakeArray_Array) == 0x0001C8, "Member 'BP_IC_Jueyuan_C_攻击按下::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0001E0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0001F0, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001F1, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x0001F4, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000208, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_IsMovingOnGround_ReturnValue_2) == 0x000209, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_IsMovingOnGround_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00020A, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanAND_ReturnValue_4) == 0x00020B, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_BooleanOR_ReturnValue_3) == 0x00020C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000210, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000220, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Array_Index_Variable_1) == 0x000224, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, ___int_Variable_3) == 0x000228, "Member 'BP_IC_Jueyuan_C_攻击按下::___int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Get_Item_2) == 0x00022C, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x000238, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, K2Node_MakeArray_Array_1) == 0x000250, "Member 'BP_IC_Jueyuan_C_攻击按下::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_Get_Item_3) == 0x000260, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000268, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000278, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000279, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000280, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击按下, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000290, "Member 'BP_IC_Jueyuan_C_攻击按下::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");

// Function BP_IC_Jueyuan.BP_IC_Jueyuan_C.技能1按下
// 0x004C (0x004C - 0x0000)
struct BP_IC_Jueyuan_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IC_Jueyuan_C_技能1按下) == 0x000004, "Wrong alignment on BP_IC_Jueyuan_C_技能1按下");
static_assert(sizeof(BP_IC_Jueyuan_C_技能1按下) == 0x00004C, "Wrong size on BP_IC_Jueyuan_C_技能1按下");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, time) == 0x000000, "Member 'BP_IC_Jueyuan_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_IC_Jueyuan_C_技能1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_CanResponseInput_ReturnValue) == 0x00002C, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000030, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x000045, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000046, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_BooleanAND_ReturnValue) == 0x000047, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_技能1按下, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'BP_IC_Jueyuan_C_技能1按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_IC_Jueyuan.BP_IC_Jueyuan_C.大招按下
// 0x0040 (0x0040 - 0x0000)
struct BP_IC_Jueyuan_C_大招按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0020(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IC_Jueyuan_C_大招按下) == 0x000004, "Wrong alignment on BP_IC_Jueyuan_C_大招按下");
static_assert(sizeof(BP_IC_Jueyuan_C_大招按下) == 0x000040, "Wrong size on BP_IC_Jueyuan_C_大招按下");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, time) == 0x000000, "Member 'BP_IC_Jueyuan_C_大招按下::time' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, ReturnValue) == 0x000004, "Member 'BP_IC_Jueyuan_C_大招按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000018, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_CanResponseInput_ReturnValue) == 0x00001C, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000020, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000034, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00003B, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_大招按下, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'BP_IC_Jueyuan_C_大招按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_IC_Jueyuan.BP_IC_Jueyuan_C.攻击长按
// 0x0118 (0x0118 - 0x0000)
struct BP_IC_Jueyuan_C_攻击长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0048(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x007C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0090(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x00C4(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x00E4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IC_Jueyuan_C_攻击长按) == 0x000008, "Wrong alignment on BP_IC_Jueyuan_C_攻击长按");
static_assert(sizeof(BP_IC_Jueyuan_C_攻击长按) == 0x000118, "Wrong size on BP_IC_Jueyuan_C_攻击长按");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, time) == 0x000000, "Member 'BP_IC_Jueyuan_C_攻击长按::time' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, ReturnValue) == 0x000004, "Member 'BP_IC_Jueyuan_C_攻击长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue) == 0x000018, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000030, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000048, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000068, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000078, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x00007C, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000090, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0000B0, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0000C0, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_CanResponseInput_ReturnValue) == 0x0000C1, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C2, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000C3, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc______ReturnValue) == 0x0000C4, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x0000D8, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x0000DC, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x0000E4, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000100, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000110, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000111, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_BooleanOR_ReturnValue) == 0x000112, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_IsMovingOnGround_ReturnValue) == 0x000113, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000114, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000115, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_BooleanAND_ReturnValue) == 0x000116, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IC_Jueyuan_C_攻击长按, CallFunc_BooleanOR_ReturnValue_1) == 0x000117, "Member 'BP_IC_Jueyuan_C_攻击长按::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

