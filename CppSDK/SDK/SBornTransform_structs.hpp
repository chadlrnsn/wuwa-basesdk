#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SBornTransform

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EOffsetTargetType_structs.hpp"
#include "EBornRotateType_structs.hpp"
#include "ECommonAxis_structs.hpp"


namespace SDK
{

// UserDefinedStruct SBornTransform.SBornTransform
// 0x0028 (0x0028 - 0x0000)
struct FSBornTransform final
{
public:
	struct FVector                                Offset_2_0C1F722D464060B701B5F78E09FED354;         // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOffsetTargetType                             OffsetTargetType_6_59DED0A3420D61444F3CE5AC9D9C8825; // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBornRotateType                               RotateType_9_511E9730418BD1C63041789F8320AA49;     // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RotateCameraDistance_13_C782BA024948C22CDB5AB4A07FE7A16E; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECommonAxis>                           RotateInvalidAxis_17_0282A88D42227401723F999D9018D13A; // 0x0018(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(FSBornTransform) == 0x000008, "Wrong alignment on FSBornTransform");
static_assert(sizeof(FSBornTransform) == 0x000028, "Wrong size on FSBornTransform");
static_assert(offsetof(FSBornTransform, Offset_2_0C1F722D464060B701B5F78E09FED354) == 0x000000, "Member 'FSBornTransform::Offset_2_0C1F722D464060B701B5F78E09FED354' has a wrong offset!");
static_assert(offsetof(FSBornTransform, OffsetTargetType_6_59DED0A3420D61444F3CE5AC9D9C8825) == 0x00000C, "Member 'FSBornTransform::OffsetTargetType_6_59DED0A3420D61444F3CE5AC9D9C8825' has a wrong offset!");
static_assert(offsetof(FSBornTransform, RotateType_9_511E9730418BD1C63041789F8320AA49) == 0x00000D, "Member 'FSBornTransform::RotateType_9_511E9730418BD1C63041789F8320AA49' has a wrong offset!");
static_assert(offsetof(FSBornTransform, RotateCameraDistance_13_C782BA024948C22CDB5AB4A07FE7A16E) == 0x000010, "Member 'FSBornTransform::RotateCameraDistance_13_C782BA024948C22CDB5AB4A07FE7A16E' has a wrong offset!");
static_assert(offsetof(FSBornTransform, RotateInvalidAxis_17_0282A88D42227401723F999D9018D13A) == 0x000018, "Member 'FSBornTransform::RotateInvalidAxis_17_0282A88D42227401723F999D9018D13A' has a wrong offset!");

}

