#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Mascot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroCurve_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Mascot.BP_Mascot_C
// 0x00E0 (0x0390 - 0x02B0)
class ABP_Mascot_C final : public AActor
{
public:
	class UABPC_Seq_Body_V2_C*                    ABPC_Body_V2;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Add_Spine;                                         // 0x02C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Spine_Head;                                    // 0x02D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMesh*                          Mesh;                                              // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedCurveValue>               NamedCurves;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible)
	struct FKuroCurveFloat                        KuroFixCurve;                                      // 0x02F8(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         TalkID;                                            // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TalkID_SP;                                         // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void GetFixValue(float inValue, float* FixValue);
	void HasFixCurve(class FName CheckName, bool* Ret, class FName* FixName);
	void CalcAllCurve(TArray<struct FNamedCurveValue>* Ret);
	void CalcAllCurve_2(TArray<struct FNamedCurveValue>* Ret);
	bool SetAnimDataVector(const TMap<class FName, struct FVector>& VectorCurveData);
	bool SetAnimDataFloat(const TArray<struct FNamedCurveValue>& FloatCurveData);
	TArray<class FName> GetSupportGroupNames();
	bool GetAnimDataVector(TMap<class FName, struct FVector>* VectorCurveData);
	bool GetAnimDataFloat(TArray<struct FNamedCurveValue>* FloatCurveData);
	void GetAddSpineValue(struct FRotator* AddSpine);
	void GetAddSpineHeadValue(struct FRotator* AddSpineHead);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Mascot_C">();
	}
	static class ABP_Mascot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Mascot_C>();
	}
};
static_assert(alignof(ABP_Mascot_C) == 0x000008, "Wrong alignment on ABP_Mascot_C");
static_assert(sizeof(ABP_Mascot_C) == 0x000390, "Wrong size on ABP_Mascot_C");
static_assert(offsetof(ABP_Mascot_C, ABPC_Body_V2) == 0x0002B0, "Member 'ABP_Mascot_C::ABPC_Body_V2' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, SkeletalMesh) == 0x0002B8, "Member 'ABP_Mascot_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, DefaultSceneRoot) == 0x0002C0, "Member 'ABP_Mascot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, Add_Spine) == 0x0002C8, "Member 'ABP_Mascot_C::Add_Spine' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, Add_Spine_Head) == 0x0002D4, "Member 'ABP_Mascot_C::Add_Spine_Head' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, Mesh) == 0x0002E0, "Member 'ABP_Mascot_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, NamedCurves) == 0x0002E8, "Member 'ABP_Mascot_C::NamedCurves' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, KuroFixCurve) == 0x0002F8, "Member 'ABP_Mascot_C::KuroFixCurve' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, TalkID) == 0x000388, "Member 'ABP_Mascot_C::TalkID' has a wrong offset!");
static_assert(offsetof(ABP_Mascot_C, TalkID_SP) == 0x00038C, "Member 'ABP_Mascot_C::TalkID_SP' has a wrong offset!");

}

