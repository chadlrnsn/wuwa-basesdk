#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsLguiEventSystemActor

#include "Basic.hpp"

#include "TsLguiEventSystemActor_classes.hpp"
#include "TsLguiEventSystemActor_parameters.hpp"


namespace SDK
{

// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputTrigger
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    triggerPress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// EMouseButtonType                        mouseButtonType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ATsLguiEventSystemActor_C::InputTrigger(bool triggerPress, EMouseButtonType mouseButtonType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputTrigger");

	Params::TsLguiEventSystemActor_C_InputTrigger Parms{};

	Parms.triggerPress = triggerPress;
	Parms.mouseButtonType = mouseButtonType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputNavigation
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ELGUINavigationDirection                direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    pressOrRelease                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// bool                                    forceNavigation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

void ATsLguiEventSystemActor_C::InputNavigation(ELGUINavigationDirection direction, bool pressOrRelease, bool forceNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputNavigation");

	Params::TsLguiEventSystemActor_C_InputNavigation Parms{};

	Parms.direction = direction;
	Parms.pressOrRelease = pressOrRelease;
	Parms.forceNavigation = forceNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputTriggerForNavigation
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    triggerPress                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

void ATsLguiEventSystemActor_C::InputTriggerForNavigation(bool triggerPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputTriggerForNavigation");

	Params::TsLguiEventSystemActor_C_InputTriggerForNavigation Parms{};

	Parms.triggerPress = triggerPress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputScroll
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   axisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATsLguiEventSystemActor_C::InputScroll(float axisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputScroll");

	Params::TsLguiEventSystemActor_C_InputScroll Parms{};

	Parms.axisValue = axisValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputTouchTrigger
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    touchPress                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
// int32                                   touchId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   touchPointPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ATsLguiEventSystemActor_C::InputTouchTrigger(bool touchPress, int32 touchId, const struct FVector& touchPointPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputTouchTrigger");

	Params::TsLguiEventSystemActor_C_InputTouchTrigger Parms{};

	Parms.touchPress = touchPress;
	Parms.touchId = touchId;
	Parms.touchPointPosition = std::move(touchPointPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.InputTouchMove
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   touchId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   touchPointPosition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ATsLguiEventSystemActor_C::InputTouchMove(int32 touchId, const struct FVector& touchPointPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "InputTouchMove");

	Params::TsLguiEventSystemActor_C_InputTouchMove Parms{};

	Parms.touchId = touchId;
	Parms.touchPointPosition = std::move(touchPointPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.GetNowHitComponent
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUIItem*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

class UUIItem* ATsLguiEventSystemActor_C::GetNowHitComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "GetNowHitComponent");

	Params::TsLguiEventSystemActor_C_GetNowHitComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.GetPointerEventData
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   pointerId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// bool                                    createIfNotExist                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ULGUIPointerEventData*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

class ULGUIPointerEventData* ATsLguiEventSystemActor_C::GetPointerEventData(float pointerId, bool createIfNotExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "GetPointerEventData");

	Params::TsLguiEventSystemActor_C_GetPointerEventData Parms{};

	Parms.pointerId = pointerId;
	Parms.createIfNotExist = createIfNotExist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TsLguiEventSystemActor.TsLguiEventSystemActor_C.IsPointerEventDataLineTrace
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULGUIPointerEventData*            pointerEventData                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper)

bool ATsLguiEventSystemActor_C::IsPointerEventDataLineTrace(class ULGUIPointerEventData* pointerEventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsLguiEventSystemActor_C", "IsPointerEventDataLineTrace");

	Params::TsLguiEventSystemActor_C_IsPointerEventDataLineTrace Parms{};

	Parms.pointerEventData = pointerEventData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

