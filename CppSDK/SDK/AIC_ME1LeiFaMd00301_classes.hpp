#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_ME1LeiFaMd00301

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SAiConditions_structs.hpp"
#include "AIC_AICommon_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIC_ME1LeiFaMd00301.AIC_ME1LeiFaMd00301_C
// 0x0458 (0x0BE0 - 0x0788)
class AAIC_ME1LeiFaMd00301_C final : public AAIC_AICommon_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AIC_ME1LeiFaMd00301_C;              // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSAiConditions                         狂暴生效检测;                                      // 0x0790(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         满韧检测;                                          // 0x0848(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         空韧检测;                                          // 0x0900(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         飞鸟计数检测;                                      // 0x09B8(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         闪电计数检测;                                      // 0x0A70(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         闪现计数检测;                                      // 0x0B28(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AIC_ME1LeiFaMd00301(int32 EntryPoint);
	void OnStart();
	void 闪电计数(bool bContent);
	void 飞鸟计数(bool bContent);
	void 韧性击空(bool bContent);
	void 韧性恢复满(bool bContent);
	void 狂暴(bool bContent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIC_ME1LeiFaMd00301_C">();
	}
	static class AAIC_ME1LeiFaMd00301_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIC_ME1LeiFaMd00301_C>();
	}
};
static_assert(alignof(AAIC_ME1LeiFaMd00301_C) == 0x000008, "Wrong alignment on AAIC_ME1LeiFaMd00301_C");
static_assert(sizeof(AAIC_ME1LeiFaMd00301_C) == 0x000BE0, "Wrong size on AAIC_ME1LeiFaMd00301_C");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, UberGraphFrame_AIC_ME1LeiFaMd00301_C) == 0x000788, "Member 'AAIC_ME1LeiFaMd00301_C::UberGraphFrame_AIC_ME1LeiFaMd00301_C' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 狂暴生效检测) == 0x000790, "Member 'AAIC_ME1LeiFaMd00301_C::狂暴生效检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 满韧检测) == 0x000848, "Member 'AAIC_ME1LeiFaMd00301_C::满韧检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 空韧检测) == 0x000900, "Member 'AAIC_ME1LeiFaMd00301_C::空韧检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 飞鸟计数检测) == 0x0009B8, "Member 'AAIC_ME1LeiFaMd00301_C::飞鸟计数检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 闪电计数检测) == 0x000A70, "Member 'AAIC_ME1LeiFaMd00301_C::闪电计数检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LeiFaMd00301_C, 闪现计数检测) == 0x000B28, "Member 'AAIC_ME1LeiFaMd00301_C::闪现计数检测' has a wrong offset!");

}

