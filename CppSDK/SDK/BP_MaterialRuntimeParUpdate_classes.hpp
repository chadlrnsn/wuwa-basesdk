#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MaterialRuntimeParUpdate

#include "Basic.hpp"

#include "KuroCurve_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MaterialRuntimeParUpdate.BP_MaterialRuntimeParUpdate_C
// 0x00D8 (0x0398 - 0x02C0)
class ABP_MaterialRuntimeParUpdate_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Target;                                            // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Material_Index;                                    // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewVar_0;                                          // 0x02DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemMaterialControllerActorData_C*     DA;                                                // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FKuroCurveFloat>     Custom_Scalar_Par_Map;                             // 0x02F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DateTime;                                          // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FloatParam_0;                                      // 0x034C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatParam_Value_0;                                // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   VectorParam_0;                                     // 0x035C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           VectorParam_Value_0;                               // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              Materials;                                         // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPlay;                                            // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_Speed;                                        // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDurationTime;                                   // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timer_0;                                           // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MaterialRuntimeParUpdate(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Set_Initialize();
	void Play();
	void CleanArray();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MaterialRuntimeParUpdate_C">();
	}
	static class ABP_MaterialRuntimeParUpdate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MaterialRuntimeParUpdate_C>();
	}
};
static_assert(alignof(ABP_MaterialRuntimeParUpdate_C) == 0x000008, "Wrong alignment on ABP_MaterialRuntimeParUpdate_C");
static_assert(sizeof(ABP_MaterialRuntimeParUpdate_C) == 0x000398, "Wrong size on ABP_MaterialRuntimeParUpdate_C");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_MaterialRuntimeParUpdate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Target) == 0x0002C8, "Member 'ABP_MaterialRuntimeParUpdate_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_MaterialRuntimeParUpdate_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Material_Index) == 0x0002D8, "Member 'ABP_MaterialRuntimeParUpdate_C::Material_Index' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, NewVar_0) == 0x0002DC, "Member 'ABP_MaterialRuntimeParUpdate_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, DA) == 0x0002F0, "Member 'ABP_MaterialRuntimeParUpdate_C::DA' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Custom_Scalar_Par_Map) == 0x0002F8, "Member 'ABP_MaterialRuntimeParUpdate_C::Custom_Scalar_Par_Map' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, DateTime) == 0x000348, "Member 'ABP_MaterialRuntimeParUpdate_C::DateTime' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, FloatParam_0) == 0x00034C, "Member 'ABP_MaterialRuntimeParUpdate_C::FloatParam_0' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, FloatParam_Value_0) == 0x000358, "Member 'ABP_MaterialRuntimeParUpdate_C::FloatParam_Value_0' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, VectorParam_0) == 0x00035C, "Member 'ABP_MaterialRuntimeParUpdate_C::VectorParam_0' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, VectorParam_Value_0) == 0x000368, "Member 'ABP_MaterialRuntimeParUpdate_C::VectorParam_Value_0' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Materials) == 0x000378, "Member 'ABP_MaterialRuntimeParUpdate_C::Materials' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, IsPlay) == 0x000388, "Member 'ABP_MaterialRuntimeParUpdate_C::IsPlay' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Time_Speed) == 0x00038C, "Member 'ABP_MaterialRuntimeParUpdate_C::Time_Speed' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, MaxDurationTime) == 0x000390, "Member 'ABP_MaterialRuntimeParUpdate_C::MaxDurationTime' has a wrong offset!");
static_assert(offsetof(ABP_MaterialRuntimeParUpdate_C, Timer_0) == 0x000394, "Member 'ABP_MaterialRuntimeParUpdate_C::Timer_0' has a wrong offset!");

}

