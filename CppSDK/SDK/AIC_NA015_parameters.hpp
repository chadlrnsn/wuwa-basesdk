#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_NA015

#include "Basic.hpp"

#include "SHitInformation_structs.hpp"


namespace SDK::Params
{

// Function AIC_NA015.AIC_NA015_C.ExecuteUbergraph_AIC_NA015
// 0x08E0 (0x08E0 - 0x0000)
struct AIC_NA015_C_ExecuteUbergraph_AIC_NA015 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     K2Node_CustomEvent___;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitInformation                       K2Node_CustomEvent_____;                           // 0x0010(0x08C8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015) == 0x000008, "Wrong alignment on AIC_NA015_C_ExecuteUbergraph_AIC_NA015");
static_assert(sizeof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015) == 0x0008E0, "Wrong size on AIC_NA015_C_ExecuteUbergraph_AIC_NA015");
static_assert(offsetof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015, EntryPoint) == 0x000000, "Member 'AIC_NA015_C_ExecuteUbergraph_AIC_NA015::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015, K2Node_CustomEvent___) == 0x000008, "Member 'AIC_NA015_C_ExecuteUbergraph_AIC_NA015::K2Node_CustomEvent___' has a wrong offset!");
static_assert(offsetof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015, K2Node_CustomEvent_____) == 0x000010, "Member 'AIC_NA015_C_ExecuteUbergraph_AIC_NA015::K2Node_CustomEvent_____' has a wrong offset!");
static_assert(offsetof(AIC_NA015_C_ExecuteUbergraph_AIC_NA015, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0008D8, "Member 'AIC_NA015_C_ExecuteUbergraph_AIC_NA015::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AIC_NA015.AIC_NA015_C.受击
// 0x08D0 (0x08D0 - 0x0000)
struct AIC_NA015_C_受击 final
{
public:
	class ATsBaseCharacter_C*                     角色;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitInformation                       受击数据;                                          // 0x0008(0x08C8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AIC_NA015_C_受击) == 0x000008, "Wrong alignment on AIC_NA015_C_受击");
static_assert(sizeof(AIC_NA015_C_受击) == 0x0008D0, "Wrong size on AIC_NA015_C_受击");
static_assert(offsetof(AIC_NA015_C_受击, 角色) == 0x000000, "Member 'AIC_NA015_C_受击::角色' has a wrong offset!");
static_assert(offsetof(AIC_NA015_C_受击, 受击数据) == 0x000008, "Member 'AIC_NA015_C_受击::受击数据' has a wrong offset!");

}

