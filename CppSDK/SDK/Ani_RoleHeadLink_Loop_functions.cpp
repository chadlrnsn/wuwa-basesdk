#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ani_RoleHeadLink_Loop

#include "Basic.hpp"

#include "Ani_RoleHeadLink_Loop_classes.hpp"
#include "Ani_RoleHeadLink_Loop_parameters.hpp"


namespace SDK
{

// Function Ani_RoleHeadLink_Loop.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUIContainerActor*                RoleQTEBar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ani_RoleHeadLink_Loop::USequenceDirector_C::SequenceEvent__ENTRYPOINTSequenceDirector_0(class AUIContainerActor* RoleQTEBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceDirector_C", "SequenceEvent__ENTRYPOINTSequenceDirector_0");

	Params::SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 Parms{};

	Parms.RoleQTEBar = RoleQTEBar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ani_RoleHeadLink_Loop.SequenceDirector_C.RoleQTEBar_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AUIContainerActor*                RoleQTEBar                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    sequenceName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// const class FString&                    eventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void Ani_RoleHeadLink_Loop::USequenceDirector_C::RoleQTEBar_Event_0(class AUIContainerActor* RoleQTEBar, const class FString& sequenceName, const class FString& eventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceDirector_C", "RoleQTEBar_Event_0");

	Params::SequenceDirector_C_RoleQTEBar_Event_0 Parms{};

	Parms.RoleQTEBar = RoleQTEBar;
	Parms.sequenceName = std::move(sequenceName);
	Parms.eventName = std::move(eventName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ani_RoleHeadLink_Loop.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Ani_RoleHeadLink_Loop::USequenceDirector_C::ExecuteUbergraph_SequenceDirector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SequenceDirector_C", "ExecuteUbergraph_SequenceDirector");

	Params::SequenceDirector_C_ExecuteUbergraph_SequenceDirector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

