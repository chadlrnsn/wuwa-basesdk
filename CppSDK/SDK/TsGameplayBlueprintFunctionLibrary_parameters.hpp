#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsGameplayBlueprintFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EFishingSkillType_structs.hpp"
#include "SCharacterLocationsAndRadius_structs.hpp"
#include "SSkillBehaviorAction_structs.hpp"
#include "ECharacterLoadType_structs.hpp"
#include "EMorphType_structs.hpp"
#include "Engine_structs.hpp"
#include "EHookInteractTypeBp_structs.hpp"
#include "EVisionType_structs.hpp"
#include "SSkillBehaviorCondition_structs.hpp"
#include "EHitAnim_structs.hpp"
#include "ESkillTargetDirection_structs.hpp"
#include "SVisionCounterAttack_structs.hpp"
#include "EAimViewState_structs.hpp"
#include "ECharViewDirectionState_structs.hpp"
#include "ECharParentMoveState_structs.hpp"
#include "ECharState_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "SCounterAttackBuff_structs.hpp"
#include "SCounterAttack_structs.hpp"
#include "SHitInformation_structs.hpp"


namespace SDK::Params
{

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ContainsTag
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ContainsTag final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ContainsTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ContainsTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ContainsTag, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ContainsTag::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTag final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTagWithDuration
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, duration) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::duration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, tag) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagWithDuration::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddTagByName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddTagByName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 tagName;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddTagByName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddTagByName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, tagName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::tagName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddTagByName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddTagByName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveTag final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveTagByName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 tagName;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, tagName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::tagName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveTagByName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsLogicAutonomousProxy
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsLogicAutonomousProxy::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveActiveGameplayEffect
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            handle;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         stacksToRemove;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, stacksToRemove) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::stacksToRemove' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveActiveGameplayEffect::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveBuffByTag
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffByTag::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddPassiveSkill
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         passiveSkillId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, passiveSkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::passiveSkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddPassiveSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemovePassiveSkill
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         passiveSkillId;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, passiveSkillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::passiveSkillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemovePassiveSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddBuffForDebug
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug final
{
public:
	int32                                         instigatorEntityId;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         targetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, instigatorEntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::instigatorEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, targetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::targetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffForDebug::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveBuffById
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         stackCount;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, stackCount) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::stackCount' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveBuffById::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffCountById
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         buffId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          enforceOnGoingCheck;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, buffId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, enforceOnGoingCheck) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::enforceOnGoingCheck' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffCountById::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddGameplayCueLocal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         cueId;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, duration) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::duration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, cueId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::cueId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddGameplayCueLocal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetGeDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGeDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetTagDebugStrings
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetTagDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDebugStrings
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 buffStr;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, buffStr) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::buffStr' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetShieldDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPassiveSkillDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPassiveSkillDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetShieldValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetShieldValue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         shieldCid;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetShieldValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetShieldValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, shieldCid) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::shieldCid' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetShieldValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetShieldValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeDebugString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeDebugString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAllAttributeDebugStrings
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllAttributeDebugStrings::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerBuffString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerBuffString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerTagString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerTagString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerTagString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerTagString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerTagString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerTagString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerAttributeString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerAttributeString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerPartString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerPartString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerPartString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerPartString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerPartString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerPartString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerHateString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerHateString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerHateString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerHateString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerHateString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerHateString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerShieldString
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerShieldString::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ServerDebugInfoRequest
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ServerDebugInfoRequest::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetServerDebugInfoDirty
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetServerDebugInfoDirty::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetServerDebugInfoDirty
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          val;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, val) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetServerDebugInfoDirty::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DebugResetBaseVal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         val;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, val) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetBaseVal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DebugResetFormationValue
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue final
{
public:
	int32                                         id;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         val;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, id) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, val) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DebugResetFormationValue::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.Record
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_Record final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          record;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_Record) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_Record");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_Record) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_Record");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, record) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::record' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_Record, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_Record::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshEntityListView
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView final
{
public:
	class UListView*                              listView;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView, listView) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView::listView' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityListView::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshEntityComboBox
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox final
{
public:
	class UComboBoxString*                        comboBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox, comboBox) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox::comboBox' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshEntityComboBox::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEntityComboBox
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox final
{
public:
	class UComboBoxString*                        comboBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         entityId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, comboBox) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::comboBox' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, entityId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityComboBox::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDebugEntityId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugEntityId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDebugEntityId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId, ReturnValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDebugEntityId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RefreshBuffListView
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UListView*                              listView;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 filterStr;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, listView) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::listView' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, filterStr) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::filterStr' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_RefreshBuffListView::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffIdByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffIdByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffServerIdByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffServerIdByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDescByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDescByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffActivateByHandle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffActivateByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffInstigatorStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffInstigatorStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffPeriodStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffPeriodStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDurationStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDurationProgress
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDurationProgress::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffLivingStatusStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLivingStatusStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffLevelStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffLevelStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffStackStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffStackStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBuffDebugStringByHandle
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         handle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, handle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::handle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBuffDebugStringByHandle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDistance
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDistance final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         max_0;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDistance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDistance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDistance) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDistance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, max_0) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::max_0' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDistance, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDistance::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAllMovementHistory
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAllMovementHistory::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeCurrentValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         attributeId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, attributeId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::attributeId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeCurrentValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAttributeBaseValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         attributeId;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, attributeId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::attributeId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAttributeBaseValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetRageModeId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetRageModeId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetRageModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetRageModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetRageModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetRageModeId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetHardnessModeId
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetHardnessModeId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnHit
// 0x08D8 (0x08D8 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnHit final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSHitInformation                       hitData;                                           // 0x0008(0x08C8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x08D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnHit) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnHit");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnHit) == 0x0008D8, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnHit");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, hitData) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::hitData' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnHit, __WorldContext) == 0x0008D0, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnHit::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetBeHitIgnoreRotate
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ignoreRotate;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, ignoreRotate) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::ignoreRotate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetBeHitIgnoreRotate::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CheckHasPart
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CheckHasPart final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CheckHasPart");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CheckHasPart");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CheckHasPart, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CheckHasPart::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPartRemainedLife
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPartRemainedLife::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetPartLife
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetPartLife final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           tag;                                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetPartLife");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetPartLife");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, tag) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetPartLife, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetPartLife::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ActiveStiff
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ActiveStiff final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ActiveStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ActiveStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActiveStiff::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActiveStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActiveStiff::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeActiveStiff
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeActiveStiff::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetAcceptedNewBeHitAndReset
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetAcceptedNewBeHitAndReset::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetEnterFkAndReset
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFkAndReset::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsStiff
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsStiff final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsStiff) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsStiff");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsStiff) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsStiff");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsStiff, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsStiff::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetRageModeId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetRageModeId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetRageModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetRageModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRageModeId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRageModeId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHardnessModeId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHardnessModeId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitBone
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitBone::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetToughDecreaseValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToughDecreaseValue::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCounterAttackInfoInternal
// 0x03F0 (0x03F0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCounterAttack                        ReturnValue;                                       // 0x0010(0x03E0)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal) == 0x0003F0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCounterAttackInfoInternal::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitAnim
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitAnim                                      ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnim::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetEnterFk
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetEnterFk final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetEnterFk");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetEnterFk");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEnterFk, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEnterFk::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitDirect
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitDirect::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitLocation
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddCheckBuffList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSCounterAttackBuff                    addValue;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, addValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::addValue' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCheckBuffList::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ClearCheckBuffList
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ClearCheckBuffList::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CounterAttackEnd
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CounterAttackEnd::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.VisionCounterAttackEnd
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_VisionCounterAttackEnd::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCounterAttackEndTime
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         baseTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, baseTime) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::baseTime' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCounterAttackEndTime::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsTriggerCounterAttack
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsTriggerCounterAttack::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetTarget
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetShowTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetShowTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetShowTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetShowTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, actor) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::actor' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetShowTarget, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetShowTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitLockDirection
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitLockDirection::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnterLockDirection
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterLockDirection::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCurrentTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetLockOnDebugLine
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isShow;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, isShow) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::isShow' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLockOnDebugLine::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateValid
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateValid final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateValid");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateValid");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateValid, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateValid::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetDrawTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetCastTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetCastTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateGetDrawTargetChantTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateGetDrawTargetChantTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChant
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChant final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKuroBooleanEventBinder*                eventBinder;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChant");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChant");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, eventBinder) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::eventBinder' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChant, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChant::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateDraw
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateDraw::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateCast
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateCast final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         direction;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateCast");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateCast");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, direction) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::direction' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateCast, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateCast::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateReset
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateReset final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateReset");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateReset");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateReset::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateReset, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateReset::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChangeToProjectileState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToProjectileState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ManipulateChangeToNormalState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ManipulateChangeToNormalState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHoldingActor
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHoldingActor::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDebugDraw
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isActive;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, isActive) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::isActive' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDebugDraw::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExtraAction
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExtraAction final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExtraAction");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExtraAction");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExtraAction::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExtraAction, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExtraAction::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetQtePosition
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetQtePosition final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         rotate;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         length;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         height;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          referenceTarget;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          adjustWithMonster;                                 // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         addHeight;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         qteType;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetQtePosition");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetQtePosition");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, rotate) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::rotate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, length) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::length' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, height) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::height' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, referenceTarget) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::referenceTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, adjustWithMonster) == 0x000011, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::adjustWithMonster' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, addHeight) == 0x000014, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::addHeight' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, qteType) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::qteType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetQtePosition, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetQtePosition::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDtSkillInfo
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfo::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetLastActivateSkillTime
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLastActivateSkillTime::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetLastActivateSkillTime
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, time) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::time' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetLastActivateSkillTime::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillElevationAngle
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillElevationAngle::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillElevationAngle
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         angle;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, angle) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::angle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillElevationAngle::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CurrentSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CurrentPriority
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CurrentPriority final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CurrentPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CurrentPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CurrentPriority, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CurrentPriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCurrentPriority
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         priority;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, priority) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::priority' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCurrentPriority::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.HasAbility
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_HasAbility final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_HasAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_HasAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_HasAbility) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_HasAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_HasAbility, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_HasAbility::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillInfo
// 0x01A0 (0x01A0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            ReturnValue;                                       // 0x0020(0x0180)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo) == 0x0001A0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillInfo::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillPriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         priority;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, priority) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::priority' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillPriority::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndSkill
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndSkill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          isSyn;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          isNotEnd;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndSkill) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, isSyn) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::isSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, isNotEnd) == 0x000019, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::isNotEnd' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkill, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.BeginSkill
// 0x0040 (0x0040 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_BeginSkill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   skillId;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isSyn;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 target;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   socketName;                                        // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_BeginSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill) == 0x000040, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_BeginSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, isSyn) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::isSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, target) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, socketName) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, __WorldContext) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkill, ReturnValue) == 0x000038, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkill::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillTarget::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillTarget
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, target) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsHasInputDir
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsHasInputDir::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillIdWithGroupId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         groupId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, groupId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::groupId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillIdWithGroupId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillAcceptInput
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillAcceptInput::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillAcceptInput
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          skillAcceptInput;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, skillAcceptInput) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::skillAcceptInput' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillAcceptInput::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCommonSkillCanBeInterrupt
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          canBeInterrupt;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, canBeInterrupt) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::canBeInterrupt' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCommonSkillCanBeInterrupt::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCommonSkillCanBeInterrupt
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCommonSkillCanBeInterrupt::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnActivateAbility
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isCommitSuccess;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, isCommitSuccess) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::isCommitSuccess' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnActivateAbility::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.OnEndAbility
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_OnEndAbility final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          wasCancelled;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_OnEndAbility");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_OnEndAbility");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, wasCancelled) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::wasCancelled' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_OnEndAbility, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_OnEndAbility::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPriority final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPriority, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetActivePriority
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetActivePriority final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetActivePriority");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetActivePriority");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetActivePriority, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetActivePriority::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSkillMontageInstance
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         index;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, index) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::index' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance, ReturnValue) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSkillMontageInstance::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillRotateLocation
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, location) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::location' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateLocation::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillRotateDirect
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          direct;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, direct) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::direct' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillRotateDirect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CallAnimBreakPoint
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CallAnimBreakPoint::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RollingGround
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RollingGround final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RollingGround) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RollingGround");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RollingGround) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RollingGround");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RollingGround, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RollingGround::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RollingGround, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RollingGround::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionIdList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionIdList::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitMultiSkillStateOfMorphVision
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitMultiSkillStateOfMorphVision::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetKeepMultiSkillState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          keepOnMorphEnd;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          keepOnGoDown;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, keepOnMorphEnd) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::keepOnMorphEnd' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, keepOnGoDown) == 0x000005, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::keepOnGoDown' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetKeepMultiSkillState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionLevelList
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionLevelList::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         visionId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, visionId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::visionId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, level) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::level' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.InterruptSkill
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_InterruptSkill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          isSyn;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_InterruptSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_InterruptSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, isSyn) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::isSyn' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_InterruptSkill, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_InterruptSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeleteSkills
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeleteSkills final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeleteSkills");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeleteSkills");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteSkills::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteSkills, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteSkills::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCurrentMontageCorrespondingSkillId
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCurrentMontageCorrespondingSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSocketName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 socketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, socketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSocketName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSocketName, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSocketName::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetPointTransform
// 0x0060 (0x0060 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetPointTransform final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 boneName;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       ReturnValue;                                       // 0x0020(0x0040)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform) == 0x000010, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetPointTransform");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform) == 0x000060, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetPointTransform");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, boneName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::boneName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetPointTransform, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetPointTransform::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.PlaySkillMontage2Server
// 0x0040 (0x0040 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         montageIndex;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         rate;                                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 startSection;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         startTimeSeconds;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server) == 0x000040, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, montageIndex) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::montageIndex' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, rate) == 0x00001C, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::rate' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, startSection) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::startSection' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, startTimeSeconds) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::startTimeSeconds' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server, __WorldContext) == 0x000038, "Member 'TsGameplayBlueprintFunctionLibrary_C_PlaySkillMontage2Server::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndSkillMontage
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         montageIndex;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, skillId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, montageIndex) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::montageIndex' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndSkillMontage::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CanActivateFixHook
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_CanActivateFixHook::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetLocation
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetForward
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetForward::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.NextFixHookTargetLocation
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_NextFixHookTargetLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetInheritSpeed
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetInheritSpeed::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetIsClimb
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsClimb::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetIgnoreSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 socketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, socketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIgnoreSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DeleteIgnoreSocketName
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 socketName;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, socketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_DeleteIgnoreSocketName::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetToTargetSocketDistance
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetToTargetSocketDistance::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetPredictProjectileInfo
// 0x00C0 (0x00C0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          returnValue;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        outPathPosition;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                outLastTraceDestination;                           // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             outHit;                                            // 0x0024(0x0094)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo) == 0x0000C0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, returnValue) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::returnValue' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, outPathPosition) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::outPathPosition' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, outLastTraceDestination) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::outLastTraceDestination' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, outHit) == 0x000024, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::outHit' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo, __WorldContext) == 0x0000B8, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPredictProjectileInfo::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetVisible
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetVisible final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isShow;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetVisible) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetVisible");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetVisible) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetVisible");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, isShow) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::isShow' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetVisible, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetVisible::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharUnifiedMoveState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharState                                    ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedMoveState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharUnifiedPositionState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharParentMoveState                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharUnifiedPositionState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitHitState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitHitState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitHitState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitHitState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitHitState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitHitState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitHitState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetDirectionState
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetDirectionState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       newViewState;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetDirectionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetDirectionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, newViewState) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::newViewState' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetDirectionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetDirectionState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDirectionState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDirectionState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDirectionState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDirectionState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDirectionState, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDirectionState::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsInGame
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsInGame final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsInGame");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsInGame");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsInGame, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsInGame::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SprintPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SprintPress final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SprintPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SprintPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SprintPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SprintPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintPress, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintPress::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SprintRelease
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SprintRelease final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SprintRelease");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SprintRelease");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintRelease::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SprintRelease, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SprintRelease::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StandPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StandPress final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StandPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StandPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StandPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StandPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StandPress, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StandPress::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StandPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StandPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SwingPress
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SwingPress final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SwingPress) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SwingPress");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SwingPress) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SwingPress");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingPress, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingPress::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingPress, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingPress::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SwingRelease
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SwingRelease final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SwingRelease");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SwingRelease");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingRelease::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SwingRelease, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SwingRelease::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.CustomSetWalkOrRun
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isWalk;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, isWalk) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::isWalk' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_CustomSetWalkOrRun::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnterAimStatus
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAimViewState                                 aimViewState;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, aimViewState) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::aimViewState' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnterAimStatus::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ExitAimStatus
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ExitAimStatus::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnableEntity
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnableEntity final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isEnable;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnableEntity");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnableEntity");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, isEnable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::isEnable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnableEntity, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnableEntity::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoHit
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   animLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, animLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::animLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoHit::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoFk
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   animLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, animLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::animLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoFk::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoUnifiedState
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   animLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, animLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::animLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedState::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.UpdateAnimInfoUnifiedStateRoleNpc
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   animLogicParams;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, animLogicParams) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::animLogicParams' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_UpdateAnimInfoUnifiedStateRoleNpc::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsCharRotateWithCameraWhenManipulate
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsCharRotateWithCameraWhenManipulate::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetIsUseCatapultUpAnim
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetIsUseCatapultUpAnim::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetNextMultiSkillId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         skillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartManipulateInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartManipulateInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndManipulateInteract
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndManipulateInteract::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetManipulateInteractLocation
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractLocation::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EnvironmentInfoDetect
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, location) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::location' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_EnvironmentInfoDetect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.LockOnSpecifyTarget
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         targetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, targetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::targetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_LockOnSpecifyTarget::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsSkillInCd
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         skillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSkillInCd::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendHookSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, hasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::hasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendHookSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendManipulateSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, hasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::hasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendManipulateSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SendScanSkillUseLogData
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hasTarget;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, hasTarget) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::hasTarget' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SendScanSkillUseLogData::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.DynamicAttachEntityToActor
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         targetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   socketName;                                        // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, targetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::targetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, socketName) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_DynamicAttachEntityToActor::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetVisionCounterAttackInfoInternal
// 0x01E8 (0x01E8 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSVisionCounterAttack                  ReturnValue;                                       // 0x0010(0x01D8)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal) == 0x0001E8, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetVisionCounterAttackInfoInternal::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ActivateAbilityVision
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionType                                   visionType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, visionType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::visionType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVision::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndAbilityVision
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionType                                   visionType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, visionType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::visionType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAbilityVision::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ResetBaseValueLocal
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         id;                                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         val;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, id) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::id' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, val) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::val' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ResetBaseValueLocal::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEntityEnable
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          enable;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                callObject;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, enable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::enable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, callObject) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::callObject' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, reason) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::reason' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEntityEnable::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetPassiveGaSkillId
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                callObject;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, callObject) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::callObject' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetPassiveGaSkillId::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetEnableAttackInputActionOfMorphVision
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnable;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, bEnable) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::bEnable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetEnableAttackInputActionOfMorphVision::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetSpecialBuffToSkillId
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId final
{
public:
	float                                         buffId1;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 skillId1;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, buffId1) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::buffId1' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, skillId1) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::skillId1' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId, ReturnValue) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetSpecialBuffToSkillId::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetActor
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetActor::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetPathways
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetPathways::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetEnterPortalCapture
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetEnterPortalCapture::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSkillTargetDirection
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillTargetDirection                         direction;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection, direction) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection::direction' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSkillTargetDirection::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ChangeAiControllerDebugDraw
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          debug;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw, debug) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw::debug' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeAiControllerDebugDraw::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.TryGetDebugMovementComp
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp final
{
public:
	class FString                                 pbDataId;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroDebugMovementComponent*            ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp, pbDataId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp::pbDataId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_TryGetDebugMovementComp::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetBeHitAnimType
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType final
{
public:
	int32                                         typeId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitAnim                                      ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType, typeId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType::typeId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetBeHitAnimType::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SkillBehaviorBegin
// 0x02D8 (0x02D8 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Base_C*                             ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillBehaviorAction                  action;                                            // 0x0010(0x02C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin) == 0x0002D8, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin, action) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin::action' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin, __WorldContext) == 0x0002D0, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorBegin::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SkillBehaviorSatisfy
// 0x0068 (0x0068 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Base_C*                             ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillBehaviorCondition               condition;                                         // 0x0010(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy) == 0x000068, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy, condition) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy::condition' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy, __WorldContext) == 0x000058, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy, ReturnValue) == 0x000060, "Member 'TsGameplayBlueprintFunctionLibrary_C_SkillBehaviorSatisfy::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ChangeBlueprintVariablesRef
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef final
{
public:
	class UObject*                                object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                base;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef, object) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef::object' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef, base) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef::base' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef, ReturnValue) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangeBlueprintVariablesRef::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ActivateAbilityVisionPlayAudio
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVisionType                                   visionType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio, visionType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio::visionType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ActivateAbilityVisionPlayAudio::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddCue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddCue final
{
public:
	int32                                         instigatorEntityId;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         targetEntityId;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         cueId;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddCue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddCue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddCue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddCue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCue, instigatorEntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCue::instigatorEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCue, targetEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCue::targetEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCue, cueId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCue::cueId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddCue, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddCue::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RemoveCue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RemoveCue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         cueId;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RemoveCue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RemoveCue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RemoveCue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RemoveCue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveCue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveCue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveCue, cueId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveCue::cueId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RemoveCue, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_RemoveCue::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.TryPlayLinkAnim
// 0x0008 (0x0008 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim) == 0x000008, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_TryPlayLinkAnim::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHookTargetType
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHookInteractTypeBp                           ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookTargetType::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookTargetIsSuiGuangType
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookTargetIsSuiGuangType::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetDtSkillInfoMapForDebug
// 0x0060 (0x0060 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterLoadType, class UDataTable*>   ReturnValue;                                       // 0x0010(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug) == 0x000060, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetDtSkillInfoMapForDebug::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StopInhalation
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StopInhalation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StopInhalation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StopInhalation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StopInhalation) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StopInhalation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopInhalation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopInhalation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopInhalation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopInhalation::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetIsHookEndByInterrupt
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isInterrupt;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt, isInterrupt) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt::isInterrupt' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetIsHookEndByInterrupt::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.TraceGround
// 0x0060 (0x0060 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_TraceGround final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          start;                                             // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          end;                                               // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          draw;                                              // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_TraceGround) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_TraceGround");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_TraceGround) == 0x000060, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_TraceGround");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, start) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::start' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, end) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::end' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, draw) == 0x000038, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::draw' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, __WorldContext) == 0x000040, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_TraceGround, ReturnValue) == 0x000048, "Member 'TsGameplayBlueprintFunctionLibrary_C_TraceGround::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartStatueInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartStatueInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndStatueInteract
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndStatueInteract::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartInhalation
// 0x0030 (0x0030 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartInhalation final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         strength;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         distance;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isPowerfulMode;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         checkAngle;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   tag;                                               // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartInhalation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation) == 0x000030, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartInhalation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, strength) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::strength' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, distance) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::distance' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, isPowerfulMode) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::isPowerfulMode' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, checkAngle) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::checkAngle' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, tag) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::tag' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartInhalation, __WorldContext) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartInhalation::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetGoBattleActor
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetGoBattleActor::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartCustomInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartCustomInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndCustomInteract
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndCustomInteract::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.ChangePhantomTeam
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam final
{
public:
	int32                                         phantomFormationId;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   skillTriggerTags;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam, phantomFormationId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam::phantomFormationId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam, skillTriggerTags) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam::skillTriggerTags' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_ChangePhantomTeam::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.RevertPhantomTeam
// 0x0008 (0x0008 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam) == 0x000008, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_RevertPhantomTeam::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetFormationAttribute
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute final
{
public:
	int32                                         type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute, type) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute::type' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetFormationAttribute::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookIsSummitPoint
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsSummitPoint::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetManipulateInteractTargetCanInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetManipulateInteractTargetCanInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHookInteractTargetCanInteract
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetCanInteract::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetEntityDeltaMillisecond
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetEntityDeltaMillisecond::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.AddBuffFromGA
// 0x0038 (0x0038 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         buffId;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 skillId;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         addCount;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA) == 0x000038, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, target) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, buffId) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::buffId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, skillId) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, addCount) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::addCount' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA, __WorldContext) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_AddBuffFromGA::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SyncTwoEntityLocationAndRotation
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation final
{
public:
	int32                                         fromEntityId;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         toEntityId;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation, fromEntityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation::fromEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation, toEntityId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation::toEntityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SyncTwoEntityLocationAndRotation::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetActorVisible
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetActorVisible final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          visible;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          collision;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          movable;                                           // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          sync;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetActorVisible");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetActorVisible");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, visible) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::visible' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, collision) == 0x000005, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::collision' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, movable) == 0x000006, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::movable' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, reason) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::reason' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, sync) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::sync' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetActorVisible, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetActorVisible::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetFishingBoat
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat, ReturnValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetFishingBoat::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FishingBoatSprint
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         maxSpeedRatio;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         exceedLimitDuration;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         duration;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint, maxSpeedRatio) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint::maxSpeedRatio' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint, exceedLimitDuration) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint::exceedLimitDuration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint, duration) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint::duration' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSprint::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetHookInteractTargetIsIgnorePlayerCollision
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetHookInteractTargetIsIgnorePlayerCollision::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FixHookIsNormalPoint
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_FixHookIsNormalPoint::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.FishingBoatSkill
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill final
{
public:
	EFishingSkillType                             type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill, type) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill::type' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_FishingBoatSkill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharacterMorphType
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMorphType                                    ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharacterMorphType::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetCharacterMorphType
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMorphType                                    morphType;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType, morphType) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType::morphType' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetCharacterMorphType::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetNextMultiSkillIdNew
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         skillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetNextMultiSkillIdNew::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SetSpecialEnergyAttrValue
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         attrId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue, attrId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue::attrId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue, value) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue::value' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SetSpecialEnergyAttrValue::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.BeginAddMoveByInputDirect
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         maxSpeed;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         accelerationTime;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         decelerationTime;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         delayTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, maxSpeed) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::maxSpeed' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, accelerationTime) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::accelerationTime' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, decelerationTime) == 0x00000C, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::decelerationTime' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, delayTime) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::delayTime' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginAddMoveByInputDirect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.EndAddMoveByInputDirect
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_EndAddMoveByInputDirect::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartBattleQte
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartBattleQte final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         skillId;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         battleQteId;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartBattleQte");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartBattleQte");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartBattleQte::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartBattleQte::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte, battleQteId) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartBattleQte::battleQteId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartBattleQte, __WorldContext) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartBattleQte::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StopGroup1Skill
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill, reason) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill::reason' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill, __WorldContext) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopGroup1Skill::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetLocationByAction
// 0x02F0 (0x02F0 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Base_C*                             ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillBehaviorAction                  action;                                            // 0x0010(0x02C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x02D8(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction) == 0x0002F0, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction, action) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction::action' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction, __WorldContext) == 0x0002D0, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction, ReturnValue) == 0x0002D8, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetLocationByAction::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetRotationByAction
// 0x02E8 (0x02E8 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Base_C*                             ga;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillBehaviorAction                  action;                                            // 0x0010(0x02C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x02D8(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction) == 0x0002E8, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction, ga) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction::ga' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction, action) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction::action' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction, __WorldContext) == 0x0002D0, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction, ReturnValue) == 0x0002D8, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetRotationByAction::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SlashHookPointCharacterLookAtPoint
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointCharacterLookAtPoint::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SlashHookPointHasLookAtConfig
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointHasLookAtConfig::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SlashHookPointIsTakeOverCamera
// 0x0018 (0x0018 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera) == 0x000018, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointIsTakeOverCamera::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.IsSlashGameplayIsSuccess
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess, __WorldContext) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess, ReturnValue) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_IsSlashGameplayIsSuccess::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.GetCharactersLocationNearBy
// 0x0058 (0x0058 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy final
{
public:
	struct FVectorDouble                          center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         distance;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         maxCount;                                          // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCharacterLocationsAndRadius          ReturnValue;                                       // 0x0028(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy) == 0x000058, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy, center) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy::center' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy, distance) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy::distance' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy, maxCount) == 0x00001C, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy::maxCount' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy, __WorldContext) == 0x000020, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy, ReturnValue) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_GetCharactersLocationNearBy::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StartChargeSlash
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StartChargeSlash::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.StopChargeSlash
// 0x0010 (0x0010 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash) == 0x000010, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_StopChargeSlash::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.BeginSkillAsync
// 0x0038 (0x0038 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   skillId;                                           // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 target;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   socketName;                                        // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKuroBooleanEventBinder*                eventBinder;                                       // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync) == 0x000038, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, skillId) == 0x000004, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::skillId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, target) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::target' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, socketName) == 0x000018, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::socketName' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, eventBinder) == 0x000028, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::eventBinder' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync, __WorldContext) == 0x000030, "Member 'TsGameplayBlueprintFunctionLibrary_C_BeginSkillAsync::__WorldContext' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SlashHookPointSafePointLoc
// 0x0028 (0x0028 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc) == 0x000028, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointLoc::ReturnValue' has a wrong offset!");

// Function TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C.SlashHookPointSafePointRot
// 0x0020 (0x0020 - 0x0000)
struct TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot final
{
public:
	int32                                         entityId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot) == 0x000008, "Wrong alignment on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot");
static_assert(sizeof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot) == 0x000020, "Wrong size on TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot, entityId) == 0x000000, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot::entityId' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot, __WorldContext) == 0x000008, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot::__WorldContext' has a wrong offset!");
static_assert(offsetof(TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot, ReturnValue) == 0x000010, "Member 'TsGameplayBlueprintFunctionLibrary_C_SlashHookPointSafePointRot::ReturnValue' has a wrong offset!");

}

