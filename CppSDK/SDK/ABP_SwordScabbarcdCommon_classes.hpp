#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SwordScabbarcdCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EWeaponViewName_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SwordScabbarcdCommon.ABP_SwordScabbarcdCommon_C
// 0x1980 (0x1FE0 - 0x0660)
class UABP_SwordScabbarcdCommon_C final : public UAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0668(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x06A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x06C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x06F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0718(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0740(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0768(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0790(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x07B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x07E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x09C0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x09E8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x0A78(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x0AB0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x0B40(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x0B78(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x0C08(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x0C40(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x0CD0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0D08(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x0D98(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0DD0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0E60(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x0E98(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0ED0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0F60(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0F98(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1028(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1060(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x10F0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1128(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1270(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x12A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x12D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x12F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x13C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x13E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x14B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x14D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1578(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x15A0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1630(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1668(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x16F8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x1730(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x17C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x17F8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1888(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x18C0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1950(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1988(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1A18(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1A50(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1A88(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1B18(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1B50(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1BE0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1C18(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1CA8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1CE0(0x0148)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1E28(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1E60(0x0148)()
	class ATsBaseCharacter_C*                     角色蓝图;                                          // 0x1FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponOpen;                                        // 0x1FB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB1[0x3];                                     // 0x1FB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Open_Delay;                                        // 0x1FB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x1FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          主动关闭武器;                                      // 0x1FBC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          武器在背后;                                        // 0x1FBD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Weapon_Open;                                       // 0x1FBE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUI;                                              // 0x1FBF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         武器突破等级;                                      // 0x1FC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         当前武器突破等级;                                  // 0x1FC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsUiSceneRoleActor_C*                  UI界面组件;                                        // 0x1FC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EWeaponViewName                               UI界面;                                            // 0x1FD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否正在播放隐藏特效;                              // 0x1FD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_SwordScabbarcdCommon(int32 EntryPoint);
	void Set_Open_Delay();
	void Clear_Open_Delay();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_0B83C93C4704BD56331EC790C125D684();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_60E48CAF40555926DE89C683DAB10735();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_0912173A4151467FF8EA35A919EA669B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_BB2EB9A94C64021CEE07D9890242972D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_5E35E85944D11EB2E66E959A3D1B7736();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_BA0F8FE8454D662D6D3A159E338D4192();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_E060EB0545B3DC9906CF0988CB31CA5E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_C5D9C39D47564CFCA30F48848C801924();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_3B14DCD949F0D28682EEF3AF215B7C88();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_0C8605904D1B20A921689987444DA0D0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_22251D08423281B2C96078BA3493D5F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_73D412DE47BB2CC6C291A5BFBCE9A58F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_28958A5646EAA30D586DA2A3B2219E96();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_F2BC63A7446D4AADB29E8093E01230E7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_1D0051744B301420431041B80A871603();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_B656CD4C48A0FB2CD708C4B641023232();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_948277A0457037E51751EF80F57ECE0E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_861469E64CA68F604289A29F52957779();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_BF44640D412106701BE7818C40EC8836();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_4DC7BAB44412E7F9CB0FBB86EC77561E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_CE8439D84D1DBE11E2AF99944D23858E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_3C4EAFD6401882863A283AA35F8C0836();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_F1566B304355AC27F7B22FA8C6FE2660();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_EC01249D4172D395D5B8BDA0ABB12C8E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_5564B3AC47DA0EDCCAF082847FD13B53();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SwordScabbarcdCommon_AnimGraphNode_TransitionResult_0359E2234EBDBEF31CCEB0970132CFA1();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SwordScabbarcdCommon_C">();
	}
	static class UABP_SwordScabbarcdCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SwordScabbarcdCommon_C>();
	}
};
static_assert(alignof(UABP_SwordScabbarcdCommon_C) == 0x000010, "Wrong alignment on UABP_SwordScabbarcdCommon_C");
static_assert(sizeof(UABP_SwordScabbarcdCommon_C) == 0x001FE0, "Wrong size on UABP_SwordScabbarcdCommon_C");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, UberGraphFrame) == 0x000660, "Member 'UABP_SwordScabbarcdCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_Root) == 0x000668, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_39) == 0x0006A0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_38) == 0x0006C8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_37) == 0x0006F0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_36) == 0x000718, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_35) == 0x000740, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_34) == 0x000768, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_33) == 0x000790, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_32) == 0x0007B8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_31) == 0x0007E0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_30) == 0x000808, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_29) == 0x000830, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_28) == 0x000858, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_27) == 0x000880, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_26) == 0x0008A8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_25) == 0x0008D0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_24) == 0x0008F8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_23) == 0x000920, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_22) == 0x000948, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_21) == 0x000970, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_20) == 0x000998, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_19) == 0x0009C0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_17) == 0x0009E8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_21) == 0x000A78, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_16) == 0x000AB0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_20) == 0x000B40, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_15) == 0x000B78, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_19) == 0x000C08, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_14) == 0x000C40, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_18) == 0x000CD0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_13) == 0x000D08, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_17) == 0x000D98, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_12) == 0x000DD0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_16) == 0x000E60, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_15) == 0x000E98, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_11) == 0x000ED0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_14) == 0x000F60, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_10) == 0x000F98, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_13) == 0x001028, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_9) == 0x001060, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_12) == 0x0010F0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateMachine_2) == 0x001128, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_11) == 0x001270, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_18) == 0x0012A8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_17) == 0x0012D0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_16) == 0x0012F8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_15) == 0x001320, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_14) == 0x001348, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_13) == 0x001370, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_12) == 0x001398, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_11) == 0x0013C0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_10) == 0x0013E8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_9) == 0x001410, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_8) == 0x001438, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_7) == 0x001460, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_6) == 0x001488, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_5) == 0x0014B0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_4) == 0x0014D8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_3) == 0x001500, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_2) == 0x001528, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult_1) == 0x001550, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_TransitionResult) == 0x001578, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_8) == 0x0015A0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_10) == 0x001630, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_7) == 0x001668, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_9) == 0x0016F8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_6) == 0x001730, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_8) == 0x0017C0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_5) == 0x0017F8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_7) == 0x001888, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_4) == 0x0018C0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_6) == 0x001950, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_3) == 0x001988, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_5) == 0x001A18, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_4) == 0x001A50, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_2) == 0x001A88, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_3) == 0x001B18, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer_1) == 0x001B50, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_2) == 0x001BE0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_SequencePlayer) == 0x001C18, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult_1) == 0x001CA8, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateMachine_1) == 0x001CE0, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateResult) == 0x001E28, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, AnimGraphNode_StateMachine) == 0x001E60, "Member 'UABP_SwordScabbarcdCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 角色蓝图) == 0x001FA8, "Member 'UABP_SwordScabbarcdCommon_C::角色蓝图' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, WeaponOpen) == 0x001FB0, "Member 'UABP_SwordScabbarcdCommon_C::WeaponOpen' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, Open_Delay) == 0x001FB4, "Member 'UABP_SwordScabbarcdCommon_C::Open_Delay' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, Delta_Time) == 0x001FB8, "Member 'UABP_SwordScabbarcdCommon_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 主动关闭武器) == 0x001FBC, "Member 'UABP_SwordScabbarcdCommon_C::主动关闭武器' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 武器在背后) == 0x001FBD, "Member 'UABP_SwordScabbarcdCommon_C::武器在背后' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, Weapon_Open) == 0x001FBE, "Member 'UABP_SwordScabbarcdCommon_C::Weapon_Open' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, IsUI) == 0x001FBF, "Member 'UABP_SwordScabbarcdCommon_C::IsUI' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 武器突破等级) == 0x001FC0, "Member 'UABP_SwordScabbarcdCommon_C::武器突破等级' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 当前武器突破等级) == 0x001FC4, "Member 'UABP_SwordScabbarcdCommon_C::当前武器突破等级' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, UI界面组件) == 0x001FC8, "Member 'UABP_SwordScabbarcdCommon_C::UI界面组件' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, UI界面) == 0x001FD0, "Member 'UABP_SwordScabbarcdCommon_C::UI界面' has a wrong offset!");
static_assert(offsetof(UABP_SwordScabbarcdCommon_C, 是否正在播放隐藏特效) == 0x001FD1, "Member 'UABP_SwordScabbarcdCommon_C::是否正在播放隐藏特效' has a wrong offset!");

}

