#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MagicLeapIdentity

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "MagicLeapIdentity_structs.hpp"


namespace SDK
{

// Class MagicLeapIdentity.MagicLeapIdentity
// 0x0010 (0x0040 - 0x0030)
class UMagicLeapIdentity final : public UObject
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	EMagicLeapIdentityError GetAllAvailableAttributes(TArray<EMagicLeapIdentityKey>* AvailableAttributes);
	void GetAllAvailableAttributesAsync(const TDelegate<void(EMagicLeapIdentityError ResultCode, const TArray<EMagicLeapIdentityKey>& AvailableAttributes)>& ResultDelegate);
	EMagicLeapIdentityError RequestAttributeValue(const TArray<EMagicLeapIdentityKey>& RequestedAttributeList, TArray<struct FMagicLeapIdentityAttribute>* RequestedAttributeValues);
	EMagicLeapIdentityError RequestAttributeValueAsync(const TArray<EMagicLeapIdentityKey>& RequestedAttributeList, const TDelegate<void(EMagicLeapIdentityError ResultCode, const TArray<struct FMagicLeapIdentityAttribute>& AttributeValue)>& ResultDelegate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MagicLeapIdentity">();
	}
	static class UMagicLeapIdentity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMagicLeapIdentity>();
	}
};
static_assert(alignof(UMagicLeapIdentity) == 0x000008, "Wrong alignment on UMagicLeapIdentity");
static_assert(sizeof(UMagicLeapIdentity) == 0x000040, "Wrong size on UMagicLeapIdentity");

}

