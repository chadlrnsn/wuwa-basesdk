#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SingleCloud

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SingleCloud.BP_SingleCloud_C
// 0x00C8 (0x0388 - 0x02C0)
class ABP_SingleCloud_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CloudMask;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloudHeight;                                       // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              MaterialNoRotate;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTowardCamera;                                     // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeWidth;                                         // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDistance;                                       // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistance;                                       // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CustomMesh_Y_Aix;                                  // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseStrength;                                     // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseTilling;                                      // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoiseSpeed;                                        // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Opacity;                                           // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceConstant*              MaterialNoRotateFog;                               // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithFog;                                          // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInverseFade;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEditor;                                           // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTowardCameraPosition;                             // 0x0323(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                boundCenter;                                       // 0x0324(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CameraPosition;                                    // 0x0330(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0348(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceFade;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CloudRotation;                                     // 0x0360(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          ToBoundDir;                                        // 0x0370(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCloudRotation();
	void UpdateDistanceFade();
	void UpdateCameraPosition();
	void UpdateMaterialParams(class UMaterialInstanceDynamic* MID);
	void UserConstructionScript();
	void EditorTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_SingleCloud(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SingleCloud_C">();
	}
	static class ABP_SingleCloud_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SingleCloud_C>();
	}
};
static_assert(alignof(ABP_SingleCloud_C) == 0x000008, "Wrong alignment on ABP_SingleCloud_C");
static_assert(sizeof(ABP_SingleCloud_C) == 0x000388, "Wrong size on ABP_SingleCloud_C");
static_assert(offsetof(ABP_SingleCloud_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_SingleCloud_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, StaticMesh) == 0x0002C8, "Member 'ABP_SingleCloud_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_SingleCloud_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CloudMask) == 0x0002D8, "Member 'ABP_SingleCloud_C::CloudMask' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CloudHeight) == 0x0002E0, "Member 'ABP_SingleCloud_C::CloudHeight' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, MaterialNoRotate) == 0x0002E8, "Member 'ABP_SingleCloud_C::MaterialNoRotate' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, bTowardCamera) == 0x0002F0, "Member 'ABP_SingleCloud_C::bTowardCamera' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, FadeWidth) == 0x0002F4, "Member 'ABP_SingleCloud_C::FadeWidth' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, MinDistance) == 0x0002F8, "Member 'ABP_SingleCloud_C::MinDistance' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, MaxDistance) == 0x0002FC, "Member 'ABP_SingleCloud_C::MaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CustomMesh_Y_Aix) == 0x000300, "Member 'ABP_SingleCloud_C::CustomMesh_Y_Aix' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, NoiseStrength) == 0x000308, "Member 'ABP_SingleCloud_C::NoiseStrength' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, NoiseTilling) == 0x00030C, "Member 'ABP_SingleCloud_C::NoiseTilling' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, NoiseSpeed) == 0x000310, "Member 'ABP_SingleCloud_C::NoiseSpeed' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, Opacity) == 0x000314, "Member 'ABP_SingleCloud_C::Opacity' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, MaterialNoRotateFog) == 0x000318, "Member 'ABP_SingleCloud_C::MaterialNoRotateFog' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, bWithFog) == 0x000320, "Member 'ABP_SingleCloud_C::bWithFog' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, bInverseFade) == 0x000321, "Member 'ABP_SingleCloud_C::bInverseFade' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, bEditor) == 0x000322, "Member 'ABP_SingleCloud_C::bEditor' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, bTowardCameraPosition) == 0x000323, "Member 'ABP_SingleCloud_C::bTowardCameraPosition' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, boundCenter) == 0x000324, "Member 'ABP_SingleCloud_C::boundCenter' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CameraPosition) == 0x000330, "Member 'ABP_SingleCloud_C::CameraPosition' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CameraRotation) == 0x000348, "Member 'ABP_SingleCloud_C::CameraRotation' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, DistanceFade) == 0x000358, "Member 'ABP_SingleCloud_C::DistanceFade' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, CloudRotation) == 0x000360, "Member 'ABP_SingleCloud_C::CloudRotation' has a wrong offset!");
static_assert(offsetof(ABP_SingleCloud_C, ToBoundDir) == 0x000370, "Member 'ABP_SingleCloud_C::ToBoundDir' has a wrong offset!");

}

