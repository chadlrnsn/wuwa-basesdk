#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RippleSwim

#include "Basic.hpp"

#include "BP_RippleSwim_classes.hpp"
#include "BP_RippleSwim_parameters.hpp"


namespace SDK
{

// Function BP_RippleSwim.BP_RippleSwim_C.Change Ripple Preset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RippleWater_Data_C*           NewRippleState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RippleSwim_C::Change_Ripple_Preset(class UBP_RippleWater_Data_C* NewRippleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "Change Ripple Preset");

	Params::BP_RippleSwim_C_Change_Ripple_Preset Parms{};

	Parms.NewRippleState = NewRippleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RippleSwim.BP_RippleSwim_C.CalcTexCoord
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVectorDouble                    RippleCenter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVectorDouble                    RipplePointLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CaptureSize                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TexCoord                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RippleSwim_C::CalcTexCoord(const struct FVectorDouble& RippleCenter, const struct FVectorDouble& RipplePointLocation, float CaptureSize, struct FVector* TexCoord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "CalcTexCoord");

	Params::BP_RippleSwim_C_CalcTexCoord Parms{};

	Parms.RippleCenter = std::move(RippleCenter);
	Parms.RipplePointLocation = std::move(RipplePointLocation);
	Parms.CaptureSize = CaptureSize;

	UObject::ProcessEvent(Func, &Parms);

	if (TexCoord != nullptr)
		*TexCoord = std::move(Parms.TexCoord);
}


// Function BP_RippleSwim.BP_RippleSwim_C.Clear_RT
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::Clear_RT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "Clear_RT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.SetWaterRippleData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_RippleWater_Data_C*           InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RippleSwim_C::SetWaterRippleData(class UBP_RippleWater_Data_C* InputPin, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "SetWaterRippleData");

	Params::BP_RippleSwim_C_SetWaterRippleData Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_RippleSwim.BP_RippleSwim_C.AboveWater
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAboveWater                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RippleSwim_C::AboveWater(const struct FVector& Location, bool* bAboveWater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "AboveWater");

	Params::BP_RippleSwim_C_AboveWater Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (bAboveWater != nullptr)
		*bAboveWater = Parms.bAboveWater;
}


// Function BP_RippleSwim.BP_RippleSwim_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.BeforeCookForMobile
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::BeforeCookForMobile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "BeforeCookForMobile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.OnBulletHitWater
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVectorDouble                    ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_SceneBattleInteract_C*        Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVectorDouble                    OriginPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Id                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RippleSwim_C::OnBulletHitWater(const struct FVectorDouble& ImpactPoint, class UBP_SceneBattleInteract_C* Config, const struct FVectorDouble& OriginPoint, int32 Id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "OnBulletHitWater");

	Params::BP_RippleSwim_C_OnBulletHitWater Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.Config = Config;
	Parms.OriginPoint = std::move(OriginPoint);
	Parms.Id = Id;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RippleSwim.BP_RippleSwim_C.EditorTick
// (BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::EditorTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "EditorTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.SetBulletUV
// (BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::SetBulletUV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "SetBulletUV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.Refresh
// (BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RippleSwim_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "ReceiveTick");

	Params::BP_RippleSwim_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RippleSwim.BP_RippleSwim_C.ResetBulletUV
// (BlueprintCallable, BlueprintEvent)

void ABP_RippleSwim_C::ResetBulletUV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "ResetBulletUV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_RippleSwim_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RippleSwim.BP_RippleSwim_C.ExecuteUbergraph_BP_RippleSwim
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RippleSwim_C::ExecuteUbergraph_BP_RippleSwim(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RippleSwim_C", "ExecuteUbergraph_BP_RippleSwim");

	Params::BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

