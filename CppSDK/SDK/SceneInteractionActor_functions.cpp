#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SceneInteractionActor

#include "Basic.hpp"

#include "SceneInteractionActor_classes.hpp"
#include "SceneInteractionActor_parameters.hpp"


namespace SDK
{

// Function SceneInteractionActor.SceneInteractionActor_C.ExecuteUbergraph_SceneInteractionActor
// (Final, Native, UbergraphFunction, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASceneInteractionActor_C::ExecuteUbergraph_SceneInteractionActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ExecuteUbergraph_SceneInteractionActor");

	Params::SceneInteractionActor_C_ExecuteUbergraph_SceneInteractionActor Parms{};

	Parms.EntryPoint = EntryPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ReceiveEndPlay
// (Native, Event, Public, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASceneInteractionActor_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ReceiveEndPlay");

	Params::SceneInteractionActor_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ReceiveBeginPlay
// (Native, Event, Public, Protected, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ReceiveBeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.AddNewEffect
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::AddNewEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "AddNewEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.AddNewState
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::AddNewState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "AddNewState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.UpdateTimeDilation
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::UpdateTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "UpdateTimeDilation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.AddNewEndEffect
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::AddNewEndEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "AddNewEndEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.AddMatrialDataForChildrenActor
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class UItemMaterialControllerActorData_C*materialData                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASceneInteractionActor_C::AddMatrialDataForChildrenActor(class AActor* actor, class UItemMaterialControllerActorData_C* materialData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "AddMatrialDataForChildrenActor");

	Params::SceneInteractionActor_C_AddMatrialDataForChildrenActor Parms{};

	Parms.actor = actor;
	Parms.materialData = materialData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ResetTagActorHide
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASceneInteractionActor_C::ResetTagActorHide(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ResetTagActorHide");

	Params::SceneInteractionActor_C_ResetTagActorHide Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.StopExtraEffectOnTagsChange
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ASceneInteractionActor_C::StopExtraEffectOnTagsChange(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "StopExtraEffectOnTagsChange");

	Params::SceneInteractionActor_C_StopExtraEffectOnTagsChange Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.GetDirectorBySequence
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   sequence                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ALevelSequenceActor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ALevelSequenceActor* ASceneInteractionActor_C::GetDirectorBySequence(class ULevelSequence* sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "GetDirectorBySequence");

	Params::SceneInteractionActor_C_GetDirectorBySequence Parms{};

	Parms.sequence = sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SceneInteractionActor.SceneInteractionActor_C.DestroySelf
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::DestroySelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "DestroySelf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.StopTagAkEvent
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ASceneInteractionActor_C::StopTagAkEvent(const struct FGameplayTag& tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "StopTagAkEvent");

	Params::SceneInteractionActor_C_StopTagAkEvent Parms{};

	Parms.tag = std::move(tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.UpdateProjectionActorTransform
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransformDouble&          transform1                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ASceneInteractionActor_C::UpdateProjectionActorTransform(const struct FTransformDouble& transform1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "UpdateProjectionActorTransform");

	Params::SceneInteractionActor_C_UpdateProjectionActorTransform Parms{};

	Parms.transform1 = std::move(transform1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.TryStopCurrentState
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::TryStopCurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "TryStopCurrentState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState1
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState2
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState3
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState3");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState4
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState4");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState5
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState5()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState5");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState6
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState6");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState7
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState7()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState7");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ChangeState8
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::ChangeState8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ChangeState8");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.PreviewFullDestructible
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::PreviewFullDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "PreviewFullDestructible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.RemoveActorProjection
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::RemoveActorProjection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "RemoveActorProjection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.使用字段值切换状态
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::使用字段值切换状态()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "使用字段值切换状态");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.模拟Tag添加
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::模拟Tag添加()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "模拟Tag添加");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.模拟Tag移除
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::模拟Tag移除()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "模拟Tag移除");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.重置
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::重置()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "重置");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.ApplyAnimOptimizationParams
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUseDistanceMap                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASceneInteractionActor_C::ApplyAnimOptimizationParams(bool bUseDistanceMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "ApplyAnimOptimizationParams");

	Params::SceneInteractionActor_C_ApplyAnimOptimizationParams Parms{};

	Parms.bUseDistanceMap = bUseDistanceMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.PendingPlayStateEffect
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::PendingPlayStateEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "PendingPlayStateEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.RemovePendingStateEffectTick
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::RemovePendingStateEffectTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "RemovePendingStateEffectTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.PendingPlayCrossStateEffect
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::PendingPlayCrossStateEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "PendingPlayCrossStateEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.RemovePendingCrossStateEffectTick
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::RemovePendingCrossStateEffectTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "RemovePendingCrossStateEffectTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.PendingPlayTagEffect
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::PendingPlayTagEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "PendingPlayTagEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.RemovePendingTagEffectTick
// (Native, Public, BlueprintCallable, BlueprintEvent)

void ASceneInteractionActor_C::RemovePendingTagEffectTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "RemovePendingTagEffectTick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SceneInteractionActor.SceneInteractionActor_C.PlayKuroSkeletalMeshDestruction
// (Native, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isJumpToEnd                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASceneInteractionActor_C::PlayKuroSkeletalMeshDestruction(class AActor* actor, bool isJumpToEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SceneInteractionActor_C", "PlayKuroSkeletalMeshDestruction");

	Params::SceneInteractionActor_C_PlayKuroSkeletalMeshDestruction Parms{};

	Parms.actor = actor;
	Parms.isJumpToEnd = isJumpToEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

