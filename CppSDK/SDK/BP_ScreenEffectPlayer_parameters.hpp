#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScreenEffectPlayer

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroCurve_structs.hpp"


namespace SDK::Params
{

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.AlmostEqual
// 0x0018 (0x0018 - 0x0000)
struct BP_ScreenEffectPlayer_C_AlmostEqual final
{
public:
	float                                         val1;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         val2;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isequal;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_AlmostEqual) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_AlmostEqual");
static_assert(sizeof(BP_ScreenEffectPlayer_C_AlmostEqual) == 0x000018, "Wrong size on BP_ScreenEffectPlayer_C_AlmostEqual");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, val1) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::val1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, val2) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::val2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, isequal) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::isequal' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_AlmostEqual, CallFunc_Less_FloatFloat_ReturnValue) == 0x000015, "Member 'BP_ScreenEffectPlayer_C_AlmostEqual::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.SetExtraState
// 0x00E8 (0x00E8 - 0x0000)
struct BP_ScreenEffectPlayer_C_SetExtraState final
{
public:
	int32                                         ExtraState;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllAttachChildrenOfActor_ReturnValue;  // 0x00B8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUINiagaraActor*                        K2Node_DynamicCast_AsUINiagara_Actor;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_SetExtraState) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_SetExtraState");
static_assert(sizeof(BP_ScreenEffectPlayer_C_SetExtraState) == 0x0000E8, "Wrong size on BP_ScreenEffectPlayer_C_SetExtraState");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ExtraState) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::ExtraState' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000009, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Keys_Keys_1) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Find_Value) == 0x000044, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Array_Index_Variable_1) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Find_Value_1) == 0x000070, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Map_Find_ReturnValue_1) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000088, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Loop_Counter_Variable) == 0x000098, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Array_Index_Variable_2) == 0x0000A0, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Loop_Counter_Variable_1) == 0x0000A4, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, ___int_Loop_Counter_Variable_2) == 0x0000B0, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_IsValid_ReturnValue_1) == 0x0000B4, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_GetAllAttachChildrenOfActor_ReturnValue) == 0x0000B8, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_GetAllAttachChildrenOfActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, K2Node_DynamicCast_AsUINiagara_Actor) == 0x0000D8, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::K2Node_DynamicCast_AsUINiagara_Actor' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E1, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E2, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetExtraState, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'BP_ScreenEffectPlayer_C_SetExtraState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Refresh Addition Parameter
// 0x0390 (0x0390 - 0x0000)
struct BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter final
{
public:
	float                                         TweenProgress;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllAttachChildrenOfActor_ReturnValue;  // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUINiagaraActor*                        K2Node_DynamicCast_AsUINiagara_Actor;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKuroCurveLinearColor                  CallFunc_Map_Find_Value;                           // 0x0080(0x0220)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue;         // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UseCurve_LinearColor_ReturnValue;         // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys_1;                          // 0x02C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKuroCurveFloat                        CallFunc_Map_Find_Value_1;                         // 0x02F0(0x0090)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UseCurve_Float_ReturnValue;               // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Float_ReturnValue;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter) == 0x000390, "Wrong size on BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, TweenProgress) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::TweenProgress' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Array_Index_Variable_2) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_GetAllAttachChildrenOfActor_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_GetAllAttachChildrenOfActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, K2Node_DynamicCast_AsUINiagara_Actor) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::K2Node_DynamicCast_AsUINiagara_Actor' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, ___int_Loop_Counter_Variable_2) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Find_ReturnValue) == 0x0002A0, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Length_ReturnValue_1) == 0x0002A4, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_GetValue_LinearColor_ReturnValue) == 0x0002A8, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_GetValue_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B8, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_UseCurve_LinearColor_ReturnValue) == 0x0002B9, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_UseCurve_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002BC, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Keys_Keys_1) == 0x0002C0, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Length_ReturnValue_2) == 0x0002D0, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002E8, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0002E9, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Find_Value_1) == 0x0002F0, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Map_Find_ReturnValue_1) == 0x000380, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_UseCurve_Float_ReturnValue) == 0x000381, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_UseCurve_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_GetValue_Float_ReturnValue) == 0x000384, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_GetValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000388, "Member 'BP_ScreenEffectPlayer_C_Refresh_Addition_Parameter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.TweenParameterSpeed
// 0x0024 (0x0024 - 0x0000)
struct BP_ScreenEffectPlayer_C_TweenParameterSpeed final
{
public:
	float                                         TweenTarget;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TweenSpeed;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TweenDeltaSecond;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_TweenParameterSpeed) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_TweenParameterSpeed");
static_assert(sizeof(BP_ScreenEffectPlayer_C_TweenParameterSpeed) == 0x000024, "Wrong size on BP_ScreenEffectPlayer_C_TweenParameterSpeed");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, TweenTarget) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::TweenTarget' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, TweenSpeed) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::TweenSpeed' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, TweenDeltaSecond) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::TweenDeltaSecond' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_FClamp_ReturnValue_1) == 0x00001C, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterSpeed, CallFunc_Less_FloatFloat_ReturnValue) == 0x000021, "Member 'BP_ScreenEffectPlayer_C_TweenParameterSpeed::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.DelayEndAudioCall
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) BP_ScreenEffectPlayer_C_DelayEndAudioCall final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable; // 0x0000(0x0028)(ConstParm, ZeroConstructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_DelayEndAudioCall) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_DelayEndAudioCall");
static_assert(sizeof(BP_ScreenEffectPlayer_C_DelayEndAudioCall) == 0x000030, "Wrong size on BP_ScreenEffectPlayer_C_DelayEndAudioCall");
static_assert(offsetof(BP_ScreenEffectPlayer_C_DelayEndAudioCall, ___delegate_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_DelayEndAudioCall::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_DelayEndAudioCall, CallFunc_PostEvent_ReturnValue) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_DelayEndAudioCall::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdatePlayerSEEnvironmentFactor
// 0x0070 (0x0070 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor final
{
public:
	float                                         EnvironmentFactor;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor) == 0x000070, "Wrong size on BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, EnvironmentFactor) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::EnvironmentFactor' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, ___int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_AsSE_Controller_Interface_1) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_AsSE_Controller_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Lerp_ReturnValue) == 0x000064, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'BP_ScreenEffectPlayer_C_UpdatePlayerSEEnvironmentFactor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Destroy Player
// 0x0001 (0x0001 - 0x0000)
struct BP_ScreenEffectPlayer_C_Destroy_Player final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Destroy_Player) == 0x000001, "Wrong alignment on BP_ScreenEffectPlayer_C_Destroy_Player");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Destroy_Player) == 0x000001, "Wrong size on BP_ScreenEffectPlayer_C_Destroy_Player");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Destroy_Player, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Destroy_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.InitPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_ScreenEffectPlayer_C_InitPlayer final
{
public:
	class UEffectScreenPlayData_C*                Data_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      ScreenEffectRoot_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_InitPlayer) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_InitPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_InitPlayer) == 0x000010, "Wrong size on BP_ScreenEffectPlayer_C_InitPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_InitPlayer, Data_0) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_InitPlayer::Data_0' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_InitPlayer, ScreenEffectRoot_0) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_InitPlayer::ScreenEffectRoot_0' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.BeforeStart
// 0x0038 (0x0038 - 0x0000)
struct BP_ScreenEffectPlayer_C_BeforeStart final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_BeforeStart) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_BeforeStart");
static_assert(sizeof(BP_ScreenEffectPlayer_C_BeforeStart) == 0x000038, "Wrong size on BP_ScreenEffectPlayer_C_BeforeStart");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_BeforeStart, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_BeforeStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Set Effect Hidden
// 0x000C (0x000C - 0x0000)
struct BP_ScreenEffectPlayer_C_Set_Effect_Hidden final
{
public:
	bool                                          bToHide_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bOverrideFadeSpeed;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OverrideFadeSpeed;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_Set_Effect_Hidden");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden) == 0x00000C, "Wrong size on BP_ScreenEffectPlayer_C_Set_Effect_Hidden");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, bToHide_0) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::bToHide_0' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, bOverrideFadeSpeed) == 0x000001, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::bOverrideFadeSpeed' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, OverrideFadeSpeed) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::OverrideFadeSpeed' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, CallFunc_IsEmpty_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Set_Effect_Hidden, CallFunc_IsEmpty_ReturnValue_1) == 0x000009, "Member 'BP_ScreenEffectPlayer_C_Set_Effect_Hidden::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.SetUIVisible
// 0x0058 (0x0058 - 0x0000)
struct BP_ScreenEffectPlayer_C_SetUIVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_SetUIVisible) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_SetUIVisible");
static_assert(sizeof(BP_ScreenEffectPlayer_C_SetUIVisible) == 0x000058, "Wrong size on BP_ScreenEffectPlayer_C_SetUIVisible");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, Visible) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Array_Index_Variable) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Array_Index_Variable_1) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, ___int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_SetUIVisible, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_ScreenEffectPlayer_C_SetUIVisible::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdateComponentsAlpha
// 0x0038 (0x0038 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdateComponentsAlpha final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdateComponentsAlpha");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha) == 0x000038, "Wrong size on BP_ScreenEffectPlayer_C_UpdateComponentsAlpha");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponentsAlpha, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_ScreenEffectPlayer_C_UpdateComponentsAlpha::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UpdateComponents
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ScreenEffectPlayer_C_UpdateComponents final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_1; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_2; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_3; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_4; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISE_ControllerInterface_C> K2Node_DynamicCast_AsSE_Controller_Interface_5; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UpdateComponents) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_UpdateComponents");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UpdateComponents) == 0x0000C8, "Wrong size on BP_ScreenEffectPlayer_C_UpdateComponents");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_SwitchEnum_CmpSuccess_1) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue_1) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_SafeDivide_ReturnValue_2) == 0x00001C, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_SafeDivide_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_1) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_2) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_3) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_4) == 0x000098, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_AsSE_Controller_Interface_5) == 0x0000B0, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_AsSE_Controller_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UpdateComponents, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'BP_ScreenEffectPlayer_C_UpdateComponents::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.EndPlayer
// 0x0118 (0x0118 - 0x0000)
struct BP_ScreenEffectPlayer_C_EndPlayer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0028)(ZeroConstructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable; // 0x0028(0x0028)(ConstParm, ZeroConstructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULTweener*                              CallFunc_DelayCall_ReturnValue;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_EndPlayer) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_EndPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_EndPlayer) == 0x000118, "Wrong size on BP_ScreenEffectPlayer_C_EndPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, ___delegate_Variable) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_GetPathName_ReturnValue) == 0x000058, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_PostEvent_ReturnValue) == 0x0000C0, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_DelayCall_ReturnValue) == 0x000108, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_DelayCall_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_EndPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_ScreenEffectPlayer_C_EndPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.Start Player
// 0x00E8 (0x00E8 - 0x0000)
struct BP_ScreenEffectPlayer_C_Start_Player final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllAttachChildrenOfActor_ReturnValue;  // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByInterface_ReturnValue;     // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> ___delegate_Variable; // 0x0080(0x0028)(ConstParm, ZeroConstructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_LoadPrefabWithAsset_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_Start_Player) == 0x000008, "Wrong alignment on BP_ScreenEffectPlayer_C_Start_Player");
static_assert(sizeof(BP_ScreenEffectPlayer_C_Start_Player) == 0x0000E8, "Wrong size on BP_ScreenEffectPlayer_C_Start_Player");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_Start_Player::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_Start_Player::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_GetAllAttachChildrenOfActor_ReturnValue) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_GetAllAttachChildrenOfActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_GetComponentsByInterface_ReturnValue) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_GetComponentsByInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000078, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, ___delegate_Variable) == 0x000080, "Member 'BP_ScreenEffectPlayer_C_Start_Player::___delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_PostEvent_ReturnValue) == 0x0000A8, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue_3) == 0x0000B1, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue_4) == 0x0000B2, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_LoadPrefabWithAsset_ReturnValue) == 0x0000B8, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_LoadPrefabWithAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_GetPathName_ReturnValue) == 0x0000C0, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_IsValid_ReturnValue_5) == 0x0000D0, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_Start_Player, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'BP_ScreenEffectPlayer_C_Start_Player::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.TweenParameter
// 0x0004 (0x0004 - 0x0000)
struct BP_ScreenEffectPlayer_C_TweenParameter final
{
public:
	float                                         TweenTarget;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_TweenParameter) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_TweenParameter");
static_assert(sizeof(BP_ScreenEffectPlayer_C_TweenParameter) == 0x000004, "Wrong size on BP_ScreenEffectPlayer_C_TweenParameter");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameter, TweenTarget) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_TweenParameter::TweenTarget' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.TweenParameterImmediately
// 0x0004 (0x0004 - 0x0000)
struct BP_ScreenEffectPlayer_C_TweenParameterImmediately final
{
public:
	float                                         TweenTarget;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_TweenParameterImmediately) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_TweenParameterImmediately");
static_assert(sizeof(BP_ScreenEffectPlayer_C_TweenParameterImmediately) == 0x000004, "Wrong size on BP_ScreenEffectPlayer_C_TweenParameterImmediately");
static_assert(offsetof(BP_ScreenEffectPlayer_C_TweenParameterImmediately, TweenTarget) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_TweenParameterImmediately::TweenTarget' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.UserConstructionScript
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ScreenEffectPlayer_C_UserConstructionScript final
{
public:
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue;          // 0x0000(0x0040)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_D_K2_SetWorldTransform_SweepHitResult;    // 0x0040(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_ScreenEffectPlayer_C_UserConstructionScript");
static_assert(sizeof(BP_ScreenEffectPlayer_C_UserConstructionScript) == 0x0000E0, "Wrong size on BP_ScreenEffectPlayer_C_UserConstructionScript");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UserConstructionScript, CallFunc_MakeTransformDouble_ReturnValue) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_UserConstructionScript::CallFunc_MakeTransformDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_UserConstructionScript, CallFunc_D_K2_SetWorldTransform_SweepHitResult) == 0x000040, "Member 'BP_ScreenEffectPlayer_C_UserConstructionScript::CallFunc_D_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ScreenEffectPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_ReceiveTick");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ReceiveTick) == 0x000004, "Wrong size on BP_ScreenEffectPlayer_C_ReceiveTick");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ScreenEffectPlayer_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ScreenEffectPlayer_C_ReceiveEndPlay");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ScreenEffectPlayer_C_ReceiveEndPlay");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C.ExecuteUbergraph_BP_ScreenEffectPlayer
// 0x003C (0x003C - 0x0000)
struct BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AlmostEqual_isequal;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AlmostEqual_isequal_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AlmostEqual_isequal_2;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer) == 0x000004, "Wrong alignment on BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer");
static_assert(sizeof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer) == 0x00003C, "Wrong size on BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, EntryPoint) == 0x000000, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000006, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000009, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00000A, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000010, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Lerp_ReturnValue_1) == 0x00001C, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x000021, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_Event_EndPlayReason) == 0x000024, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, K2Node_SwitchEnum_CmpSuccess_1) == 0x000025, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_AlmostEqual_isequal) == 0x00002C, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_AlmostEqual_isequal' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_AlmostEqual_isequal_1) == 0x000034, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_AlmostEqual_isequal_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_AlmostEqual_isequal_2) == 0x000035, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_AlmostEqual_isequal_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000036, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_BooleanAND_ReturnValue_1) == 0x000037, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000038, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer, CallFunc_BooleanAND_ReturnValue_2) == 0x000039, "Member 'BP_ScreenEffectPlayer_C_ExecuteUbergraph_BP_ScreenEffectPlayer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

}

