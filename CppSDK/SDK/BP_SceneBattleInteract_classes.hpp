#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SceneBattleInteract

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESceneBattleInteractEntityType_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SceneBattleInteract.BP_SceneBattleInteract_C
// 0x0058 (0x0090 - 0x0038)
class UBP_SceneBattleInteract_C final : public UPrimaryDataAsset
{
public:
	int32                                         ShapeType;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponType;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectRadius;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionRadius;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CollisionHalfHeight;                               // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CollisionOffset;                                   // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Interval;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RippleRadius;                                      // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RippleIntensity;                                   // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RippleType;                                        // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RippleDensity;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESceneBattleInteractEntityType                EntityType;                                        // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BreakIntensity;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BreakRadius;                                       // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RippleMinConnectDistance;                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RippleMaxConnectDistance;                          // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SceneBattleInteract_C">();
	}
	static class UBP_SceneBattleInteract_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SceneBattleInteract_C>();
	}
};
static_assert(alignof(UBP_SceneBattleInteract_C) == 0x000008, "Wrong alignment on UBP_SceneBattleInteract_C");
static_assert(sizeof(UBP_SceneBattleInteract_C) == 0x000090, "Wrong size on UBP_SceneBattleInteract_C");
static_assert(offsetof(UBP_SceneBattleInteract_C, ShapeType) == 0x000038, "Member 'UBP_SceneBattleInteract_C::ShapeType' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, WeaponType) == 0x00003C, "Member 'UBP_SceneBattleInteract_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, EffectRadius) == 0x000040, "Member 'UBP_SceneBattleInteract_C::EffectRadius' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, CollisionRadius) == 0x000044, "Member 'UBP_SceneBattleInteract_C::CollisionRadius' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, CollisionHalfHeight) == 0x000048, "Member 'UBP_SceneBattleInteract_C::CollisionHalfHeight' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, CollisionOffset) == 0x000050, "Member 'UBP_SceneBattleInteract_C::CollisionOffset' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, Interval) == 0x000068, "Member 'UBP_SceneBattleInteract_C::Interval' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleRadius) == 0x00006C, "Member 'UBP_SceneBattleInteract_C::RippleRadius' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleIntensity) == 0x000070, "Member 'UBP_SceneBattleInteract_C::RippleIntensity' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleType) == 0x000074, "Member 'UBP_SceneBattleInteract_C::RippleType' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleDensity) == 0x000078, "Member 'UBP_SceneBattleInteract_C::RippleDensity' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, EntityType) == 0x00007C, "Member 'UBP_SceneBattleInteract_C::EntityType' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, BreakIntensity) == 0x000080, "Member 'UBP_SceneBattleInteract_C::BreakIntensity' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, BreakRadius) == 0x000084, "Member 'UBP_SceneBattleInteract_C::BreakRadius' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleMinConnectDistance) == 0x000088, "Member 'UBP_SceneBattleInteract_C::RippleMinConnectDistance' has a wrong offset!");
static_assert(offsetof(UBP_SceneBattleInteract_C, RippleMaxConnectDistance) == 0x00008C, "Member 'UBP_SceneBattleInteract_C::RippleMaxConnectDistance' has a wrong offset!");

}

