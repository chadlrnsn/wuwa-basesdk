#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PerformanceRole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EPerformanceRoleState_structs.hpp"
#include "SPerformanceRoleInfo_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.ExecuteUbergraph_ABP_PerformanceRole
// 0x0110 (0x0110 - 0x0000)
struct ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimLength_ReturnValue;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_6;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_7;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_8;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPerformanceRoleInfo                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0074(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_9;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_10;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_11;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_12;           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9F[0x1];                                       // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_13;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_14;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_15;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_18;         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_19;         // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_20;         // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_21;         // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_22;         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsUiSceneRoleActor_C*                  K2Node_DynamicCast_AsTs_Ui_Scene_Role_Actor;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_16;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_23;         // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_24;         // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_25;         // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_26;         // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF[0x1];                                       // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_17;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_18;           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole");
static_assert(sizeof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole) == 0x000110, "Wrong size on ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, EntryPoint) == 0x000000, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000006, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000007, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000008, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000009, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x00000C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000011, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000014, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000018, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000019, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00001B, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_1) == 0x00001D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000020, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000024, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000025, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_2) == 0x000026, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000027, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_2) == 0x000028, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000029, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_3) == 0x00002A, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x00002B, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x00002C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000030, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x000034, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000035, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x000038, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_4) == 0x00003C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x00003D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_3) == 0x00003E, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x00003F, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_4) == 0x000040, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x000041, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x000044, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x000048, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x000049, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_5) == 0x00004A, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimLength_ReturnValue) == 0x00004C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000051, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_5) == 0x000052, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_6) == 0x000053, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_7) == 0x000054, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x000058, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_6) == 0x00005C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00005D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Not_PreBool_ReturnValue) == 0x00005E, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x00005F, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7) == 0x000060, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_7) == 0x000064, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanOR_ReturnValue_8) == 0x000065, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000066, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x000067, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x000068, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_6) == 0x000069, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x00006A, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8) == 0x00006C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x000070, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_8) == 0x000071, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetDataTableRowFromName_OutRow) == 0x000074, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00007C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9) == 0x000080, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_9) == 0x000084, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000085, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_7) == 0x000086, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000087, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10) == 0x000088, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_10) == 0x00008C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00008D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_8) == 0x00008E, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11) == 0x000090, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_11) == 0x000094, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12) == 0x000098, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_12) == 0x00009C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00009D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_9) == 0x00009E, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13) == 0x0000A0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_13) == 0x0000A4, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetCurveValue_ReturnValue) == 0x0000A8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetCurveValue_ReturnValue_1) == 0x0000B0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_14) == 0x0000B4, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14) == 0x0000B8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_15) == 0x0000BC, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0000BD, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0000BE, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0000BF, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x0000C0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_18) == 0x0000C1, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_10) == 0x0000C2, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_19) == 0x0000C3, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0000C4, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000C5, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_20) == 0x0000C6, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_21) == 0x0000C7, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000C8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_22) == 0x0000C9, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0000CA, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, K2Node_Event_DeltaTimeX) == 0x0000CC, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0000D0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0000D1, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetOwningComponent_ReturnValue) == 0x0000D8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetOwningActor_ReturnValue) == 0x0000E0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, K2Node_DynamicCast_AsTs_Ui_Scene_Role_Actor) == 0x0000E8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::K2Node_DynamicCast_AsTs_Ui_Scene_Role_Actor' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15) == 0x0000F4, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_16) == 0x0000F8, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_23) == 0x0000F9, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_24) == 0x0000FA, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_11) == 0x0000FB, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_25) == 0x0000FC, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_NotEqual_ByteByte_ReturnValue_26) == 0x0000FD, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_NotEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_BooleanAND_ReturnValue_12) == 0x0000FE, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16) == 0x000100, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x000104, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_17) == 0x000105, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x000106, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Not_PreBool_ReturnValue_1) == 0x000107, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17) == 0x000108, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_Less_FloatFloat_ReturnValue_18) == 0x00010C, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_Less_FloatFloat_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x00010D, "Member 'ABP_PerformanceRole_C_ExecuteUbergraph_ABP_PerformanceRole::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_PerformanceRole_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_PerformanceRole_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_PerformanceRole_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_PerformanceRole_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_PerformanceRole_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.SetState
// 0x000E (0x000E - 0x0000)
struct ABP_PerformanceRole_C_SetState final
{
public:
	EPerformanceRoleState                         State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          reLoop_0;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          reLoopFromLoopToStart_0;                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WaitLaseStateEnd;                                  // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_SetState) == 0x000001, "Wrong alignment on ABP_PerformanceRole_C_SetState");
static_assert(sizeof(ABP_PerformanceRole_C_SetState) == 0x00000E, "Wrong size on ABP_PerformanceRole_C_SetState");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, State) == 0x000000, "Member 'ABP_PerformanceRole_C_SetState::State' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, reLoop_0) == 0x000001, "Member 'ABP_PerformanceRole_C_SetState::reLoop_0' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, reLoopFromLoopToStart_0) == 0x000002, "Member 'ABP_PerformanceRole_C_SetState::reLoopFromLoopToStart_0' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, WaitLaseStateEnd) == 0x000003, "Member 'ABP_PerformanceRole_C_SetState::WaitLaseStateEnd' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000006, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000007, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000009, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_BooleanOR_ReturnValue_1) == 0x00000B, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000C, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SetState, CallFunc_BooleanOR_ReturnValue_2) == 0x00000D, "Member 'ABP_PerformanceRole_C_SetState::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.GetHeadApha
// 0x000C (0x000C - 0x0000)
struct ABP_PerformanceRole_C_GetHeadApha final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_GetHeadApha) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_GetHeadApha");
static_assert(sizeof(ABP_PerformanceRole_C_GetHeadApha) == 0x00000C, "Wrong size on ABP_PerformanceRole_C_GetHeadApha");
static_assert(offsetof(ABP_PerformanceRole_C_GetHeadApha, ReturnValue) == 0x000000, "Member 'ABP_PerformanceRole_C_GetHeadApha::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_GetHeadApha, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_GetHeadApha::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_GetHeadApha, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_PerformanceRole_C_GetHeadApha::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.UpdateHeadRotator
// 0x0008 (0x0008 - 0x0000)
struct ABP_PerformanceRole_C_UpdateHeadRotator final
{
public:
	float                                         CallFunc_GetHeadApha_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_UpdateHeadRotator) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_UpdateHeadRotator");
static_assert(sizeof(ABP_PerformanceRole_C_UpdateHeadRotator) == 0x000008, "Wrong size on ABP_PerformanceRole_C_UpdateHeadRotator");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateHeadRotator, CallFunc_GetHeadApha_ReturnValue) == 0x000000, "Member 'ABP_PerformanceRole_C_UpdateHeadRotator::CallFunc_GetHeadApha_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateHeadRotator, CallFunc_FInterpTo_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_UpdateHeadRotator::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.SyncAnimInstance
// 0x0010 (0x0010 - 0x0000)
struct ABP_PerformanceRole_C_SyncAnimInstance final
{
public:
	class UABP_PerformanceRole_C*                 SourceAnimInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SyncAnimStates_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_SyncAnimInstance) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_SyncAnimInstance");
static_assert(sizeof(ABP_PerformanceRole_C_SyncAnimInstance) == 0x000010, "Wrong size on ABP_PerformanceRole_C_SyncAnimInstance");
static_assert(offsetof(ABP_PerformanceRole_C_SyncAnimInstance, SourceAnimInstance) == 0x000000, "Member 'ABP_PerformanceRole_C_SyncAnimInstance::SourceAnimInstance' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SyncAnimInstance, CallFunc_SyncAnimStates_ReturnValue) == 0x000008, "Member 'ABP_PerformanceRole_C_SyncAnimInstance::CallFunc_SyncAnimStates_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SyncAnimInstance, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ABP_PerformanceRole_C_SyncAnimInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.SetPerformDelay
// 0x0004 (0x0004 - 0x0000)
struct ABP_PerformanceRole_C_SetPerformDelay final
{
public:
	float                                         PerformTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_SetPerformDelay) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_SetPerformDelay");
static_assert(sizeof(ABP_PerformanceRole_C_SetPerformDelay) == 0x000004, "Wrong size on ABP_PerformanceRole_C_SetPerformDelay");
static_assert(offsetof(ABP_PerformanceRole_C_SetPerformDelay, PerformTime) == 0x000000, "Member 'ABP_PerformanceRole_C_SetPerformDelay::PerformTime' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.UpdatePerfromTime
// 0x0004 (0x0004 - 0x0000)
struct ABP_PerformanceRole_C_UpdatePerfromTime final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_UpdatePerfromTime) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_UpdatePerfromTime");
static_assert(sizeof(ABP_PerformanceRole_C_UpdatePerfromTime) == 0x000004, "Wrong size on ABP_PerformanceRole_C_UpdatePerfromTime");
static_assert(offsetof(ABP_PerformanceRole_C_UpdatePerfromTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'ABP_PerformanceRole_C_UpdatePerfromTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.UpdateLookAtRotation
// 0x00F0 (0x00F0 - 0x0000)
struct ABP_PerformanceRole_C_UpdateLookAtRotation final
{
public:
	struct FVector                                SocketPosition;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_UpdateLookAtRotation) == 0x000010, "Wrong alignment on ABP_PerformanceRole_C_UpdateLookAtRotation");
static_assert(sizeof(ABP_PerformanceRole_C_UpdateLookAtRotation) == 0x0000F0, "Wrong size on ABP_PerformanceRole_C_UpdateLookAtRotation");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, SocketPosition) == 0x000000, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::SocketPosition' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000024, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x00002C, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000030, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_InvertTransform_ReturnValue) == 0x000080, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_Normal_ReturnValue) == 0x0000B0, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C0, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_TransformDirection_ReturnValue) == 0x0000C8, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x0000D4, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x0000E0, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateLookAtRotation, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x0000EC, "Member 'ABP_PerformanceRole_C_UpdateLookAtRotation::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.DebugLine
// 0x0040 (0x0040 - 0x0000)
struct ABP_PerformanceRole_C_DebugLine final
{
public:
	struct FVector                                LineStart;                                         // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineEnd;                                           // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_DebugLine) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_DebugLine");
static_assert(sizeof(ABP_PerformanceRole_C_DebugLine) == 0x000040, "Wrong size on ABP_PerformanceRole_C_DebugLine");
static_assert(offsetof(ABP_PerformanceRole_C_DebugLine, LineStart) == 0x000000, "Member 'ABP_PerformanceRole_C_DebugLine::LineStart' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_DebugLine, LineEnd) == 0x00000C, "Member 'ABP_PerformanceRole_C_DebugLine::LineEnd' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_DebugLine, LineColor) == 0x000018, "Member 'ABP_PerformanceRole_C_DebugLine::LineColor' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_DebugLine, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'ABP_PerformanceRole_C_DebugLine::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_DebugLine, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'ABP_PerformanceRole_C_DebugLine::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.UpdateCreateRoleLocation
// 0x00F0 (0x00F0 - 0x0000)
struct ABP_PerformanceRole_C_UpdateCreateRoleLocation final
{
public:
	float                                         CurPrecent;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0044(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_UpdateCreateRoleLocation) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_UpdateCreateRoleLocation");
static_assert(sizeof(ABP_PerformanceRole_C_UpdateCreateRoleLocation) == 0x0000F0, "Wrong size on ABP_PerformanceRole_C_UpdateCreateRoleLocation");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CurPrecent) == 0x000000, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CurPrecent' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_RLerp_ReturnValue) == 0x000008, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000014, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000015, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000016, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000017, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000044, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000D8, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000DC, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_FClamp_ReturnValue) == 0x0000E0, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E4, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, K2Node_SwitchEnum_CmpSuccess) == 0x0000E8, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateCreateRoleLocation, CallFunc_FClamp_ReturnValue_1) == 0x0000EC, "Member 'ABP_PerformanceRole_C_UpdateCreateRoleLocation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.GetIsLooping
// 0x0001 (0x0001 - 0x0000)
struct ABP_PerformanceRole_C_GetIsLooping final
{
public:
	bool                                          isLooping_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_GetIsLooping) == 0x000001, "Wrong alignment on ABP_PerformanceRole_C_GetIsLooping");
static_assert(sizeof(ABP_PerformanceRole_C_GetIsLooping) == 0x000001, "Wrong size on ABP_PerformanceRole_C_GetIsLooping");
static_assert(offsetof(ABP_PerformanceRole_C_GetIsLooping, isLooping_0) == 0x000000, "Member 'ABP_PerformanceRole_C_GetIsLooping::isLooping_0' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.SkillRotate
// 0x00A8 (0x00A8 - 0x0000)
struct ABP_PerformanceRole_C_SkillRotate final
{
public:
	class FName                                   ___name_Variable;                                  // 0x0000(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_1;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_2;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetMainAnims_Anims;                       // 0x0040(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetMainAnims_Weights;                     // 0x0050(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetMainAnims_CurrentTimes;                // 0x0060(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetMainAnims_PlayRates;                   // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMainAnimsCurveValueWithDelta_ReturnValue; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue_3;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_2;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_SkillRotate) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_SkillRotate");
static_assert(sizeof(ABP_PerformanceRole_C_SkillRotate) == 0x0000A8, "Wrong size on ABP_PerformanceRole_C_SkillRotate");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, ___name_Variable) == 0x000000, "Member 'ABP_PerformanceRole_C_SkillRotate::___name_Variable' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00000C, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeLiteralFloat_ReturnValue_1) == 0x000020, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeLiteralFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeRotator_ReturnValue_1) == 0x000024, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000030, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000031, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeLiteralFloat_ReturnValue_2) == 0x000034, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeLiteralFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_GetMainAnims_Anims) == 0x000040, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_GetMainAnims_Anims' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_GetMainAnims_Weights) == 0x000050, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_GetMainAnims_Weights' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_GetMainAnims_CurrentTimes) == 0x000060, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_GetMainAnims_CurrentTimes' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_GetMainAnims_PlayRates) == 0x000070, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_GetMainAnims_PlayRates' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_GetMainAnimsCurveValueWithDelta_ReturnValue) == 0x000084, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_GetMainAnimsCurveValueWithDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeLiteralFloat_ReturnValue_3) == 0x00008C, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeLiteralFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_MakeRotator_ReturnValue_2) == 0x000098, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_SkillRotate, CallFunc_K2_SetActorRotation_ReturnValue_2) == 0x0000A4, "Member 'ABP_PerformanceRole_C_SkillRotate::CallFunc_K2_SetActorRotation_ReturnValue_2' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.UpdateBlinkInfo
// 0x002C (0x002C - 0x0000)
struct ABP_PerformanceRole_C_UpdateBlinkInfo final
{
public:
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue_2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_UpdateBlinkInfo) == 0x000004, "Wrong alignment on ABP_PerformanceRole_C_UpdateBlinkInfo");
static_assert(sizeof(ABP_PerformanceRole_C_UpdateBlinkInfo) == 0x00002C, "Wrong size on ABP_PerformanceRole_C_UpdateBlinkInfo");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_GetTimeSeconds_ReturnValue) == 0x000000, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x00000C, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_RandomFloatInRange_ReturnValue) == 0x000014, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_GetTimeSeconds_ReturnValue_2) == 0x00001C, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_GetTimeSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_GetCurveValue_ReturnValue) == 0x000024, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_UpdateBlinkInfo, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'ABP_PerformanceRole_C_UpdateBlinkInfo::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.Is Same State
// 0x0006 (0x0006 - 0x0000)
struct ABP_PerformanceRole_C_Is_Same_State final
{
public:
	EPerformanceRoleState                         NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformanceRoleState                         StateInternal_0;                                   // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_Is_Same_State) == 0x000001, "Wrong alignment on ABP_PerformanceRole_C_Is_Same_State");
static_assert(sizeof(ABP_PerformanceRole_C_Is_Same_State) == 0x000006, "Wrong size on ABP_PerformanceRole_C_Is_Same_State");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, NewState) == 0x000000, "Member 'ABP_PerformanceRole_C_Is_Same_State::NewState' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, StateInternal_0) == 0x000001, "Member 'ABP_PerformanceRole_C_Is_Same_State::StateInternal_0' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, ReturnValue) == 0x000002, "Member 'ABP_PerformanceRole_C_Is_Same_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, CallFunc_Array_Contains_ReturnValue) == 0x000003, "Member 'ABP_PerformanceRole_C_Is_Same_State::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, CallFunc_Array_Contains_ReturnValue_1) == 0x000004, "Member 'ABP_PerformanceRole_C_Is_Same_State::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_Is_Same_State, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'ABP_PerformanceRole_C_Is_Same_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.Set Current State
// 0x0001 (0x0001 - 0x0000)
struct ABP_PerformanceRole_C_Set_Current_State final
{
public:
	EPerformanceRoleState                         state;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PerformanceRole_C_Set_Current_State) == 0x000001, "Wrong alignment on ABP_PerformanceRole_C_Set_Current_State");
static_assert(sizeof(ABP_PerformanceRole_C_Set_Current_State) == 0x000001, "Wrong size on ABP_PerformanceRole_C_Set_Current_State");
static_assert(offsetof(ABP_PerformanceRole_C_Set_Current_State, state) == 0x000000, "Member 'ABP_PerformanceRole_C_Set_Current_State::state' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_PerformanceRole_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_AnimGraph");
static_assert(sizeof(ABP_PerformanceRole_C_AnimGraph) == 0x000010, "Wrong size on ABP_PerformanceRole_C_AnimGraph");
static_assert(offsetof(ABP_PerformanceRole_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_PerformanceRole_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.BasePose
// 0x0010 (0x0010 - 0x0000)
struct ABP_PerformanceRole_C_BasePose final
{
public:
	struct FPoseLink                              BasePose_0;                                        // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_BasePose) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_BasePose");
static_assert(sizeof(ABP_PerformanceRole_C_BasePose) == 0x000010, "Wrong size on ABP_PerformanceRole_C_BasePose");
static_assert(offsetof(ABP_PerformanceRole_C_BasePose, BasePose_0) == 0x000000, "Member 'ABP_PerformanceRole_C_BasePose::BasePose_0' has a wrong offset!");

// Function ABP_PerformanceRole.ABP_PerformanceRole_C.PostProcessPose
// 0x0020 (0x0020 - 0x0000)
struct ABP_PerformanceRole_C_PostProcessPose final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              PostProcessPose_0;                                 // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PerformanceRole_C_PostProcessPose) == 0x000008, "Wrong alignment on ABP_PerformanceRole_C_PostProcessPose");
static_assert(sizeof(ABP_PerformanceRole_C_PostProcessPose) == 0x000020, "Wrong size on ABP_PerformanceRole_C_PostProcessPose");
static_assert(offsetof(ABP_PerformanceRole_C_PostProcessPose, InPose) == 0x000000, "Member 'ABP_PerformanceRole_C_PostProcessPose::InPose' has a wrong offset!");
static_assert(offsetof(ABP_PerformanceRole_C_PostProcessPose, PostProcessPose_0) == 0x000010, "Member 'ABP_PerformanceRole_C_PostProcessPose::PostProcessPose_0' has a wrong offset!");

}

