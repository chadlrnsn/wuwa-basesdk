#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroPortalCapture

#include "Basic.hpp"

#include "BP_KuroPortalCapture_classes.hpp"
#include "BP_KuroPortalCapture_parameters.hpp"


namespace SDK
{

// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.ExecuteUbergraph_BP_KuroPortalCapture
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroPortalCapture_C::ExecuteUbergraph_BP_KuroPortalCapture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "ExecuteUbergraph_BP_KuroPortalCapture");

	Params::BP_KuroPortalCapture_C_ExecuteUbergraph_BP_KuroPortalCapture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroPortalCapture_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "ReceiveTick");

	Params::BP_KuroPortalCapture_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_KuroPortalCapture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.Teleport
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransformDouble&          InTrans                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRole                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_KuroPortalCapture_C::Teleport(const struct FTransformDouble& InTrans, class AActor* InActor, bool IsRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "Teleport");

	Params::BP_KuroPortalCapture_C_Teleport Parms{};

	Parms.InTrans = std::move(InTrans);
	Parms.InActor = InActor;
	Parms.IsRole = IsRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.SetPair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Pair                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroPortalCapture_C::SetPair(class AActor* Pair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "SetPair");

	Params::BP_KuroPortalCapture_C_SetPair Parms{};

	Parms.Pair = Pair;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.SetPbDataId
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PbdataId_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroPortalCapture_C::SetPbDataId(int32 PbdataId_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "SetPbDataId");

	Params::BP_KuroPortalCapture_C_SetPbDataId Parms{};

	Parms.PbdataId_0 = PbdataId_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.GetPortalTrans
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransformDouble*                NewParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_KuroPortalCapture_C::GetPortalTrans(struct FTransformDouble* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "GetPortalTrans");

	Params::BP_KuroPortalCapture_C_GetPortalTrans Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.GetPair
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_KuroPortalCapture_C**         Target_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroPortalCapture_C::GetPair(class ABP_KuroPortalCapture_C** Target_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "GetPair");

	Params::BP_KuroPortalCapture_C_GetPair Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target_0 != nullptr)
		*Target_0 = Parms.Target_0;
}


// Function BP_KuroPortalCapture.BP_KuroPortalCapture_C.ToggleDebug
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_KuroPortalCapture_C::ToggleDebug(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroPortalCapture_C", "ToggleDebug");

	Params::BP_KuroPortalCapture_C_ToggleDebug Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}

}

