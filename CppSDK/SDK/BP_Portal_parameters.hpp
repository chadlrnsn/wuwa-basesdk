#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Portal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_Portal.BP_Portal_C.ExecuteUbergraph_BP_Portal
// 0x0028 (0x0028 - 0x0000)
struct BP_Portal_C_ExecuteUbergraph_BP_Portal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKuroFeatureLevel                             CallFunc_GetWorldFeatureLevel_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000008, "Wrong alignment on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(sizeof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000028, "Wrong size on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, EntryPoint) == 0x000000, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_GetWorldFeatureLevel_ReturnValue) == 0x000020, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_GetWorldFeatureLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Portal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Portal_C_ReceiveTick");
static_assert(sizeof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong size on BP_Portal_C_ReceiveTick");
static_assert(offsetof(BP_Portal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Portal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UserConstructionScript
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Portal_C_UserConstructionScript final
{
public:
	bool                                          IsPortalA;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, bool>                     CallFunc_GetCaptureShowFlags_ShowFlags;            // 0x0010(0x0050)()
	TMap<class FString, bool>                     CallFunc_GetCaptureShowFlags_ShowFlags_1;          // 0x0060(0x0050)()
};
static_assert(alignof(BP_Portal_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Portal_C_UserConstructionScript");
static_assert(sizeof(BP_Portal_C_UserConstructionScript) == 0x0000B0, "Wrong size on BP_Portal_C_UserConstructionScript");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, IsPortalA) == 0x000000, "Member 'BP_Portal_C_UserConstructionScript::IsPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, CaptureComp) == 0x000008, "Member 'BP_Portal_C_UserConstructionScript::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, CallFunc_GetCaptureShowFlags_ShowFlags) == 0x000010, "Member 'BP_Portal_C_UserConstructionScript::CallFunc_GetCaptureShowFlags_ShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, CallFunc_GetCaptureShowFlags_ShowFlags_1) == 0x000060, "Member 'BP_Portal_C_UserConstructionScript::CallFunc_GetCaptureShowFlags_ShowFlags_1' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DEBUG_开启1
// 0x0040 (0x0040 - 0x0000)
struct BP_Portal_C_DEBUG_开启1 final
{
public:
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0000(0x0040)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_DEBUG_开启1) == 0x000010, "Wrong alignment on BP_Portal_C_DEBUG_开启1");
static_assert(sizeof(BP_Portal_C_DEBUG_开启1) == 0x000040, "Wrong size on BP_Portal_C_DEBUG_开启1");
static_assert(offsetof(BP_Portal_C_DEBUG_开启1, CallFunc_D_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_DEBUG_开启1::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal1Bounds
// 0x0024 (0x0024 - 0x0000)
struct BP_Portal_C_SetPortal1Bounds final
{
public:
	struct FVector                                Bounds;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetPortal1Bounds) == 0x000004, "Wrong alignment on BP_Portal_C_SetPortal1Bounds");
static_assert(sizeof(BP_Portal_C_SetPortal1Bounds) == 0x000024, "Wrong size on BP_Portal_C_SetPortal1Bounds");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, Bounds) == 0x000000, "Member 'BP_Portal_C_SetPortal1Bounds::Bounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal2Bounds
// 0x0024 (0x0024 - 0x0000)
struct BP_Portal_C_SetPortal2Bounds final
{
public:
	struct FVector                                Bounds;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetPortal2Bounds) == 0x000004, "Wrong alignment on BP_Portal_C_SetPortal2Bounds");
static_assert(sizeof(BP_Portal_C_SetPortal2Bounds) == 0x000024, "Wrong size on BP_Portal_C_SetPortal2Bounds");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, Bounds) == 0x000000, "Member 'BP_Portal_C_SetPortal2Bounds::Bounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal1Transform
// 0x0080 (0x0080 - 0x0000)
struct BP_Portal_C_SetPortal1Transform final
{
public:
	struct FTransformDouble                       Transform;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CaptureTransform;                                  // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_SetPortal1Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal1Transform");
static_assert(sizeof(BP_Portal_C_SetPortal1Transform) == 0x000080, "Wrong size on BP_Portal_C_SetPortal1Transform");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal1Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CaptureTransform) == 0x000040, "Member 'BP_Portal_C_SetPortal1Transform::CaptureTransform' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal2Transform
// 0x0080 (0x0080 - 0x0000)
struct BP_Portal_C_SetPortal2Transform final
{
public:
	struct FTransformDouble                       Transform;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CaptureTransform;                                  // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_SetPortal2Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal2Transform");
static_assert(sizeof(BP_Portal_C_SetPortal2Transform) == 0x000080, "Wrong size on BP_Portal_C_SetPortal2Transform");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal2Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CaptureTransform) == 0x000040, "Member 'BP_Portal_C_SetPortal2Transform::CaptureTransform' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DEBUG_开启2
// 0x0040 (0x0040 - 0x0000)
struct BP_Portal_C_DEBUG_开启2 final
{
public:
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0000(0x0040)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_DEBUG_开启2) == 0x000010, "Wrong alignment on BP_Portal_C_DEBUG_开启2");
static_assert(sizeof(BP_Portal_C_DEBUG_开启2) == 0x000040, "Wrong size on BP_Portal_C_DEBUG_开启2");
static_assert(offsetof(BP_Portal_C_DEBUG_开启2, CallFunc_D_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_DEBUG_开启2::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureShowingActors
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_SetCaptureShowingActors final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HiddenActors;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         ForceShowActors;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetCaptureShowingActors) == 0x000008, "Wrong alignment on BP_Portal_C_SetCaptureShowingActors");
static_assert(sizeof(BP_Portal_C_SetCaptureShowingActors) == 0x000030, "Wrong size on BP_Portal_C_SetCaptureShowingActors");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureShowingActors::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, HiddenActors) == 0x000008, "Member 'BP_Portal_C_SetCaptureShowingActors::HiddenActors' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, ForceShowActors) == 0x000018, "Member 'BP_Portal_C_SetCaptureShowingActors::ForceShowActors' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, CaptureComp) == 0x000028, "Member 'BP_Portal_C_SetCaptureShowingActors::CaptureComp' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureMaxViewDistance
// 0x0008 (0x0008 - 0x0000)
struct BP_Portal_C_SetCaptureMaxViewDistance final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxViewDistance;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetCaptureMaxViewDistance) == 0x000004, "Wrong alignment on BP_Portal_C_SetCaptureMaxViewDistance");
static_assert(sizeof(BP_Portal_C_SetCaptureMaxViewDistance) == 0x000008, "Wrong size on BP_Portal_C_SetCaptureMaxViewDistance");
static_assert(offsetof(BP_Portal_C_SetCaptureMaxViewDistance, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureMaxViewDistance::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureMaxViewDistance, MaxViewDistance) == 0x000004, "Member 'BP_Portal_C_SetCaptureMaxViewDistance::MaxViewDistance' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.GetCaptureShowFlags
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Portal_C_GetCaptureShowFlags final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, bool>                     ShowFlags;                                         // 0x0008(0x0050)(Parm, OutParm)
	TMap<class FString, bool>                     ShowFlagCopy;                                      // 0x0058(0x0050)(Edit, BlueprintVisible)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEngineShowFlagsSetting                CallFunc_Array_Get_Item;                           // 0x00C0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_GetCaptureShowFlags) == 0x000008, "Wrong alignment on BP_Portal_C_GetCaptureShowFlags");
static_assert(sizeof(BP_Portal_C_GetCaptureShowFlags) == 0x0000E0, "Wrong size on BP_Portal_C_GetCaptureShowFlags");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, IsCapture1) == 0x000000, "Member 'BP_Portal_C_GetCaptureShowFlags::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, ShowFlags) == 0x000008, "Member 'BP_Portal_C_GetCaptureShowFlags::ShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, ShowFlagCopy) == 0x000058, "Member 'BP_Portal_C_GetCaptureShowFlags::ShowFlagCopy' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, CaptureComp) == 0x0000A8, "Member 'BP_Portal_C_GetCaptureShowFlags::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, ___int_Array_Index_Variable) == 0x0000B0, "Member 'BP_Portal_C_GetCaptureShowFlags::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, ___int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_Portal_C_GetCaptureShowFlags::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_Portal_C_GetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_Portal_C_GetCaptureShowFlags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_Portal_C_GetCaptureShowFlags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Portal_C_GetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureShowFlags
// 0x0220 (0x0220 - 0x0000)
struct BP_Portal_C_SetCaptureShowFlags final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, bool>                     ShowFlags;                                         // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FString, bool>                     NewShowFlags;                                      // 0x0058(0x0050)(Edit, BlueprintVisible)
	TMap<class FString, bool>                     InitShowFlags;                                     // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TSet<class FString>                           ExistFlagNameSet;                                  // 0x00F8(0x0050)(Edit, BlueprintVisible)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0168(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEngineShowFlagsSetting                K2Node_MakeStruct_EngineShowFlagsSetting;          // 0x0190(0x0018)()
	TArray<class FString>                         CallFunc_Map_Keys_Keys_1;                          // 0x01A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys_2;                          // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_2;                         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetCaptureShowFlags) == 0x000008, "Wrong alignment on BP_Portal_C_SetCaptureShowFlags");
static_assert(sizeof(BP_Portal_C_SetCaptureShowFlags) == 0x000220, "Wrong size on BP_Portal_C_SetCaptureShowFlags");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureShowFlags::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ShowFlags) == 0x000008, "Member 'BP_Portal_C_SetCaptureShowFlags::ShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, NewShowFlags) == 0x000058, "Member 'BP_Portal_C_SetCaptureShowFlags::NewShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, InitShowFlags) == 0x0000A8, "Member 'BP_Portal_C_SetCaptureShowFlags::InitShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ExistFlagNameSet) == 0x0000F8, "Member 'BP_Portal_C_SetCaptureShowFlags::ExistFlagNameSet' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CaptureComp) == 0x000148, "Member 'BP_Portal_C_SetCaptureShowFlags::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Array_Index_Variable) == 0x000150, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Array_Index_Variable_1) == 0x000154, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Loop_Counter_Variable) == 0x000158, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Array_Index_Variable_2) == 0x000160, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Keys_Keys) == 0x000168, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Get_Item) == 0x000178, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_Value) == 0x00018C, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_ReturnValue) == 0x00018D, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue) == 0x00018E, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, K2Node_MakeStruct_EngineShowFlagsSetting) == 0x000190, "Member 'BP_Portal_C_SetCaptureShowFlags::K2Node_MakeStruct_EngineShowFlagsSetting' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Keys_Keys_1) == 0x0001A8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Length_ReturnValue_1) == 0x0001C8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_Value_1) == 0x0001CC, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_ReturnValue_1) == 0x0001CD, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Loop_Counter_Variable_1) == 0x0001D0, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Keys_Keys_2) == 0x0001D8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_Value_2) == 0x000200, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_ReturnValue_2) == 0x000201, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Length_ReturnValue_2) == 0x000204, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue_1) == 0x000208, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Loop_Counter_Variable_2) == 0x00020C, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue_2) == 0x000210, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue_2) == 0x000214, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalAnimation
// 0x0068 (0x0068 - 0x0000)
struct BP_Portal_C_UpdatePortalAnimation final
{
public:
	float                                         ShowLen;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeLen;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShown;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShowCurve;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FadeCurve;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Counter;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   SM;                                                // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DMI;                                               // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputCounter;                                     // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Factor;                                            // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         temp;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_UpdatePortalAnimation) == 0x000008, "Wrong alignment on BP_Portal_C_UpdatePortalAnimation");
static_assert(sizeof(BP_Portal_C_UpdatePortalAnimation) == 0x000068, "Wrong size on BP_Portal_C_UpdatePortalAnimation");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowLen) == 0x000000, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeLen) == 0x000004, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, IsShown) == 0x000008, "Member 'BP_Portal_C_UpdatePortalAnimation::IsShown' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowCurve) == 0x000010, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeCurve) == 0x000018, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Counter) == 0x000020, "Member 'BP_Portal_C_UpdatePortalAnimation::Counter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, SM) == 0x000028, "Member 'BP_Portal_C_UpdatePortalAnimation::SM' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, DMI) == 0x000030, "Member 'BP_Portal_C_UpdatePortalAnimation::DMI' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, OutputCounter) == 0x000038, "Member 'BP_Portal_C_UpdatePortalAnimation::OutputCounter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Factor) == 0x00003C, "Member 'BP_Portal_C_UpdatePortalAnimation::Factor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, temp) == 0x000040, "Member 'BP_Portal_C_UpdatePortalAnimation::temp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue_1) == 0x000048, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue) == 0x000054, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue_1) == 0x000058, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00005C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalsCameraPosition
// 0x0CD0 (0x0CD0 - 0x0000)
struct BP_Portal_C_UpdatePortalsCameraPosition final
{
public:
	struct FVector                                ScaledPortalBounds2;                               // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaledPortalBounds1;                               // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PortalEdgeFarPoint2;                               // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PortalEdgeFarPoint1;                               // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CameraTempTrans2;                                  // 0x0030(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CameraTempTrans1;                                  // 0x0070(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetCameraLocation_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetCameraLocation_ReturnValue_1;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue;          // 0x0110(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_1;        // 0x0150(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location;            // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation;            // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale;               // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_1;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_1;          // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_1;             // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_2;          // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_2;          // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_2;             // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_2;        // 0x02B0(0x0040)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_7;      // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_8;      // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_9;      // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_3;          // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_3;          // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_3;             // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_3;        // 0x0350(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_4;          // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_4;          // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_4;             // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_4;        // 0x03C0(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_3;                // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_5;          // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_5;          // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_5;             // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_6;          // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_6;          // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_6;             // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_7;          // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_7;          // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_7;             // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_5;        // 0x04E0(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_D_InverseTransformLocation_ReturnValue;   // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_4;                // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle;              // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A9[0x3];                                      // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C5[0x3];                                      // 0x05C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle_1;            // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_5;                // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x05FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_2;     // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_6;                // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_7;                // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x064C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_LookRotation_ForwardFirst_ReturnValue;    // 0x0664(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_D_TransformRotation_ReturnValue;          // 0x0674(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_684[0xC];                                      // 0x0684(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_6;        // 0x0690(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_SetWorldTransform_SweepHitResult;    // 0x06D4(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_8;          // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_8;          // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_8;             // 0x0794(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x07A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_9;          // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_9;          // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_9;             // 0x07D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_InverseTransformLocation_ReturnValue_1; // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F8[0x8];                                      // 0x07F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue;     // 0x0800(0x0040)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_1;  // 0x0840(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x084C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_3;     // 0x0864(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_5;                      // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_889[0x3];                                      // 0x0889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue_2;                    // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0892(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0893(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0896(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_897[0x1];                                      // 0x0897(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngleBetweenVector_Angle_2;            // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x08A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_5;            // 0x08B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_4;     // 0x08BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8[0x8];                                      // 0x08C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue_1;   // 0x08D0(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_6;                      // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle_3;            // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_3;                    // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92C[0x4];                                      // 0x092C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_6;            // 0x0938(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_944[0x4];                                      // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_GetCameraLocation_ReturnValue_2;        // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_5;     // 0x0960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_2;          // 0x096C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_7;                      // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97C[0x4];                                      // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_7;        // 0x0980(0x0040)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_7;            // 0x09C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9CC[0x4];                                      // 0x09CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_GetMappingTransformToOtherPortal_TargetTransform; // 0x09D0(0x0040)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_10;         // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_10;         // 0x0A38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_10;            // 0x0A44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_8;                      // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0xC];                                      // 0x0A54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_8;        // 0x0A60(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize_ReturnValue_9;                      // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_LookRotation_ForwardFirst_ReturnValue_1;  // 0x0AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_D_TransformRotation_ReturnValue_1;        // 0x0AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAsin_ReturnValue_1;                    // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC8[0x8];                                      // 0x0AC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_9;        // 0x0AD0(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_SetWorldTransform_SweepHitResult_1;  // 0x0B14(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetCameraLocation_ReturnValue_3;        // 0x0BB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_3;          // 0x0BD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BDC[0x4];                                      // 0x0BDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_10;       // 0x0BE0(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1; // 0x0C20(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_11;         // 0x0C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_11;         // 0x0C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_11;            // 0x0C84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue_11;       // 0x0C90(0x0040)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x000010, "Wrong alignment on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(sizeof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x000CD0, "Wrong size on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, ScaledPortalBounds2) == 0x000000, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::ScaledPortalBounds2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, ScaledPortalBounds1) == 0x00000C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::ScaledPortalBounds1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, PortalEdgeFarPoint2) == 0x000018, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::PortalEdgeFarPoint2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, PortalEdgeFarPoint1) == 0x000024, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::PortalEdgeFarPoint1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CameraTempTrans2) == 0x000030, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CameraTempTrans2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CameraTempTrans1) == 0x000070, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CameraTempTrans1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0000B8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_GetCameraLocation_ReturnValue) == 0x0000C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_GetCameraLocation_ReturnValue_1) == 0x0000D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x0000F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_1) == 0x0000FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue) == 0x000110, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_1) == 0x000150, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location) == 0x000190, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation) == 0x0001A8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale) == 0x0001B4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_1) == 0x0001D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_1) == 0x0001E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_1) == 0x0001F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000200, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X) == 0x00020C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y) == 0x000210, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z) == 0x000214, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000218, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_1) == 0x00021C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_1) == 0x000220, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_1) == 0x000224, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_2) == 0x000228, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_2) == 0x00022C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_2) == 0x000230, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000234, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000240, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000244, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000250, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x00025C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_3) == 0x000268, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_3) == 0x00026C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_3) == 0x000270, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x000274, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_2) == 0x000280, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_2) == 0x000298, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_2) == 0x0002A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_2) == 0x0002B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_7) == 0x0002F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_8) == 0x0002FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_9) == 0x000308, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_3) == 0x000318, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_3) == 0x000330, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_3) == 0x00033C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_3) == 0x000350, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_4) == 0x000390, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_4) == 0x0003A8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_4) == 0x0003B4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_4) == 0x0003C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_4) == 0x000400, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_4) == 0x000404, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_4) == 0x000408, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue) == 0x00040C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_1) == 0x000410, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000414, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000420, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_5) == 0x00042C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_5) == 0x000430, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_5) == 0x000434, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_2) == 0x000438, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_3) == 0x00043C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeVector_ReturnValue) == 0x000440, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_5) == 0x000450, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_5) == 0x000468, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_5) == 0x000474, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_6) == 0x000480, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_6) == 0x000498, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_6) == 0x0004A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_7) == 0x0004B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_7) == 0x0004C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_7) == 0x0004D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_5) == 0x0004E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_InverseTransformLocation_ReturnValue) == 0x000520, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_6) == 0x000538, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_6) == 0x00053C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_6) == 0x000540, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000544, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_4) == 0x000550, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000554, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000560, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x00056C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000578, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue) == 0x000584, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle) == 0x000588, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00058C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_7) == 0x000590, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_7) == 0x000594, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_7) == 0x000598, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue) == 0x00059C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0005A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0005A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue) == 0x0005A8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0005AC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0005B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue) == 0x0005B4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue) == 0x0005C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005C1, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_1) == 0x0005C2, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_2) == 0x0005C3, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_3) == 0x0005C4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0005C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x0005D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0005E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_1) == 0x0005E4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0005E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_1) == 0x0005EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_1) == 0x0005F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_5) == 0x0005F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0005F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0005FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000608, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00060C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000610, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_8) == 0x00061C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_8) == 0x000620, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_8) == 0x000624, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_2) == 0x000628, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_6) == 0x000634, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_2) == 0x000638, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_7) == 0x00063C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x000640, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Cross_VectorVector_ReturnValue) == 0x00064C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_3) == 0x000658, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_4) == 0x00065C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000660, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_LookRotation_ForwardFirst_ReturnValue) == 0x000664, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_LookRotation_ForwardFirst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000670, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_TransformRotation_ReturnValue) == 0x000674, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAsin_ReturnValue) == 0x000680, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_6) == 0x000690, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegCos_ReturnValue) == 0x0006D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_K2_SetWorldTransform_SweepHitResult) == 0x0006D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000768, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00076C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_8) == 0x000770, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_8) == 0x000788, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_8) == 0x000794, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeVector_ReturnValue_1) == 0x0007A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_9) == 0x0007B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_9) == 0x0007C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_9) == 0x0007D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_InverseTransformLocation_ReturnValue_1) == 0x0007E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_K2_GetComponentToWorld_ReturnValue) == 0x000800, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Conv_VectorDoubleToVector_ReturnValue_1) == 0x000840, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Conv_VectorDoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00084C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000858, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_3) == 0x000864, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_9) == 0x000870, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_9) == 0x000874, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_9) == 0x000878, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_5) == 0x00087C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000880, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000884, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_2) == 0x000888, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_2) == 0x00088C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000890, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000891, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_4) == 0x000892, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_3) == 0x000893, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_5) == 0x000894, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_6) == 0x000895, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_7) == 0x000896, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_2) == 0x000898, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00089C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0008A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x0008A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_5) == 0x0008B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_4) == 0x0008BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_K2_GetComponentToWorld_ReturnValue_1) == 0x0008D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_6) == 0x000910, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_3) == 0x000914, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000918, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_3) == 0x00091C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000920, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000924, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000928, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x000930, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_6) == 0x000938, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_GetCameraLocation_ReturnValue_2) == 0x000948, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_GetCameraLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_5) == 0x000960, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_2) == 0x00096C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_7) == 0x000978, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_7) == 0x000980, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_7) == 0x0009C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetMappingTransformToOtherPortal_TargetTransform) == 0x0009D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetMappingTransformToOtherPortal_TargetTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000A10, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_10) == 0x000A20, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_10) == 0x000A38, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_10) == 0x000A44, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_8) == 0x000A50, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_8) == 0x000A60, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_9) == 0x000AA0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000AA4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_LookRotation_ForwardFirst_ReturnValue_1) == 0x000AA8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_LookRotation_ForwardFirst_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000AB4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_TransformRotation_ReturnValue_1) == 0x000AB8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_TransformRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAsin_ReturnValue_1) == 0x000AC4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAsin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_9) == 0x000AD0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegCos_ReturnValue_1) == 0x000B10, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_K2_SetWorldTransform_SweepHitResult_1) == 0x000B14, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x000BA8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x000BAC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x000BB0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_D_GetCameraLocation_ReturnValue_3) == 0x000BB8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_D_GetCameraLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_3) == 0x000BD0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_10) == 0x000BE0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1) == 0x000C20, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Location_11) == 0x000C60, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Location_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Rotation_11) == 0x000C78, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Rotation_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransformDouble_Scale_11) == 0x000C84, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransformDouble_Scale_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransformDouble_ReturnValue_11) == 0x000C90, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransformDouble_ReturnValue_11' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.GetMappingTransformToOtherPortal
// 0x0250 (0x0250 - 0x0000)
struct BP_Portal_C_GetMappingTransformToOtherPortal final
{
public:
	struct FTransformDouble                       SourceTransform;                                   // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bA2B;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       TargetTransform;                                   // 0x0050(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       TargetPortalTransform;                             // 0x0090(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       SourcePortalTransform;                             // 0x00D0(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue;          // 0x0110(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_D_InvertTransform_ReturnValue;            // 0x0150(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_D_ComposeTransforms_ReturnValue;          // 0x0190(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_D_ComposeTransforms_ReturnValue_1;        // 0x01D0(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransformDouble                       CallFunc_D_ComposeTransforms_ReturnValue_2;        // 0x0210(0x0040)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_GetMappingTransformToOtherPortal) == 0x000010, "Wrong alignment on BP_Portal_C_GetMappingTransformToOtherPortal");
static_assert(sizeof(BP_Portal_C_GetMappingTransformToOtherPortal) == 0x000250, "Wrong size on BP_Portal_C_GetMappingTransformToOtherPortal");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, SourceTransform) == 0x000000, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::SourceTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, bA2B) == 0x000040, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::bA2B' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, TargetTransform) == 0x000050, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::TargetTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, TargetPortalTransform) == 0x000090, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::TargetPortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, SourcePortalTransform) == 0x0000D0, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::SourcePortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_MakeTransformDouble_ReturnValue) == 0x000110, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_MakeTransformDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_D_InvertTransform_ReturnValue) == 0x000150, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_D_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_D_ComposeTransforms_ReturnValue) == 0x000190, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_D_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_D_ComposeTransforms_ReturnValue_1) == 0x0001D0, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_D_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_D_ComposeTransforms_ReturnValue_2) == 0x000210, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_D_ComposeTransforms_ReturnValue_2' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DrawDebugFrustum
// 0x01A0 (0x01A0 - 0x0000)
struct BP_Portal_C_DrawDebugFrustum final
{
public:
	struct FTransformDouble                       Transform;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         FovX;                                              // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearClipPlane;                                     // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AspectRatio;                                       // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearPlaneBound;                                    // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation;            // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale;               // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_1;  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_1;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_2;  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_3;  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_2;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_3;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_DrawDebugFrustum) == 0x000010, "Wrong alignment on BP_Portal_C_DrawDebugFrustum");
static_assert(sizeof(BP_Portal_C_DrawDebugFrustum) == 0x0001A0, "Wrong size on BP_Portal_C_DrawDebugFrustum");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, Transform) == 0x000000, "Member 'BP_Portal_C_DrawDebugFrustum::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, FovX) == 0x000040, "Member 'BP_Portal_C_DrawDebugFrustum::FovX' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, NearClipPlane) == 0x000044, "Member 'BP_Portal_C_DrawDebugFrustum::NearClipPlane' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, AspectRatio) == 0x000048, "Member 'BP_Portal_C_DrawDebugFrustum::AspectRatio' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, NearPlaneBound) == 0x00004C, "Member 'BP_Portal_C_DrawDebugFrustum::NearPlaneBound' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_DegTan_ReturnValue) == 0x00005C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransformDouble_Location) == 0x000068, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransformDouble_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransformDouble_Rotation) == 0x000080, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransformDouble_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransformDouble_Scale) == 0x00008C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransformDouble_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A4, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x0000B0, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Conv_VectorToVectorDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Conv_VectorToVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_D_TransformLocation_ReturnValue) == 0x0000E0, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_D_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_D_TransformLocation_ReturnValue_1) == 0x0000F8, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_D_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000110, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x00011C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Conv_VectorToVectorDouble_ReturnValue_2) == 0x000128, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Conv_VectorToVectorDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Conv_VectorToVectorDouble_ReturnValue_3) == 0x000140, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Conv_VectorToVectorDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_D_TransformLocation_ReturnValue_2) == 0x000158, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_D_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_D_TransformLocation_ReturnValue_3) == 0x000170, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_D_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_MakeVector_ReturnValue) == 0x000190, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.GetAngleBetweenVector
// 0x0040 (0x0040 - 0x0000)
struct BP_Portal_C_GetAngleBetweenVector final
{
public:
	struct FVector                                Vector1;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector2;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_GetAngleBetweenVector) == 0x000004, "Wrong alignment on BP_Portal_C_GetAngleBetweenVector");
static_assert(sizeof(BP_Portal_C_GetAngleBetweenVector) == 0x000040, "Wrong size on BP_Portal_C_GetAngleBetweenVector");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Vector1) == 0x000000, "Member 'BP_Portal_C_GetAngleBetweenVector::Vector1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Vector2) == 0x00000C, "Member 'BP_Portal_C_GetAngleBetweenVector::Vector2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Angle) == 0x000018, "Member 'BP_Portal_C_GetAngleBetweenVector::Angle' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Cross_VectorVector_ReturnValue) == 0x000020, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue_1) == 0x00002C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue_2) == 0x000030, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_DegAsin_ReturnValue) == 0x00003C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_DegAsin_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.ApplyCapturePerformace
// 0x0038 (0x0038 - 0x0000)
struct BP_Portal_C_ApplyCapturePerformace final
{
public:
	bool                                          IsPortalA;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConfigLevel;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureMaxViewDistance;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSceneCaptureComponent2DParams         tmep_config;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_ApplyCapturePerformace) == 0x000008, "Wrong alignment on BP_Portal_C_ApplyCapturePerformace");
static_assert(sizeof(BP_Portal_C_ApplyCapturePerformace) == 0x000038, "Wrong size on BP_Portal_C_ApplyCapturePerformace");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, IsPortalA) == 0x000000, "Member 'BP_Portal_C_ApplyCapturePerformace::IsPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, ConfigLevel) == 0x000004, "Member 'BP_Portal_C_ApplyCapturePerformace::ConfigLevel' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, CaptureMaxViewDistance) == 0x000008, "Member 'BP_Portal_C_ApplyCapturePerformace::CaptureMaxViewDistance' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, CaptureComp) == 0x000010, "Member 'BP_Portal_C_ApplyCapturePerformace::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, tmep_config) == 0x000018, "Member 'BP_Portal_C_ApplyCapturePerformace::tmep_config' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'BP_Portal_C_ApplyCapturePerformace::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, K2Node_SwitchInteger_CmpSuccess_1) == 0x000031, "Member 'BP_Portal_C_ApplyCapturePerformace::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.CheckCapturePerformanceLevel
// 0x0120 (0x0120 - 0x0000)
struct BP_Portal_C_CheckCapturePerformanceLevel final
{
public:
	bool                                          isPortalA;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       targetTrans;                                       // 0x0010(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         temp_level;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         temp_distance;                                     // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       TempTrans;                                         // 0x0060(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location;            // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation;            // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale;               // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location_1;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation_1;          // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale_1;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Vector_Distance_ReturnValue;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_CheckCapturePerformanceLevel) == 0x000010, "Wrong alignment on BP_Portal_C_CheckCapturePerformanceLevel");
static_assert(sizeof(BP_Portal_C_CheckCapturePerformanceLevel) == 0x000120, "Wrong size on BP_Portal_C_CheckCapturePerformanceLevel");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, isPortalA) == 0x000000, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::isPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, targetTrans) == 0x000010, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::targetTrans' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, temp_level) == 0x000050, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::temp_level' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, temp_distance) == 0x000054, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::temp_distance' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, TempTrans) == 0x000060, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::TempTrans' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Location) == 0x0000A8, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Rotation) == 0x0000C0, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Scale) == 0x0000CC, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Location_1) == 0x0000E0, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Rotation_1) == 0x0000F8, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransformDouble_Scale_1) == 0x000104, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransformDouble_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_D_Vector_Distance_ReturnValue) == 0x000110, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_D_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x000118, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00011D, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00011E, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.PrintDebugCaptureParams
// 0x0320 (0x0320 - 0x0000)
struct BP_Portal_C_PrintDebugCaptureParams final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSceneCaptureComponent2DParams         CaptureParam;                                      // 0x0004(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       PortalTransform;                                   // 0x0020(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                DebugTextPos;                                      // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LogColor;                                          // 0x006C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0080(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x00D8(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x00F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0188(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_4;            // 0x01A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0238(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0278(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02B8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0308(0x0018)()
};
static_assert(alignof(BP_Portal_C_PrintDebugCaptureParams) == 0x000010, "Wrong alignment on BP_Portal_C_PrintDebugCaptureParams");
static_assert(sizeof(BP_Portal_C_PrintDebugCaptureParams) == 0x000320, "Wrong size on BP_Portal_C_PrintDebugCaptureParams");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, IsCapture1) == 0x000000, "Member 'BP_Portal_C_PrintDebugCaptureParams::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CaptureParam) == 0x000004, "Member 'BP_Portal_C_PrintDebugCaptureParams::CaptureParam' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, PortalTransform) == 0x000020, "Member 'BP_Portal_C_PrintDebugCaptureParams::PortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, DebugTextPos) == 0x000060, "Member 'BP_Portal_C_PrintDebugCaptureParams::DebugTextPos' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, LogColor) == 0x00006C, "Member 'BP_Portal_C_PrintDebugCaptureParams::LogColor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue) == 0x000080, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0000D8, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0000F0, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000188, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_4) == 0x0001A0, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_5) == 0x000238, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_6) == 0x000278, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002B8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeArray_Array) == 0x0002F8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Format_ReturnValue) == 0x000308, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DrawDebugPortalBounds
// 0x0150 (0x0150 - 0x0000)
struct BP_Portal_C_DrawDebugPortalBounds final
{
public:
	bool                                          IsPortal1;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PortalBounds;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       PortalTransform;                                   // 0x0010(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_1;  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_2;  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_3;  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_1;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_2;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_3;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_DrawDebugPortalBounds) == 0x000010, "Wrong alignment on BP_Portal_C_DrawDebugPortalBounds");
static_assert(sizeof(BP_Portal_C_DrawDebugPortalBounds) == 0x000150, "Wrong size on BP_Portal_C_DrawDebugPortalBounds");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, IsPortal1) == 0x000000, "Member 'BP_Portal_C_DrawDebugPortalBounds::IsPortal1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, PortalBounds) == 0x000004, "Member 'BP_Portal_C_DrawDebugPortalBounds::PortalBounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, PortalTransform) == 0x000010, "Member 'BP_Portal_C_DrawDebugPortalBounds::PortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x000060, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000078, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Conv_VectorToVectorDouble_ReturnValue_1) == 0x000088, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Conv_VectorToVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000A0, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Conv_VectorToVectorDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Conv_VectorToVectorDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0000C8, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Conv_VectorToVectorDouble_ReturnValue_3) == 0x0000D8, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Conv_VectorToVectorDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_D_TransformLocation_ReturnValue) == 0x0000F0, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_D_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_D_TransformLocation_ReturnValue_1) == 0x000108, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_D_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_D_TransformLocation_ReturnValue_2) == 0x000120, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_D_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_D_TransformLocation_ReturnValue_3) == 0x000138, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_D_TransformLocation_ReturnValue_3' has a wrong offset!");

}

