#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPushSdk

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class KuroPushSdk.KuroPushObject
// 0x0020 (0x0050 - 0x0030)
class UKuroPushObject final : public UObject
{
public:
	TMulticastInlineDelegate<void(const class FString& source, const class FString& result)> PushSdkMessageBluePrintDelegate; // 0x0030(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMulticastInlineDelegate<void(bool result)>   AllowedNotificationsDelegate;                      // 0x0040(0x0010)(Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPushObject">();
	}
	static class UKuroPushObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPushObject>();
	}
};
static_assert(alignof(UKuroPushObject) == 0x000008, "Wrong alignment on UKuroPushObject");
static_assert(sizeof(UKuroPushObject) == 0x000050, "Wrong size on UKuroPushObject");
static_assert(offsetof(UKuroPushObject, PushSdkMessageBluePrintDelegate) == 0x000030, "Member 'UKuroPushObject::PushSdkMessageBluePrintDelegate' has a wrong offset!");
static_assert(offsetof(UKuroPushObject, AllowedNotificationsDelegate) == 0x000040, "Member 'UKuroPushObject::AllowedNotificationsDelegate' has a wrong offset!");

// Class KuroPushSdk.KuroPushSdkStaticLibrary
// 0x0000 (0x0030 - 0x0030)
class UKuroPushSdkStaticLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void AreNotificationEnable();
	static void BindAlias(const class FString& alias, const class FString& sn);
	static void CheckManifest();
	static void ClearNotificationForNotificationBar();
	static void Destroy();
	static class FString GetClientId();
	static class UKuroPushObject* GetPushObject();
	static int32 GetStatus();
	static class FString GetVersion();
	static void Init();
	static bool IsPushTurnOn();
	static void OpenNotification();
	static void PushLocalNotification(const class FString& title, const class FString& body, const class FString& exData);
	static void RegistRemoteNotification();
	static void ResetBudge();
	static void Resume();
	static void SendFeedBackMessage(const class FString& actionId, const class FString& taskId, const class FString& msgId);
	static void SetApplicationGroupIdentify(const class FString& identify);
	static void SetBudge(const class FString& budge);
	static void SetChannel(const class FString& channelId);
	static void SetDebug();
	static void SetLocalChannelId(class FString* channelId);
	static void SetLocalChannelIdAndName(class FString* channelId, class FString* channelName);
	static void SetLocalSetNotificationIcon(class FString* smallIcon, class FString* largeIcon);
	static void SetLocationEnable(bool isEnable, bool isVerify);
	static void SetNotificationIcon(class FString* smallIcon, class FString* largeIcon);
	static void SetPushMode(bool turnOn);
	static void SetRunInBackGround(bool state);
	static bool SetTag(const class FString& tags, const class FString& sn);
	static void StartPushSdk(const class FString& appId, const class FString& appKey, const class FString& appSecret);
	static void TurnOffPush();
	static void TurnOnPush();
	static void UnBindAlias(const class FString& alias, const class FString& sn, bool isSelf);
	static void VoipRegistration();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KuroPushSdkStaticLibrary">();
	}
	static class UKuroPushSdkStaticLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKuroPushSdkStaticLibrary>();
	}
};
static_assert(alignof(UKuroPushSdkStaticLibrary) == 0x000008, "Wrong alignment on UKuroPushSdkStaticLibrary");
static_assert(sizeof(UKuroPushSdkStaticLibrary) == 0x000030, "Wrong size on UKuroPushSdkStaticLibrary");

}

