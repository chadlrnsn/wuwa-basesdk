#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StateMachineEffectBase

#include "Basic.hpp"

#include "EEffectState_structs.hpp"
#include "SStateBasedEffectFloatCurveSection_structs.hpp"
#include "STransitionFloatIndexGroup_structs.hpp"
#include "SEffectStateInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STransitionLinearColorIndexGroup_structs.hpp"
#include "SEffectStateFloatCurve_structs.hpp"
#include "SStateBasedEffectLinearColorCurveSection_structs.hpp"
#include "SEffectStateLinearColorCurve_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.ExecuteUbergraph_BP_StateMachineEffectBase
// 0x000C (0x000C - 0x0000)
struct BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase) == 0x000004, "Wrong alignment on BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase");
static_assert(sizeof(BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase) == 0x00000C, "Wrong size on BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase");
static_assert(offsetof(BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase, EntryPoint) == 0x000000, "Member 'BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase, K2Node_Event_DeltaSeconds_1) == 0x000004, "Member 'BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_StateMachineEffectBase_C_ExecuteUbergraph_BP_StateMachineEffectBase::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_StateMachineEffectBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_StateMachineEffectBase_C_ReceiveTick");
static_assert(sizeof(BP_StateMachineEffectBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_StateMachineEffectBase_C_ReceiveTick");
static_assert(offsetof(BP_StateMachineEffectBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_StateMachineEffectBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.EditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_StateMachineEffectBase_C_EditorTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_EditorTick) == 0x000004, "Wrong alignment on BP_StateMachineEffectBase_C_EditorTick");
static_assert(sizeof(BP_StateMachineEffectBase_C_EditorTick) == 0x000004, "Wrong size on BP_StateMachineEffectBase_C_EditorTick");
static_assert(offsetof(BP_StateMachineEffectBase_C_EditorTick, DeltaSeconds) == 0x000000, "Member 'BP_StateMachineEffectBase_C_EditorTick::DeltaSeconds' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.Init
// 0x0390 (0x0390 - 0x0000)
struct BP_StateMachineEffectBase_C_Init final
{
public:
	EEffectState                                  TargetState_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ___struct_Variable;                                // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0060(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0xC];                                      // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ___struct_Variable_1;                              // 0x0130(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0168(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateInfo                      CallFunc_GetStateInfo_Ret;                         // 0x0200(0x0150)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0360(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_Init) == 0x000010, "Wrong alignment on BP_StateMachineEffectBase_C_Init");
static_assert(sizeof(BP_StateMachineEffectBase_C_Init) == 0x000390, "Wrong size on BP_StateMachineEffectBase_C_Init");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, TargetState_0) == 0x000000, "Member 'BP_StateMachineEffectBase_C_Init::TargetState_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_StateMachineEffectBase_C_Init::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_StateMachineEffectBase_C_Init::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_Init::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_StateMachineEffectBase_C_Init::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___struct_Variable) == 0x000020, "Member 'BP_StateMachineEffectBase_C_Init::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000060, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Array_Index_Variable_2) == 0x0000F4, "Member 'BP_StateMachineEffectBase_C_Init::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___int_Loop_Counter_Variable_2) == 0x000108, "Member 'BP_StateMachineEffectBase_C_Init::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00011C, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Less_IntInt_ReturnValue_1) == 0x00011D, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, ___struct_Variable_1) == 0x000130, "Member 'BP_StateMachineEffectBase_C_Init::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_AddComponent_ReturnValue_1) == 0x000160, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000168, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_GetStateInfo_Ret) == 0x000200, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_GetStateInfo_Ret' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Add_ReturnValue_1) == 0x000350, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_GetMaterial_ReturnValue) == 0x000358, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_GetMaterials_ReturnValue) == 0x000360, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000370, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Length_ReturnValue_2) == 0x000378, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Array_Add_ReturnValue_2) == 0x00037C, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_Less_IntInt_ReturnValue_2) == 0x000380, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_SetStaticMesh_ReturnValue) == 0x000381, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Init, CallFunc_IsValid_ReturnValue) == 0x000382, "Member 'BP_StateMachineEffectBase_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.Tick
// 0x0040 (0x0040 - 0x0000)
struct BP_StateMachineEffectBase_C_Tick final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_Tick) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_Tick");
static_assert(sizeof(BP_StateMachineEffectBase_C_Tick) == 0x000040, "Wrong size on BP_StateMachineEffectBase_C_Tick");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_StateMachineEffectBase_C_Tick::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_StateMachineEffectBase_C_Tick::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, ___int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_Tick::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, ___int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_StateMachineEffectBase_C_Tick::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Tick, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_StateMachineEffectBase_C_Tick::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.PlayEffectState
// 0x0010 (0x0010 - 0x0000)
struct BP_StateMachineEffectBase_C_PlayEffectState final
{
public:
	class UPD_StateMachineEffect_C*               InputData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEffectState                                  TargetState_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_PlayEffectState) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_PlayEffectState");
static_assert(sizeof(BP_StateMachineEffectBase_C_PlayEffectState) == 0x000010, "Wrong size on BP_StateMachineEffectBase_C_PlayEffectState");
static_assert(offsetof(BP_StateMachineEffectBase_C_PlayEffectState, InputData) == 0x000000, "Member 'BP_StateMachineEffectBase_C_PlayEffectState::InputData' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_PlayEffectState, TargetState_0) == 0x000008, "Member 'BP_StateMachineEffectBase_C_PlayEffectState::TargetState_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_PlayEffectState, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_StateMachineEffectBase_C_PlayEffectState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_PlayEffectState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'BP_StateMachineEffectBase_C_PlayEffectState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.Reset
// 0x0040 (0x0040 - 0x0000)
struct BP_StateMachineEffectBase_C_Reset final
{
public:
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_Reset) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_Reset");
static_assert(sizeof(BP_StateMachineEffectBase_C_Reset) == 0x000040, "Wrong size on BP_StateMachineEffectBase_C_Reset");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, ___int_Loop_Counter_Variable) == 0x000000, "Member 'BP_StateMachineEffectBase_C_Reset::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, ___int_Array_Index_Variable) == 0x000008, "Member 'BP_StateMachineEffectBase_C_Reset::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, ___int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_Reset::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, ___int_Array_Index_Variable_1) == 0x000014, "Member 'BP_StateMachineEffectBase_C_Reset::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Reset, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_StateMachineEffectBase_C_Reset::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.Update Transition State
// 0x03C0 (0x03C0 - 0x0000)
struct BP_StateMachineEffectBase_C_Update_Transition_State final
{
public:
	float                                         LerpValue;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_4;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_4;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTransitionLinearColorIndexGroup      CallFunc_Map_Find_Value;                           // 0x0058(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x00B0(0x0010)(ReferenceParm)
	int32                                         ___int_Loop_Counter_Variable_5;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_2;                         // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionFloatIndexGroup            CallFunc_Map_Find_Value_3;                         // 0x0130(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_3;                          // 0x0190(0x0010)(ReferenceParm)
	int32                                         ___int_Array_Index_Variable_5;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_4;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_5;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C6[0x2];                                      // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateInfo                      CallFunc_GetStateInfo_Ret;                         // 0x01D0(0x0150)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_4;                          // 0x0320(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value_6;                         // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_7;                         // 0x0354(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_5;                          // 0x0380(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_5;                         // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_8;                         // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x03A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6[0x2];                                      // 0x03A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_9;                         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_9;                   // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AE[0x2];                                      // 0x03AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_Update_Transition_State) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_Update_Transition_State");
static_assert(sizeof(BP_StateMachineEffectBase_C_Update_Transition_State) == 0x0003C0, "Wrong size on BP_StateMachineEffectBase_C_Update_Transition_State");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, LerpValue) == 0x000000, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::LerpValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable_1) == 0x000008, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable_2) == 0x000014, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable_2) == 0x000020, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable_3) == 0x000024, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable_3) == 0x000030, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable_4) == 0x000034, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue_4) == 0x000038, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable_4) == 0x00003C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value) == 0x000058, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys_1) == 0x0000B0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Loop_Counter_Variable_5) == 0x0000C0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item_1) == 0x0000C4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000D0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_1) == 0x0000D4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_1) == 0x0000E4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_2) == 0x0000E8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_2) == 0x0000F8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_LinearColorLerp_ReturnValue) == 0x0000FC, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys_2) == 0x000118, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_3) == 0x000130, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_3) == 0x000180, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue_2) == 0x000184, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue_2) == 0x000188, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys_3) == 0x000190, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, ___int_Array_Index_Variable_5) == 0x0001A0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::___int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue_3) == 0x0001A4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item_3) == 0x0001A8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001B4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_4) == 0x0001B8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_4) == 0x0001BC, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_5) == 0x0001C0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_5) == 0x0001C4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_BooleanAND_ReturnValue_1) == 0x0001C5, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Lerp_ReturnValue) == 0x0001C8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_GetStateInfo_Ret) == 0x0001D0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_GetStateInfo_Ret' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys_4) == 0x000320, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item_4) == 0x000330, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue_4) == 0x00033C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_6) == 0x000340, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_6) == 0x000350, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue_4) == 0x000351, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_7) == 0x000354, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_7) == 0x000364, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_BooleanAND_ReturnValue_2) == 0x000365, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000368, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_MapRangeClamped_ReturnValue) == 0x000378, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Keys_Keys_5) == 0x000380, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Keys_Keys_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Get_Item_5) == 0x000390, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Array_Length_ReturnValue_5) == 0x00039C, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_8) == 0x0003A0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_8) == 0x0003A4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Less_IntInt_ReturnValue_5) == 0x0003A5, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_Value_9) == 0x0003A8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_Value_9' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Map_Find_ReturnValue_9) == 0x0003AC, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Map_Find_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_BooleanAND_ReturnValue_3) == 0x0003AD, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Lerp_ReturnValue_1) == 0x0003B0, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0003B4, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003B8, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_Update_Transition_State, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003BC, "Member 'BP_StateMachineEffectBase_C_Update_Transition_State::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.UpdatePreLoopState
// 0x0C60 (0x0C60 - 0x0000)
struct BP_StateMachineEffectBase_C_UpdatePreLoopState final
{
public:
	float                                         LerpValue;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStateBasedEffectFloatCurveSection    CallFunc_Map_Find_Value;                           // 0x0060(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x01D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Float_ReturnValue;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSEffectStateFloatCurve                CallFunc_Map_Find_Value_1;                         // 0x01F0(0x0120)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Float_ReturnValue_1;             // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSStateBasedEffectLinearColorCurveSection CallFunc_Map_Find_Value_2;                         // 0x0340(0x0490)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x3];                                      // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_3;                          // 0x07D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue;         // 0x07EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateLinearColorCurve          CallFunc_Map_Find_Value_3;                         // 0x0800(0x0440)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C41[0x3];                                      // 0x0C41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue_1;       // 0x0C48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0C59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5A[0x2];                                      // 0x0C5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_UpdatePreLoopState) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_UpdatePreLoopState");
static_assert(sizeof(BP_StateMachineEffectBase_C_UpdatePreLoopState) == 0x000C60, "Wrong size on BP_StateMachineEffectBase_C_UpdatePreLoopState");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, LerpValue) == 0x000000, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::LerpValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Keys_Keys_1) == 0x000028, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Array_Index_Variable) == 0x000044, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Array_Index_Variable_1) == 0x000048, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Array_Index_Variable_2) == 0x00004C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Loop_Counter_Variable_1) == 0x0001D4, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Keys_Keys_2) == 0x0001D8, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GetValue_Float_ReturnValue) == 0x0001EC, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GetValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_Value_1) == 0x0001F0, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_ReturnValue_1) == 0x000310, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Length_ReturnValue_2) == 0x000314, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GetValue_Float_ReturnValue_1) == 0x000318, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GetValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Less_IntInt_ReturnValue) == 0x00031C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Less_IntInt_ReturnValue_1) == 0x00031D, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000320, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Loop_Counter_Variable_2) == 0x000324, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_FClamp_ReturnValue) == 0x000328, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Add_IntInt_ReturnValue_2) == 0x00032C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Array_Index_Variable_3) == 0x000330, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Get_Item_2) == 0x000334, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_Value_2) == 0x000340, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_ReturnValue_2) == 0x0007D0, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, ___int_Loop_Counter_Variable_3) == 0x0007D4, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Keys_Keys_3) == 0x0007D8, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Get_Item_3) == 0x0007E8, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GetValue_LinearColor_ReturnValue) == 0x0007EC, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GetValue_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_Value_3) == 0x000800, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Map_Find_ReturnValue_3) == 0x000C40, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Array_Length_ReturnValue_3) == 0x000C44, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_GetValue_LinearColor_ReturnValue_1) == 0x000C48, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_GetValue_LinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000C58, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Less_IntInt_ReturnValue_3) == 0x000C59, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdatePreLoopState, CallFunc_Add_IntInt_ReturnValue_3) == 0x000C5C, "Member 'BP_StateMachineEffectBase_C_UpdatePreLoopState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.UpdateLoopState
// 0x0C68 (0x0C68 - 0x0000)
struct BP_StateMachineEffectBase_C_UpdateLoopState final
{
public:
	float                                         LerpValue;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0050(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSStateBasedEffectLinearColorCurveSection CallFunc_Map_Find_Value;                           // 0x0078(0x0490)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStateBasedEffectFloatCurveSection    CallFunc_Map_Find_Value_1;                         // 0x0510(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x0688(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys_3;                          // 0x0698(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSEffectStateLinearColorCurve          CallFunc_Map_Find_Value_2;                         // 0x06B0(0x0440)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateFloatCurve                CallFunc_Map_Find_Value_3;                         // 0x0AF8(0x0120)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C19[0x3];                                      // 0x0C19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Float_ReturnValue;               // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue;         // 0x0C20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3A[0x2];                                      // 0x0C3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Float_ReturnValue_1;             // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue_1;       // 0x0C40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0C59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5A[0x2];                                      // 0x0C5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0C65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0C66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0C67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_UpdateLoopState) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_UpdateLoopState");
static_assert(sizeof(BP_StateMachineEffectBase_C_UpdateLoopState) == 0x000C68, "Wrong size on BP_StateMachineEffectBase_C_UpdateLoopState");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, LerpValue) == 0x000000, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::LerpValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Array_Index_Variable) == 0x000004, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Loop_Counter_Variable) == 0x000008, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Loop_Counter_Variable_2) == 0x000014, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Array_Index_Variable_1) == 0x000020, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Array_Index_Variable_2) == 0x000024, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Loop_Counter_Variable_3) == 0x000028, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, ___int_Array_Index_Variable_3) == 0x000030, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000034, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Keys_Keys_1) == 0x000050, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Get_Item_1) == 0x00006C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_ReturnValue) == 0x000508, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_Value_1) == 0x000510, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_ReturnValue_1) == 0x000680, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Keys_Keys_2) == 0x000688, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Keys_Keys_3) == 0x000698, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Get_Item_2) == 0x0006A8, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Get_Item_3) == 0x0006AC, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_Value_2) == 0x0006B0, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_ReturnValue_2) == 0x000AF0, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_Value_3) == 0x000AF8, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Map_Find_ReturnValue_3) == 0x000C18, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_GetValue_Float_ReturnValue) == 0x000C1C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_GetValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_GetValue_LinearColor_ReturnValue) == 0x000C20, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_GetValue_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Length_ReturnValue) == 0x000C30, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Length_ReturnValue_1) == 0x000C34, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Less_IntInt_ReturnValue) == 0x000C38, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000C39, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_GetValue_Float_ReturnValue_1) == 0x000C3C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_GetValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_GetValue_LinearColor_ReturnValue_1) == 0x000C40, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_GetValue_LinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Length_ReturnValue_2) == 0x000C50, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Array_Length_ReturnValue_3) == 0x000C54, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000C58, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Less_IntInt_ReturnValue_3) == 0x000C59, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_FClamp_ReturnValue) == 0x000C5C, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000C60, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000C64, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_Not_PreBool_ReturnValue) == 0x000C65, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_BooleanAND_ReturnValue) == 0x000C66, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateLoopState, CallFunc_IsValid_ReturnValue) == 0x000C67, "Member 'BP_StateMachineEffectBase_C_UpdateLoopState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.UpdateParameters
// 0x00A8 (0x00A8 - 0x0000)
struct BP_StateMachineEffectBase_C_UpdateParameters final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFloat;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FloatValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLinearColor;                                     // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           LinearColorValue;                                  // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0048(0x0010)(ReferenceParm)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable;                                  // 0x007C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_StateMachineEffectBase_C_UpdateParameters) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_UpdateParameters");
static_assert(sizeof(BP_StateMachineEffectBase_C_UpdateParameters) == 0x0000A8, "Wrong size on BP_StateMachineEffectBase_C_UpdateParameters");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, Name_0) == 0x000000, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::Name_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, IsFloat) == 0x00000C, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::IsFloat' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, FloatValue) == 0x000010, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::FloatValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, IsLinearColor) == 0x000014, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::IsLinearColor' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, LinearColorValue) == 0x000018, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::LinearColorValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, Index_0) == 0x000028, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::Index_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, ___int_Array_Index_Variable) == 0x000030, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, ___int_Array_Index_Variable_1) == 0x000034, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_GetMaterials_ReturnValue) == 0x000048, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, ___int_Loop_Counter_Variable) == 0x000058, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, K2Node_DynamicCast_As______) == 0x000068, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, ___name_Variable) == 0x00007C, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::___name_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, ___int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_UpdateParameters, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_StateMachineEffectBase_C_UpdateParameters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.CreateTransitionState
// 0x1028 (0x1028 - 0x0000)
struct BP_StateMachineEffectBase_C_CreateTransitionState final
{
public:
	EEffectState                                  TargetState_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionFloatIndexGroup            NewLocalVar_0;                                     // 0x0008(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSTransitionFloatIndexGroup            K2Node_MakeStruct_STransitionFloatIndexGroup;      // 0x0058(0x0050)(HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionLinearColorIndexGroup      K2Node_MakeStruct_STransitionLinearColorIndexGroup; // 0x00E0(0x0050)(HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateInfo                      CallFunc_GetStateInfo_Ret;                         // 0x0138(0x0150)(HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_2;                     // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStateBasedEffectFloatCurveSection    CallFunc_Map_Find_Value;                           // 0x02A0(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_1;                         // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_2;                          // 0x0420(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_Float_ReturnValue;               // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTransitionFloatIndexGroup            CallFunc_Map_Find_Value_2;                         // 0x0438(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionFloatIndexGroup            CallFunc_Map_Find_Value_3;                         // 0x0490(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateFloatCurve                CallFunc_Map_Find_Value_4;                         // 0x04E8(0x0120)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_Float_ReturnValue_1;             // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_3;                     // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_2;                    // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSStateBasedEffectLinearColorCurveSection CallFunc_Map_Find_Value_5;                         // 0x0638(0x0490)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_6;                         // 0x0ACC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0ADC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ADD[0x3];                                      // 0x0ADD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_3;                          // 0x0AE8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionLinearColorIndexGroup      CallFunc_Map_Find_Value_7;                         // 0x0B08(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B59[0x7];                                      // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTransitionLinearColorIndexGroup      CallFunc_Map_Find_Value_8;                         // 0x0B60(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0x7];                                      // 0x0BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSEffectStateLinearColorCurve          CallFunc_Map_Find_Value_9;                         // 0x0BB8(0x0440)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_9;                   // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF9[0x3];                                      // 0x0FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue;         // 0x0FFC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetValue_LinearColor_ReturnValue_1;       // 0x100C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_3;                    // 0x101C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1021[0x3];                                     // 0x1021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_CreateTransitionState) == 0x000008, "Wrong alignment on BP_StateMachineEffectBase_C_CreateTransitionState");
static_assert(sizeof(BP_StateMachineEffectBase_C_CreateTransitionState) == 0x001028, "Wrong size on BP_StateMachineEffectBase_C_CreateTransitionState");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, TargetState_0) == 0x000000, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::TargetState_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, NewLocalVar_0) == 0x000008, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, K2Node_MakeStruct_STransitionFloatIndexGroup) == 0x000058, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::K2Node_MakeStruct_STransitionFloatIndexGroup' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Keys_Keys_1) == 0x0000C8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, K2Node_MakeStruct_STransitionLinearColorIndexGroup) == 0x0000E0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::K2Node_MakeStruct_STransitionLinearColorIndexGroup' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Array_Index_Variable) == 0x000130, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_GetStateInfo_Ret) == 0x000138, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_GetStateInfo_Ret' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Array_Index_Variable_1) == 0x000288, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Array_Index_Variable_2) == 0x00028C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Get_Item) == 0x000290, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value) == 0x0002A0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue) == 0x000410, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_1) == 0x000414, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_1) == 0x000418, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Keys_Keys_2) == 0x000420, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Get_Item_1) == 0x000430, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_GetValue_Float_ReturnValue) == 0x000434, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_GetValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_2) == 0x000438, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_2) == 0x000488, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_3) == 0x000490, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_3) == 0x0004E0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_4) == 0x0004E8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_4) == 0x000608, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Length_ReturnValue_2) == 0x00060C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Less_IntInt_ReturnValue) == 0x000610, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_GetValue_Float_ReturnValue_1) == 0x000614, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_GetValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Loop_Counter_Variable_1) == 0x000618, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Less_IntInt_ReturnValue_1) == 0x00061C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000620, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Array_Index_Variable_3) == 0x000624, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Loop_Counter_Variable_2) == 0x000628, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Get_Item_2) == 0x00062C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_5) == 0x000638, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_5) == 0x000AC8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_6) == 0x000ACC, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_6) == 0x000ADC, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000AE0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Keys_Keys_3) == 0x000AE8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Get_Item_3) == 0x000AF8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Array_Length_ReturnValue_3) == 0x000AFC, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000B00, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_7) == 0x000B08, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_7) == 0x000B58, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_8) == 0x000B60, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_8) == 0x000BB0, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_Value_9) == 0x000BB8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_Value_9' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Map_Find_ReturnValue_9) == 0x000FF8, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Map_Find_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_GetValue_LinearColor_ReturnValue) == 0x000FFC, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_GetValue_LinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_GetValue_LinearColor_ReturnValue_1) == 0x00100C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_GetValue_LinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, ___int_Loop_Counter_Variable_3) == 0x00101C, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::___int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Less_IntInt_ReturnValue_3) == 0x001020, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_StateMachineEffectBase_C_CreateTransitionState, CallFunc_Add_IntInt_ReturnValue_3) == 0x001024, "Member 'BP_StateMachineEffectBase_C_CreateTransitionState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_StateMachineEffectBase.BP_StateMachineEffectBase_C.SetState
// 0x0001 (0x0001 - 0x0000)
struct BP_StateMachineEffectBase_C_SetState final
{
public:
	EEffectState                                  TargetState_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_StateMachineEffectBase_C_SetState) == 0x000001, "Wrong alignment on BP_StateMachineEffectBase_C_SetState");
static_assert(sizeof(BP_StateMachineEffectBase_C_SetState) == 0x000001, "Wrong size on BP_StateMachineEffectBase_C_SetState");
static_assert(offsetof(BP_StateMachineEffectBase_C_SetState, TargetState_0) == 0x000000, "Member 'BP_StateMachineEffectBase_C_SetState::TargetState_0' has a wrong offset!");

}

