#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPC_Seq_Body_V2

#include "Basic.hpp"

#include "ABPC_Seq_Body_V2_classes.hpp"
#include "ABPC_Seq_Body_V2_parameters.hpp"


namespace SDK
{

// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.SetAnimDataVectorByOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, struct FVector>&      VectorMap                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UABPC_Seq_Body_V2_C::SetAnimDataVectorByOwner(TMap<class FName, struct FVector>& VectorMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "SetAnimDataVectorByOwner");

	Params::ABPC_Seq_Body_V2_C_SetAnimDataVectorByOwner Parms{};

	Parms.VectorMap = std::move(VectorMap);

	UObject::ProcessEvent(Func, &Parms);

	VectorMap = std::move(Parms.VectorMap);
}


// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.SetAnimDataFloatByOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FNamedCurveValue>&        InCurves                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UABPC_Seq_Body_V2_C::SetAnimDataFloatByOwner(TArray<struct FNamedCurveValue>& InCurves)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "SetAnimDataFloatByOwner");

	Params::ABPC_Seq_Body_V2_C_SetAnimDataFloatByOwner Parms{};

	Parms.InCurves = std::move(InCurves);

	UObject::ProcessEvent(Func, &Parms);

	InCurves = std::move(Parms.InCurves);
}


// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.ProcessEye
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   EyeLookAt                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UABPC_Seq_Body_V2_C::ProcessEye(const struct FVector& EyeLookAt, float AngleScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "ProcessEye");

	Params::ABPC_Seq_Body_V2_C_ProcessEye Parms{};

	Parms.EyeLookAt = std::move(EyeLookAt);
	Parms.AngleScale = AngleScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.GetCurveValue
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             CurveName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UABPC_Seq_Body_V2_C::GetCurveValue(class FName CurveName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "GetCurveValue");

	Params::ABPC_Seq_Body_V2_C_GetCurveValue Parms{};

	Parms.CurveName = CurveName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.GetCurves
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<struct FNamedCurveValue>*        OutValues                                              (Parm, OutParm)

void UABPC_Seq_Body_V2_C::GetCurves(TArray<struct FNamedCurveValue>* OutValues) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "GetCurves");

	Params::ABPC_Seq_Body_V2_C_GetCurves Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutValues != nullptr)
		*OutValues = std::move(Parms.OutValues);
}


// Function ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C.GetBindingName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UABPC_Seq_Body_V2_C::GetBindingName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPC_Seq_Body_V2_C", "GetBindingName");

	Params::ABPC_Seq_Body_V2_C_GetBindingName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

