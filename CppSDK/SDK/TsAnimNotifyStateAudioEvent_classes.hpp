#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyStateAudioEvent

#include "Basic.hpp"

#include "KuroAudio_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"
#include "SAudioEventProbabilityCooldownInfo_structs.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyStateAudioEvent.TsAnimNotifyStateAudioEvent_C
// 0x00E0 (0x0128 - 0x0048)
class UTsAnimNotifyStateAudioEvent_C final : public UKuroAnimNotifyState
{
public:
	TSoftObjectPtr<class UAkAudioEvent>           AudioEvent;                                        // 0x0048(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Follow;                                            // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          KeepAlive;                                         // 0x0085(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FadeDuration;                                      // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioFadeCurve                               FadeCurve;                                         // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAkAudioEvent>           TrailingAudioEvent;                                // 0x0090(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMap<class AActor*, float>                    HandleMap;                                         // 0x00C0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FSAudioEventProbabilityCooldownInfo    TagProbabilityInfo;                                // 0x0110(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyStateAudioEvent_C">();
	}
	static class UTsAnimNotifyStateAudioEvent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyStateAudioEvent_C>();
	}
};
static_assert(alignof(UTsAnimNotifyStateAudioEvent_C) == 0x000008, "Wrong alignment on UTsAnimNotifyStateAudioEvent_C");
static_assert(sizeof(UTsAnimNotifyStateAudioEvent_C) == 0x000128, "Wrong size on UTsAnimNotifyStateAudioEvent_C");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, AudioEvent) == 0x000048, "Member 'UTsAnimNotifyStateAudioEvent_C::AudioEvent' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, SocketName) == 0x000078, "Member 'UTsAnimNotifyStateAudioEvent_C::SocketName' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, Follow) == 0x000084, "Member 'UTsAnimNotifyStateAudioEvent_C::Follow' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, KeepAlive) == 0x000085, "Member 'UTsAnimNotifyStateAudioEvent_C::KeepAlive' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, FadeDuration) == 0x000088, "Member 'UTsAnimNotifyStateAudioEvent_C::FadeDuration' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, FadeCurve) == 0x00008C, "Member 'UTsAnimNotifyStateAudioEvent_C::FadeCurve' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, TrailingAudioEvent) == 0x000090, "Member 'UTsAnimNotifyStateAudioEvent_C::TrailingAudioEvent' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, HandleMap) == 0x0000C0, "Member 'UTsAnimNotifyStateAudioEvent_C::HandleMap' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateAudioEvent_C, TagProbabilityInfo) == 0x000110, "Member 'UTsAnimNotifyStateAudioEvent_C::TagProbabilityInfo' has a wrong offset!");

}

