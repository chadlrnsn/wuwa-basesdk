#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ME1SiXiaoMd00601

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ME1SiXiaoMd00601.BP_ME1SiXiaoMd00601_C
// 0x0020 (0x0770 - 0x0750)
class ABP_ME1SiXiaoMd00601_C final : public ATsBaseCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ME1SiXiaoMd00601_C;              // 0x0750(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Bip001;                                            // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     晶鸟对象;                                          // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ME1SiXiaoMd00601(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ME1SiXiaoMd00601_C">();
	}
	static class ABP_ME1SiXiaoMd00601_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ME1SiXiaoMd00601_C>();
	}
};
static_assert(alignof(ABP_ME1SiXiaoMd00601_C) == 0x000010, "Wrong alignment on ABP_ME1SiXiaoMd00601_C");
static_assert(sizeof(ABP_ME1SiXiaoMd00601_C) == 0x000770, "Wrong size on ABP_ME1SiXiaoMd00601_C");
static_assert(offsetof(ABP_ME1SiXiaoMd00601_C, UberGraphFrame_BP_ME1SiXiaoMd00601_C) == 0x000750, "Member 'ABP_ME1SiXiaoMd00601_C::UberGraphFrame_BP_ME1SiXiaoMd00601_C' has a wrong offset!");
static_assert(offsetof(ABP_ME1SiXiaoMd00601_C, Bip001) == 0x000758, "Member 'ABP_ME1SiXiaoMd00601_C::Bip001' has a wrong offset!");
static_assert(offsetof(ABP_ME1SiXiaoMd00601_C, 晶鸟对象) == 0x000760, "Member 'ABP_ME1SiXiaoMd00601_C::晶鸟对象' has a wrong offset!");

}

