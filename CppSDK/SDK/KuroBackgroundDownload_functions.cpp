#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroBackgroundDownload

#include "Basic.hpp"

#include "KuroBackgroundDownload_classes.hpp"
#include "KuroBackgroundDownload_parameters.hpp"


namespace SDK
{

// Function KuroBackgroundDownload.KuroBgPrefixDownload.Start
// (Final, Native, Public, HasOutParams)
// Parameters:
// const class FString&                    Suffix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class FString>&            Prefixes                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FKuroRequestDownloadInfo>&Targets                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   InRetryCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewIOSApi                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKuroBgPrefixDownload::Start(const class FString& Suffix, const TArray<class FString>& Prefixes, const TArray<struct FKuroRequestDownloadInfo>& Targets, int32 InRetryCount, float InTimeout, bool bNewIOSApi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KuroBgPrefixDownload", "Start");

	Params::KuroBgPrefixDownload_Start Parms{};

	Parms.Suffix = std::move(Suffix);
	Parms.Prefixes = std::move(Prefixes);
	Parms.Targets = std::move(Targets);
	Parms.InRetryCount = InRetryCount;
	Parms.InTimeout = InTimeout;
	Parms.bNewIOSApi = bNewIOSApi;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function KuroBackgroundDownload.KuroBgPrefixDownload.Cancel
// (Final, Native, Public, Const)

void UKuroBgPrefixDownload::Cancel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KuroBgPrefixDownload", "Cancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroBackgroundDownload.KuroBgPrefixDownload.Continue
// (Final, Native, Public, Const)

void UKuroBgPrefixDownload::Continue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KuroBgPrefixDownload", "Continue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function KuroBackgroundDownload.KuroBgPrefixDownload.GetBpsSpeed
// (Final, Native, Public, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UKuroBgPrefixDownload::GetBpsSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KuroBgPrefixDownload", "GetBpsSpeed");

	Params::KuroBgPrefixDownload_GetBpsSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

