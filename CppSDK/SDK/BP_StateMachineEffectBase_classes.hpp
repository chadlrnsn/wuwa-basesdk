#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StateMachineEffectBase

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_classes.hpp"
#include "STransitionFloatIndexGroup_structs.hpp"
#include "Engine_structs.hpp"
#include "EEffectState_structs.hpp"
#include "STransitionLinearColorIndexGroup_structs.hpp"
#include "SEffectStateInfo_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_StateMachineEffectBase.BP_StateMachineEffectBase_C
// 0x0440 (0x0700 - 0x02C0)
class ABP_StateMachineEffectBase_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEditorTick;                                      // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EEffectState                                  CurrentState;                                      // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInit;                                            // 0x02D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EEffectState                                  TargetState;                                       // 0x02D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInTransition;                                    // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EEffectState                                  TransitionTargetState;                             // 0x02D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D6[0x2];                                      // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TransitionCounter;                                 // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionTime;                                    // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, float>                      TransitionFloatStartMap;                           // 0x02E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, float>                      TransitionFloatEndMap;                             // 0x0330(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        TransitionLinearColorStartMap;                     // 0x0380(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        TransitionLinearColorEndMap;                       // 0x03D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsInState;                                         // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStatePreLoop;                                    // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x2];                                      // 0x0422(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StateCounter;                                      // 0x0424(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPD_StateMachineEffect_C*               Data;                                              // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           StaticMeshComponents;                              // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UMaterialInstanceDynamic*>       StaticMeshDMIs;                                    // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSEffectStateInfo                      CurrentStateInfo;                                  // 0x0450(0x0150)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsFirstTickInfo;                                   // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      CurrentFloatMap;                                   // 0x05A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        CurrentLinearColorMap;                             // 0x05F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	EEffectState                                  InitState;                                         // 0x0648(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              NiagaraComponents;                                 // 0x0650(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<int32, struct FSTransitionFloatIndexGroup> TransitionIndexFloatEndMap;                        // 0x0660(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FSTransitionLinearColorIndexGroup> TransitionIndexLinearColorEndMap;                  // 0x06B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_StateMachineEffectBase(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void EditorInit();
	void EditorTick(float DeltaSeconds);
	void UserConstructionScript();
	void Init(EEffectState TargetState_0);
	void Tick();
	void PlayEffectState(class UPD_StateMachineEffect_C* InputData, EEffectState TargetState_0);
	void Reset();
	void Update_Transition_State();
	void UpdatePreLoopState();
	void UpdateLoopState();
	void UpdateParameters(class FName Name_0, bool IsFloat, float FloatValue, bool IsLinearColor, const struct FLinearColor& LinearColorValue, int32 Index_0);
	void CreateTransitionState(EEffectState TargetState_0);
	void DEBUG进入状态1();
	void DEBUG进入状态2();
	void DEBUG进入状态3();
	void DEBUG进入状态4();
	void DEBUG进入状态5();
	void DEBUG重初始化();
	void SetState(EEffectState TargetState_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StateMachineEffectBase_C">();
	}
	static class ABP_StateMachineEffectBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_StateMachineEffectBase_C>();
	}
};
static_assert(alignof(ABP_StateMachineEffectBase_C) == 0x000008, "Wrong alignment on ABP_StateMachineEffectBase_C");
static_assert(sizeof(ABP_StateMachineEffectBase_C) == 0x000700, "Wrong size on ABP_StateMachineEffectBase_C");
static_assert(offsetof(ABP_StateMachineEffectBase_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_StateMachineEffectBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_StateMachineEffectBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsEditorTick) == 0x0002D0, "Member 'ABP_StateMachineEffectBase_C::IsEditorTick' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, CurrentState) == 0x0002D1, "Member 'ABP_StateMachineEffectBase_C::CurrentState' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsInit) == 0x0002D2, "Member 'ABP_StateMachineEffectBase_C::IsInit' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TargetState) == 0x0002D3, "Member 'ABP_StateMachineEffectBase_C::TargetState' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsInTransition) == 0x0002D4, "Member 'ABP_StateMachineEffectBase_C::IsInTransition' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionTargetState) == 0x0002D5, "Member 'ABP_StateMachineEffectBase_C::TransitionTargetState' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionCounter) == 0x0002D8, "Member 'ABP_StateMachineEffectBase_C::TransitionCounter' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionTime) == 0x0002DC, "Member 'ABP_StateMachineEffectBase_C::TransitionTime' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionFloatStartMap) == 0x0002E0, "Member 'ABP_StateMachineEffectBase_C::TransitionFloatStartMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionFloatEndMap) == 0x000330, "Member 'ABP_StateMachineEffectBase_C::TransitionFloatEndMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionLinearColorStartMap) == 0x000380, "Member 'ABP_StateMachineEffectBase_C::TransitionLinearColorStartMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionLinearColorEndMap) == 0x0003D0, "Member 'ABP_StateMachineEffectBase_C::TransitionLinearColorEndMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsInState) == 0x000420, "Member 'ABP_StateMachineEffectBase_C::IsInState' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsStatePreLoop) == 0x000421, "Member 'ABP_StateMachineEffectBase_C::IsStatePreLoop' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, StateCounter) == 0x000424, "Member 'ABP_StateMachineEffectBase_C::StateCounter' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, Data) == 0x000428, "Member 'ABP_StateMachineEffectBase_C::Data' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, StaticMeshComponents) == 0x000430, "Member 'ABP_StateMachineEffectBase_C::StaticMeshComponents' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, StaticMeshDMIs) == 0x000440, "Member 'ABP_StateMachineEffectBase_C::StaticMeshDMIs' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, CurrentStateInfo) == 0x000450, "Member 'ABP_StateMachineEffectBase_C::CurrentStateInfo' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, IsFirstTickInfo) == 0x0005A0, "Member 'ABP_StateMachineEffectBase_C::IsFirstTickInfo' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, CurrentFloatMap) == 0x0005A8, "Member 'ABP_StateMachineEffectBase_C::CurrentFloatMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, CurrentLinearColorMap) == 0x0005F8, "Member 'ABP_StateMachineEffectBase_C::CurrentLinearColorMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, InitState) == 0x000648, "Member 'ABP_StateMachineEffectBase_C::InitState' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, NiagaraComponents) == 0x000650, "Member 'ABP_StateMachineEffectBase_C::NiagaraComponents' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionIndexFloatEndMap) == 0x000660, "Member 'ABP_StateMachineEffectBase_C::TransitionIndexFloatEndMap' has a wrong offset!");
static_assert(offsetof(ABP_StateMachineEffectBase_C, TransitionIndexLinearColorEndMap) == 0x0006B0, "Member 'ABP_StateMachineEffectBase_C::TransitionIndexLinearColorEndMap' has a wrong offset!");

}

