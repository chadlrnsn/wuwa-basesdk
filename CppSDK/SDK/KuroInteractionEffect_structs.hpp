#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroInteractionEffect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// ScriptStruct KuroInteractionEffect.SPModelShiftColorParameter
// 0x0020 (0x0020 - 0x0000)
struct FSPModelShiftColorParameter final
{
public:
	struct FLinearColor                           LowGrayColor;                                      // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           HighGrayColor;                                     // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSPModelShiftColorParameter) == 0x000004, "Wrong alignment on FSPModelShiftColorParameter");
static_assert(sizeof(FSPModelShiftColorParameter) == 0x000020, "Wrong size on FSPModelShiftColorParameter");
static_assert(offsetof(FSPModelShiftColorParameter, LowGrayColor) == 0x000000, "Member 'FSPModelShiftColorParameter::LowGrayColor' has a wrong offset!");
static_assert(offsetof(FSPModelShiftColorParameter, HighGrayColor) == 0x000010, "Member 'FSPModelShiftColorParameter::HighGrayColor' has a wrong offset!");

// ScriptStruct KuroInteractionEffect.SPModelSCPMap
// 0x0050 (0x0050 - 0x0000)
struct FSPModelSCPMap final
{
public:
	TMap<int32, struct FSPModelShiftColorParameter> ModelColorMap;                                   // 0x0000(0x0050)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSPModelSCPMap) == 0x000008, "Wrong alignment on FSPModelSCPMap");
static_assert(sizeof(FSPModelSCPMap) == 0x000050, "Wrong size on FSPModelSCPMap");
static_assert(offsetof(FSPModelSCPMap, ModelColorMap) == 0x000000, "Member 'FSPModelSCPMap::ModelColorMap' has a wrong offset!");

// ScriptStruct KuroInteractionEffect.KuroBushInteractionEffectParameter
// 0x0030 (0x0038 - 0x0008)
struct FKuroBushInteractionEffectParameter final : public FTableRowBase
{
public:
	class UStaticMesh*                            BushStaticMesh;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnCountScale;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnSizeScale;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnBoxExtent;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnBoxOffset;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UVIndexBegin;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UVIndexEnd;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroBushInteractionEffectParameter) == 0x000008, "Wrong alignment on FKuroBushInteractionEffectParameter");
static_assert(sizeof(FKuroBushInteractionEffectParameter) == 0x000038, "Wrong size on FKuroBushInteractionEffectParameter");
static_assert(offsetof(FKuroBushInteractionEffectParameter, BushStaticMesh) == 0x000008, "Member 'FKuroBushInteractionEffectParameter::BushStaticMesh' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, SpawnCountScale) == 0x000010, "Member 'FKuroBushInteractionEffectParameter::SpawnCountScale' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, SpawnSizeScale) == 0x000014, "Member 'FKuroBushInteractionEffectParameter::SpawnSizeScale' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, SpawnBoxExtent) == 0x000018, "Member 'FKuroBushInteractionEffectParameter::SpawnBoxExtent' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, SpawnBoxOffset) == 0x000024, "Member 'FKuroBushInteractionEffectParameter::SpawnBoxOffset' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, UVIndexBegin) == 0x000030, "Member 'FKuroBushInteractionEffectParameter::UVIndexBegin' has a wrong offset!");
static_assert(offsetof(FKuroBushInteractionEffectParameter, UVIndexEnd) == 0x000034, "Member 'FKuroBushInteractionEffectParameter::UVIndexEnd' has a wrong offset!");

// ScriptStruct KuroInteractionEffect.KuroLinkNiagaraParameter
// 0x0048 (0x0050 - 0x0008)
struct FKuroLinkNiagaraParameter final : public FTableRowBase
{
public:
	class FString                                 Desc;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModelConfigId;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModeId;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LinkColor0;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LinkColor1;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           LinkColor2;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroLinkNiagaraParameter) == 0x000008, "Wrong alignment on FKuroLinkNiagaraParameter");
static_assert(sizeof(FKuroLinkNiagaraParameter) == 0x000050, "Wrong size on FKuroLinkNiagaraParameter");
static_assert(offsetof(FKuroLinkNiagaraParameter, Desc) == 0x000008, "Member 'FKuroLinkNiagaraParameter::Desc' has a wrong offset!");
static_assert(offsetof(FKuroLinkNiagaraParameter, ModelConfigId) == 0x000018, "Member 'FKuroLinkNiagaraParameter::ModelConfigId' has a wrong offset!");
static_assert(offsetof(FKuroLinkNiagaraParameter, ModeId) == 0x00001C, "Member 'FKuroLinkNiagaraParameter::ModeId' has a wrong offset!");
static_assert(offsetof(FKuroLinkNiagaraParameter, LinkColor0) == 0x000020, "Member 'FKuroLinkNiagaraParameter::LinkColor0' has a wrong offset!");
static_assert(offsetof(FKuroLinkNiagaraParameter, LinkColor1) == 0x000030, "Member 'FKuroLinkNiagaraParameter::LinkColor1' has a wrong offset!");
static_assert(offsetof(FKuroLinkNiagaraParameter, LinkColor2) == 0x000040, "Member 'FKuroLinkNiagaraParameter::LinkColor2' has a wrong offset!");

// ScriptStruct KuroInteractionEffect.KuroBushIEParameter
// 0x0028 (0x0028 - 0x0000)
struct FKuroBushIEParameter final
{
public:
	float                                         SpawnCountScale;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpawnSizeScale;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnBoxExtent;                                    // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SpawnBoxOffset;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UVIndexBegin;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UVIndexEnd;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKuroBushIEParameter) == 0x000004, "Wrong alignment on FKuroBushIEParameter");
static_assert(sizeof(FKuroBushIEParameter) == 0x000028, "Wrong size on FKuroBushIEParameter");
static_assert(offsetof(FKuroBushIEParameter, SpawnCountScale) == 0x000000, "Member 'FKuroBushIEParameter::SpawnCountScale' has a wrong offset!");
static_assert(offsetof(FKuroBushIEParameter, SpawnSizeScale) == 0x000004, "Member 'FKuroBushIEParameter::SpawnSizeScale' has a wrong offset!");
static_assert(offsetof(FKuroBushIEParameter, SpawnBoxExtent) == 0x000008, "Member 'FKuroBushIEParameter::SpawnBoxExtent' has a wrong offset!");
static_assert(offsetof(FKuroBushIEParameter, SpawnBoxOffset) == 0x000014, "Member 'FKuroBushIEParameter::SpawnBoxOffset' has a wrong offset!");
static_assert(offsetof(FKuroBushIEParameter, UVIndexBegin) == 0x000020, "Member 'FKuroBushIEParameter::UVIndexBegin' has a wrong offset!");
static_assert(offsetof(FKuroBushIEParameter, UVIndexEnd) == 0x000024, "Member 'FKuroBushIEParameter::UVIndexEnd' has a wrong offset!");

// ScriptStruct KuroInteractionEffect.KuroEnviInteractionData
// 0x0080 (0x0080 - 0x0000)
struct FKuroEnviInteractionData final
{
public:
	bool                                          bInWater;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceWater;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitWaterLocation;                                  // 0x0004(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                HitWaterNormal;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      HitPhysicMaterial;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleToBlock;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CapsuleToWater;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WaterDepth;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WaterType;                                         // 0x0034(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideOnBush;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TriggerHitPoint;                                   // 0x003C(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HitBushLUTIndex;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                  HitBushActor;                                      // 0x004C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKuroBushIEParameter                   BushIEParam;                                       // 0x0054(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FKuroEnviInteractionData) == 0x000008, "Wrong alignment on FKuroEnviInteractionData");
static_assert(sizeof(FKuroEnviInteractionData) == 0x000080, "Wrong size on FKuroEnviInteractionData");
static_assert(offsetof(FKuroEnviInteractionData, bInWater) == 0x000000, "Member 'FKuroEnviInteractionData::bInWater' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, bTraceWater) == 0x000001, "Member 'FKuroEnviInteractionData::bTraceWater' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, HitWaterLocation) == 0x000004, "Member 'FKuroEnviInteractionData::HitWaterLocation' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, HitWaterNormal) == 0x000010, "Member 'FKuroEnviInteractionData::HitWaterNormal' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, HitPhysicMaterial) == 0x000020, "Member 'FKuroEnviInteractionData::HitPhysicMaterial' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, CapsuleToBlock) == 0x000028, "Member 'FKuroEnviInteractionData::CapsuleToBlock' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, CapsuleToWater) == 0x00002C, "Member 'FKuroEnviInteractionData::CapsuleToWater' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, WaterDepth) == 0x000030, "Member 'FKuroEnviInteractionData::WaterDepth' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, WaterType) == 0x000034, "Member 'FKuroEnviInteractionData::WaterType' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, bHideOnBush) == 0x000038, "Member 'FKuroEnviInteractionData::bHideOnBush' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, TriggerHitPoint) == 0x00003C, "Member 'FKuroEnviInteractionData::TriggerHitPoint' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, HitBushLUTIndex) == 0x000048, "Member 'FKuroEnviInteractionData::HitBushLUTIndex' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, HitBushActor) == 0x00004C, "Member 'FKuroEnviInteractionData::HitBushActor' has a wrong offset!");
static_assert(offsetof(FKuroEnviInteractionData, BushIEParam) == 0x000054, "Member 'FKuroEnviInteractionData::BushIEParam' has a wrong offset!");

}

