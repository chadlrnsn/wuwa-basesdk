#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskMoveToLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsTaskAbortImmediatelyBase_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTaskMoveToLocation.TsTaskMoveToLocation_C
// 0x0030 (0x00E8 - 0x00B8)
class UTsTaskMoveToLocation_C final : public UTsTaskAbortImmediatelyBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TsTaskMoveToLocation_C;             // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         MoveState;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NavigationOn;                                      // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BlackboardLocation;                                // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         EndDistance;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSpeed;                                         // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimitTime;                                         // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenDebugNode;                                     // 0x00E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFly;                                             // 0x00E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_TsTaskMoveToLocation(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTaskMoveToLocation_C">();
	}
	static class UTsTaskMoveToLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsTaskMoveToLocation_C>();
	}
};
static_assert(alignof(UTsTaskMoveToLocation_C) == 0x000008, "Wrong alignment on UTsTaskMoveToLocation_C");
static_assert(sizeof(UTsTaskMoveToLocation_C) == 0x0000E8, "Wrong size on UTsTaskMoveToLocation_C");
static_assert(offsetof(UTsTaskMoveToLocation_C, UberGraphFrame_TsTaskMoveToLocation_C) == 0x0000B8, "Member 'UTsTaskMoveToLocation_C::UberGraphFrame_TsTaskMoveToLocation_C' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, MoveState) == 0x0000C0, "Member 'UTsTaskMoveToLocation_C::MoveState' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, NavigationOn) == 0x0000C4, "Member 'UTsTaskMoveToLocation_C::NavigationOn' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, BlackboardLocation) == 0x0000C8, "Member 'UTsTaskMoveToLocation_C::BlackboardLocation' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, EndDistance) == 0x0000D8, "Member 'UTsTaskMoveToLocation_C::EndDistance' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, TurnSpeed) == 0x0000DC, "Member 'UTsTaskMoveToLocation_C::TurnSpeed' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, LimitTime) == 0x0000E0, "Member 'UTsTaskMoveToLocation_C::LimitTime' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, OpenDebugNode) == 0x0000E4, "Member 'UTsTaskMoveToLocation_C::OpenDebugNode' has a wrong offset!");
static_assert(offsetof(UTsTaskMoveToLocation_C, IsFly) == 0x0000E5, "Member 'UTsTaskMoveToLocation_C::IsFly' has a wrong offset!");

}

