#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputComponent

#include "Basic.hpp"

#include "ECharViewDirectionState_structs.hpp"
#include "sInputCommand_structs.hpp"
#include "ERoleInteractType_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SInputHoldConfig_structs.hpp"
#include "SInputCaches_structs.hpp"
#include "SVisionData_structs.hpp"


namespace SDK::Params
{

// Function BP_InputComponent.BP_InputComponent_C.跳跃按下
// 0x00A8 (0x00A8 - 0x0000)
struct BP_InputComponent_C_跳跃按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanJumpPress_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x007C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0090(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_跳跃按下) == 0x000008, "Wrong alignment on BP_InputComponent_C_跳跃按下");
static_assert(sizeof(BP_InputComponent_C_跳跃按下) == 0x0000A8, "Wrong size on BP_InputComponent_C_跳跃按下");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, time) == 0x000000, "Member 'BP_InputComponent_C_跳跃按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_跳跃按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000038, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000048, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_CanJumpPress_ReturnValue) == 0x000049, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_CanJumpPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000068, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000078, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, K2Node_MakeStruct_SInputCommand) == 0x00007C, "Member 'BP_InputComponent_C_跳跃按下::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000090, "Member 'BP_InputComponent_C_跳跃按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.跳跃抬起
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_跳跃抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_跳跃抬起) == 0x000004, "Wrong alignment on BP_InputComponent_C_跳跃抬起");
static_assert(sizeof(BP_InputComponent_C_跳跃抬起) == 0x00002C, "Wrong size on BP_InputComponent_C_跳跃抬起");
static_assert(offsetof(BP_InputComponent_C_跳跃抬起, time) == 0x000000, "Member 'BP_InputComponent_C_跳跃抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃抬起, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_跳跃抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_跳跃抬起, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_InputComponent_C_跳跃抬起::K2Node_MakeStruct_SInputCommand' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.攀爬按下
// 0x0034 (0x0034 - 0x0000)
struct BP_InputComponent_C_攀爬按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanClimbPress_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue_1;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_攀爬按下) == 0x000004, "Wrong alignment on BP_InputComponent_C_攀爬按下");
static_assert(sizeof(BP_InputComponent_C_攀爬按下) == 0x000034, "Wrong size on BP_InputComponent_C_攀爬按下");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, time) == 0x000000, "Member 'BP_InputComponent_C_攀爬按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_攀爬按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_InputComponent_C_攀爬按下::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, CallFunc_CanClimbPress_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_C_攀爬按下::CallFunc_CanClimbPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, CallFunc_ContainsTag_ReturnValue) == 0x00002D, "Member 'BP_InputComponent_C_攀爬按下::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_InputComponent_C_攀爬按下::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, CallFunc_ContainsTag_ReturnValue_1) == 0x00002F, "Member 'BP_InputComponent_C_攀爬按下::CallFunc_ContainsTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬按下, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BP_InputComponent_C_攀爬按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.走跑切换按下
// 0x0030 (0x0030 - 0x0000)
struct BP_InputComponent_C_走跑切换按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanWalkPress_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_走跑切换按下) == 0x000004, "Wrong alignment on BP_InputComponent_C_走跑切换按下");
static_assert(sizeof(BP_InputComponent_C_走跑切换按下) == 0x000030, "Wrong size on BP_InputComponent_C_走跑切换按下");
static_assert(offsetof(BP_InputComponent_C_走跑切换按下, time) == 0x000000, "Member 'BP_InputComponent_C_走跑切换按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_走跑切换按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_走跑切换按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_走跑切换按下, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_InputComponent_C_走跑切换按下::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_走跑切换按下, CallFunc_CanWalkPress_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_C_走跑切换按下::CallFunc_CanWalkPress_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.锁定目标长按
// 0x0068 (0x0068 - 0x0000)
struct BP_InputComponent_C_锁定目标长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc________ReturnValue;                       // 0x0034(0x0014)(NoDestructor, HasGetValueTypeHash)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadNow_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_锁定目标长按) == 0x000008, "Wrong alignment on BP_InputComponent_C_锁定目标长按");
static_assert(sizeof(BP_InputComponent_C_锁定目标长按) == 0x000068, "Wrong size on BP_InputComponent_C_锁定目标长按");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, time) == 0x000000, "Member 'BP_InputComponent_C_锁定目标长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_锁定目标长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc________ReturnValue) == 0x000034, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc________ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_GetDirectionState_ReturnValue) == 0x000048, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000050, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000060, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标长按, CallFunc_IsGamepadNow_ReturnValue) == 0x000061, "Member 'BP_InputComponent_C_锁定目标长按::CallFunc_IsGamepadNow_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.跳跃按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputComponent_C_跳跃按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_跳跃按下事件) == 0x000004, "Wrong alignment on BP_InputComponent_C_跳跃按下事件");
static_assert(sizeof(BP_InputComponent_C_跳跃按下事件) == 0x000004, "Wrong size on BP_InputComponent_C_跳跃按下事件");
static_assert(offsetof(BP_InputComponent_C_跳跃按下事件, time) == 0x000000, "Member 'BP_InputComponent_C_跳跃按下事件::time' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.攀爬抬起
// 0x0034 (0x0034 - 0x0000)
struct BP_InputComponent_C_攀爬抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanClimbPress_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue_1;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_攀爬抬起) == 0x000004, "Wrong alignment on BP_InputComponent_C_攀爬抬起");
static_assert(sizeof(BP_InputComponent_C_攀爬抬起) == 0x000034, "Wrong size on BP_InputComponent_C_攀爬抬起");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, time) == 0x000000, "Member 'BP_InputComponent_C_攀爬抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_攀爬抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, K2Node_MakeStruct_SInputCommand) == 0x000018, "Member 'BP_InputComponent_C_攀爬抬起::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, CallFunc_CanClimbPress_ReturnValue) == 0x00002C, "Member 'BP_InputComponent_C_攀爬抬起::CallFunc_CanClimbPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, CallFunc_ContainsTag_ReturnValue) == 0x00002D, "Member 'BP_InputComponent_C_攀爬抬起::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_InputComponent_C_攀爬抬起::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, CallFunc_ContainsTag_ReturnValue_1) == 0x00002F, "Member 'BP_InputComponent_C_攀爬抬起::CallFunc_ContainsTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攀爬抬起, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BP_InputComponent_C_攀爬抬起::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.闪避按下
// 0x0330 (0x0330 - 0x0000)
struct BP_InputComponent_C_闪避按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x004C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x0060(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x0074(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0088(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagCount_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x00D8(0x0020)()
	bool                                          CallFunc_HasMoveAxisInput_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x00FC(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMoveAxisInput_ReturnValue_1;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x015C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x0170(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x01A0(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x01C0(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5; // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_5;     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x020C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue_1;           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5; // 0x0228(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6; // 0x0260(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x02AC(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4; // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4; // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5; // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5; // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x02EC(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0300(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_6; // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_6; // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_闪避按下) == 0x000008, "Wrong alignment on BP_InputComponent_C_闪避按下");
static_assert(sizeof(BP_InputComponent_C_闪避按下) == 0x000330, "Wrong size on BP_InputComponent_C_闪避按下");
static_assert(offsetof(BP_InputComponent_C_闪避按下, time) == 0x000000, "Member 'BP_InputComponent_C_闪避按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_闪避按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000038, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x00004C, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x000060, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x000074, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000088, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CanResponseInput_ReturnValue) == 0x0000A8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000B0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_GetTagCount_ReturnValue) == 0x0000B8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_GetTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_InputComponent_C_闪避按下::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0000C0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000D0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0000D8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMoveAxisInput_ReturnValue) == 0x0000F8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMoveAxisInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x0000FC, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMoveAxisInput_ReturnValue_1) == 0x000110, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMoveAxisInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000118, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000128, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000130, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000140, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000148, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000158, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x00015C, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x000170, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000188, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000198, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x0001A0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x0001C0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0001E0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0001F0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_self_CastInput_5) == 0x0001F8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasMatchingGameplayTag_ReturnValue_5) == 0x000208, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasMatchingGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, K2Node_MakeStruct_SInputCommand) == 0x00020C, "Member 'BP_InputComponent_C_闪避按下::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_CanResponseInput_ReturnValue_1) == 0x000220, "Member 'BP_InputComponent_C_闪避按下::CallFunc_CanResponseInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5) == 0x000228, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000248, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000258, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6) == 0x000260, "Member 'BP_InputComponent_C_闪避按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000280, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000290, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000291, "Member 'BP_InputComponent_C_闪避按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x000292, "Member 'BP_InputComponent_C_闪避按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000293, "Member 'BP_InputComponent_C_闪避按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_BooleanAND_ReturnValue) == 0x000294, "Member 'BP_InputComponent_C_闪避按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_BooleanOR_ReturnValue) == 0x000295, "Member 'BP_InputComponent_C_闪避按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x000298, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x0002A8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc______ReturnValue) == 0x0002AC, "Member 'BP_InputComponent_C_闪避按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4) == 0x0002C0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4) == 0x0002D0, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5) == 0x0002D8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5) == 0x0002E8, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, K2Node_MakeStruct_SInputCommand_1) == 0x0002EC, "Member 'BP_InputComponent_C_闪避按下::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, K2Node_MakeStruct_SInputCommand_2) == 0x000300, "Member 'BP_InputComponent_C_闪避按下::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_6) == 0x000318, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_6) == 0x000328, "Member 'BP_InputComponent_C_闪避按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_6' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.闪避抬起
// 0x0090 (0x0090 - 0x0000)
struct BP_InputComponent_C_闪避抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0064(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_闪避抬起) == 0x000008, "Wrong alignment on BP_InputComponent_C_闪避抬起");
static_assert(sizeof(BP_InputComponent_C_闪避抬起) == 0x000090, "Wrong size on BP_InputComponent_C_闪避抬起");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, time) == 0x000000, "Member 'BP_InputComponent_C_闪避抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_闪避抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_闪避抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, K2Node_MakeStruct_SInputCommand) == 0x000038, "Member 'BP_InputComponent_C_闪避抬起::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_InputComponent_C_闪避抬起::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_InputComponent_C_闪避抬起::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, K2Node_MakeStruct_SInputCommand_1) == 0x000064, "Member 'BP_InputComponent_C_闪避抬起::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000078, "Member 'BP_InputComponent_C_闪避抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_闪避抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000088, "Member 'BP_InputComponent_C_闪避抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象1按下
// 0x0108 (0x0108 - 0x0000)
struct BP_InputComponent_C_幻象1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	ERoleInteractType                             交互类型;                                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         战斗幻象ID;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         施法者;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Skill_ID;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSVisionData                           VisionData;                                        // 0x0030(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSInputCommand                         ParentCommand;                                     // 0x00C8(0x0014)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x00DC(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CharacterVisionSkill1OnPress_ReturnValue; // 0x00F0(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象1按下) == 0x000008, "Wrong alignment on BP_InputComponent_C_幻象1按下");
static_assert(sizeof(BP_InputComponent_C_幻象1按下) == 0x000108, "Wrong size on BP_InputComponent_C_幻象1按下");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, time) == 0x000000, "Member 'BP_InputComponent_C_幻象1按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, 交互类型) == 0x000018, "Member 'BP_InputComponent_C_幻象1按下::交互类型' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, 战斗幻象ID) == 0x00001C, "Member 'BP_InputComponent_C_幻象1按下::战斗幻象ID' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, 施法者) == 0x000020, "Member 'BP_InputComponent_C_幻象1按下::施法者' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, Skill_ID) == 0x000028, "Member 'BP_InputComponent_C_幻象1按下::Skill_ID' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, VisionData) == 0x000030, "Member 'BP_InputComponent_C_幻象1按下::VisionData' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, ParentCommand) == 0x0000C8, "Member 'BP_InputComponent_C_幻象1按下::ParentCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, CallFunc___1___ReturnValue) == 0x0000DC, "Member 'BP_InputComponent_C_幻象1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1按下, CallFunc_CharacterVisionSkill1OnPress_ReturnValue) == 0x0000F0, "Member 'BP_InputComponent_C_幻象1按下::CallFunc_CharacterVisionSkill1OnPress_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象1抬起
// 0x0108 (0x0108 - 0x0000)
struct BP_InputComponent_C_幻象1抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	int32                                         战斗幻象ID;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         施法者;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Skill_ID;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSVisionData                           VisionData;                                        // 0x0030(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSInputCommand                         ParentCommand;                                     // 0x00C8(0x0014)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x00DC(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CharacterVisionSkill1OnRelease_ReturnValue; // 0x00F0(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象1抬起) == 0x000008, "Wrong alignment on BP_InputComponent_C_幻象1抬起");
static_assert(sizeof(BP_InputComponent_C_幻象1抬起) == 0x000108, "Wrong size on BP_InputComponent_C_幻象1抬起");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, time) == 0x000000, "Member 'BP_InputComponent_C_幻象1抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象1抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, 战斗幻象ID) == 0x000018, "Member 'BP_InputComponent_C_幻象1抬起::战斗幻象ID' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, 施法者) == 0x000020, "Member 'BP_InputComponent_C_幻象1抬起::施法者' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, Skill_ID) == 0x000028, "Member 'BP_InputComponent_C_幻象1抬起::Skill_ID' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, VisionData) == 0x000030, "Member 'BP_InputComponent_C_幻象1抬起::VisionData' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, ParentCommand) == 0x0000C8, "Member 'BP_InputComponent_C_幻象1抬起::ParentCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, CallFunc___1___ReturnValue) == 0x0000DC, "Member 'BP_InputComponent_C_幻象1抬起::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1抬起, CallFunc_CharacterVisionSkill1OnRelease_ReturnValue) == 0x0000F0, "Member 'BP_InputComponent_C_幻象1抬起::CallFunc_CharacterVisionSkill1OnRelease_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象1长按
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_幻象1长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象1长按) == 0x000004, "Wrong alignment on BP_InputComponent_C_幻象1长按");
static_assert(sizeof(BP_InputComponent_C_幻象1长按) == 0x00002C, "Wrong size on BP_InputComponent_C_幻象1长按");
static_assert(offsetof(BP_InputComponent_C_幻象1长按, time) == 0x000000, "Member 'BP_InputComponent_C_幻象1长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1长按, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象1长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象1长按, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_幻象1长按::CallFunc___1___ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象2按下
// 0x0060 (0x0060 - 0x0000)
struct BP_InputComponent_C_幻象2按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          空中能否施法;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         当前玩家;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempVisionLevel;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempArrayIndex;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempVisionID;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___2___ReturnValue;                        // 0x0034(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CharacterVisionSkill2OnPress_ReturnValue; // 0x0048(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象2按下) == 0x000008, "Wrong alignment on BP_InputComponent_C_幻象2按下");
static_assert(sizeof(BP_InputComponent_C_幻象2按下) == 0x000060, "Wrong size on BP_InputComponent_C_幻象2按下");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, time) == 0x000000, "Member 'BP_InputComponent_C_幻象2按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象2按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, 空中能否施法) == 0x000018, "Member 'BP_InputComponent_C_幻象2按下::空中能否施法' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, 当前玩家) == 0x000020, "Member 'BP_InputComponent_C_幻象2按下::当前玩家' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, TempVisionLevel) == 0x000028, "Member 'BP_InputComponent_C_幻象2按下::TempVisionLevel' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, TempArrayIndex) == 0x00002C, "Member 'BP_InputComponent_C_幻象2按下::TempArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, TempVisionID) == 0x000030, "Member 'BP_InputComponent_C_幻象2按下::TempVisionID' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, CallFunc___2___ReturnValue) == 0x000034, "Member 'BP_InputComponent_C_幻象2按下::CallFunc___2___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2按下, CallFunc_CharacterVisionSkill2OnPress_ReturnValue) == 0x000048, "Member 'BP_InputComponent_C_幻象2按下::CallFunc_CharacterVisionSkill2OnPress_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.GetUnrealCacheConfig
// 0x0034 (0x0034 - 0x0000)
struct BP_InputComponent_C_GetUnrealCacheConfig final
{
public:
	int32                                         action;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCaches                          ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCaches                          CallFunc_GetUnrealCacheConfig_ReturnValue;         // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCaches                          CallFunc_Map_Find_Value;                           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_GetUnrealCacheConfig) == 0x000004, "Wrong alignment on BP_InputComponent_C_GetUnrealCacheConfig");
static_assert(sizeof(BP_InputComponent_C_GetUnrealCacheConfig) == 0x000034, "Wrong size on BP_InputComponent_C_GetUnrealCacheConfig");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, action) == 0x000000, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::action' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, CallFunc_GetUnrealCacheConfig_ReturnValue) == 0x000014, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::CallFunc_GetUnrealCacheConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, CallFunc_Map_Find_Value) == 0x000024, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealCacheConfig, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_InputComponent_C_GetUnrealCacheConfig::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.GetUnrealHoldConfig
// 0x0028 (0x0028 - 0x0000)
struct BP_InputComponent_C_GetUnrealHoldConfig final
{
public:
	int32                                         action;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputHoldConfig                      ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputHoldConfig                      CallFunc_GetUnrealHoldConfig_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputHoldConfig                      CallFunc_Map_Find_Value;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_GetUnrealHoldConfig) == 0x000004, "Wrong alignment on BP_InputComponent_C_GetUnrealHoldConfig");
static_assert(sizeof(BP_InputComponent_C_GetUnrealHoldConfig) == 0x000028, "Wrong size on BP_InputComponent_C_GetUnrealHoldConfig");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, action) == 0x000000, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::action' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, CallFunc_GetUnrealHoldConfig_ReturnValue) == 0x000010, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::CallFunc_GetUnrealHoldConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, CallFunc_Map_Find_Value) == 0x00001C, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_GetUnrealHoldConfig, CallFunc_Map_Find_ReturnValue) == 0x000024, "Member 'BP_InputComponent_C_GetUnrealHoldConfig::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.锁定目标抬起事件
// 0x0070 (0x0070 - 0x0000)
struct BP_InputComponent_C_锁定目标抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadNow_ReturnValue;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_锁定目标抬起事件) == 0x000008, "Wrong alignment on BP_InputComponent_C_锁定目标抬起事件");
static_assert(sizeof(BP_InputComponent_C_锁定目标抬起事件) == 0x000070, "Wrong size on BP_InputComponent_C_锁定目标抬起事件");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, time) == 0x000000, "Member 'BP_InputComponent_C_锁定目标抬起事件::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_GetDirectionState_ReturnValue) == 0x000039, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000040, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000058, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000068, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标抬起事件, CallFunc_IsGamepadNow_ReturnValue) == 0x000069, "Member 'BP_InputComponent_C_锁定目标抬起事件::CallFunc_IsGamepadNow_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.攻击按下
// 0x0078 (0x0078 - 0x0000)
struct BP_InputComponent_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  发射事件Tags;                                      // 0x0018(0x0020)(Edit, BlueprintVisible)
	struct FSInputCommand                         ParentCommand;                                     // 0x0038(0x0014)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x004C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CharacterAttackOnPress_ReturnValue;       // 0x0060(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_攻击按下) == 0x000008, "Wrong alignment on BP_InputComponent_C_攻击按下");
static_assert(sizeof(BP_InputComponent_C_攻击按下) == 0x000078, "Wrong size on BP_InputComponent_C_攻击按下");
static_assert(offsetof(BP_InputComponent_C_攻击按下, time) == 0x000000, "Member 'BP_InputComponent_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_攻击按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击按下, 发射事件Tags) == 0x000018, "Member 'BP_InputComponent_C_攻击按下::发射事件Tags' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击按下, ParentCommand) == 0x000038, "Member 'BP_InputComponent_C_攻击按下::ParentCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击按下, CallFunc______ReturnValue) == 0x00004C, "Member 'BP_InputComponent_C_攻击按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击按下, CallFunc_CharacterAttackOnPress_ReturnValue) == 0x000060, "Member 'BP_InputComponent_C_攻击按下::CallFunc_CharacterAttackOnPress_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.攻击长按
// 0x0040 (0x0040 - 0x0000)
struct BP_InputComponent_C_攻击长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ParentCommand;                                     // 0x0018(0x0014)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_攻击长按) == 0x000004, "Wrong alignment on BP_InputComponent_C_攻击长按");
static_assert(sizeof(BP_InputComponent_C_攻击长按) == 0x000040, "Wrong size on BP_InputComponent_C_攻击长按");
static_assert(offsetof(BP_InputComponent_C_攻击长按, time) == 0x000000, "Member 'BP_InputComponent_C_攻击长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击长按, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_攻击长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击长按, ParentCommand) == 0x000018, "Member 'BP_InputComponent_C_攻击长按::ParentCommand' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_攻击长按, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_InputComponent_C_攻击长按::CallFunc______ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.通用交互按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputComponent_C_通用交互按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_通用交互按下) == 0x000004, "Wrong alignment on BP_InputComponent_C_通用交互按下");
static_assert(sizeof(BP_InputComponent_C_通用交互按下) == 0x000018, "Wrong size on BP_InputComponent_C_通用交互按下");
static_assert(offsetof(BP_InputComponent_C_通用交互按下, time) == 0x000000, "Member 'BP_InputComponent_C_通用交互按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_通用交互按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_通用交互按下::ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.锁定目标按下事件
// 0x0078 (0x0078 - 0x0000)
struct BP_InputComponent_C_锁定目标按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0020(0x0020)()
	ECharViewDirectionState                       CallFunc_GetDirectionState_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGamepadNow_ReturnValue;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InputComponent_C_锁定目标按下事件) == 0x000008, "Wrong alignment on BP_InputComponent_C_锁定目标按下事件");
static_assert(sizeof(BP_InputComponent_C_锁定目标按下事件) == 0x000078, "Wrong size on BP_InputComponent_C_锁定目标按下事件");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, time) == 0x000000, "Member 'BP_InputComponent_C_锁定目标按下事件::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000008, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000020, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_GetDirectionState_ReturnValue) == 0x000040, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_GetDirectionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000048, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000058, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000060, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000070, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_锁定目标按下事件, CallFunc_IsGamepadNow_ReturnValue) == 0x000071, "Member 'BP_InputComponent_C_锁定目标按下事件::CallFunc_IsGamepadNow_ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.技能1按下
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_技能1按下) == 0x000004, "Wrong alignment on BP_InputComponent_C_技能1按下");
static_assert(sizeof(BP_InputComponent_C_技能1按下) == 0x00002C, "Wrong size on BP_InputComponent_C_技能1按下");
static_assert(offsetof(BP_InputComponent_C_技能1按下, time) == 0x000000, "Member 'BP_InputComponent_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_技能1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_技能1按下, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_技能1按下::CallFunc___1___ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象2抬起
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_幻象2抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___2___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象2抬起) == 0x000004, "Wrong alignment on BP_InputComponent_C_幻象2抬起");
static_assert(sizeof(BP_InputComponent_C_幻象2抬起) == 0x00002C, "Wrong size on BP_InputComponent_C_幻象2抬起");
static_assert(offsetof(BP_InputComponent_C_幻象2抬起, time) == 0x000000, "Member 'BP_InputComponent_C_幻象2抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2抬起, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象2抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2抬起, CallFunc___2___ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_幻象2抬起::CallFunc___2___ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.瞄准按下
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_瞄准按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_瞄准按下) == 0x000004, "Wrong alignment on BP_InputComponent_C_瞄准按下");
static_assert(sizeof(BP_InputComponent_C_瞄准按下) == 0x00002C, "Wrong size on BP_InputComponent_C_瞄准按下");
static_assert(offsetof(BP_InputComponent_C_瞄准按下, time) == 0x000000, "Member 'BP_InputComponent_C_瞄准按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_瞄准按下, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_瞄准按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_瞄准按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_瞄准按下::CallFunc______ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.幻象2长按
// 0x002C (0x002C - 0x0000)
struct BP_InputComponent_C_幻象2长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___2___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_幻象2长按) == 0x000004, "Wrong alignment on BP_InputComponent_C_幻象2长按");
static_assert(sizeof(BP_InputComponent_C_幻象2长按) == 0x00002C, "Wrong size on BP_InputComponent_C_幻象2长按");
static_assert(offsetof(BP_InputComponent_C_幻象2长按, time) == 0x000000, "Member 'BP_InputComponent_C_幻象2长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2长按, ReturnValue) == 0x000004, "Member 'BP_InputComponent_C_幻象2长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_幻象2长按, CallFunc___2___ReturnValue) == 0x000018, "Member 'BP_InputComponent_C_幻象2长按::CallFunc___2___ReturnValue' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.瞄准按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputComponent_C_瞄准按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_瞄准按下事件) == 0x000004, "Wrong alignment on BP_InputComponent_C_瞄准按下事件");
static_assert(sizeof(BP_InputComponent_C_瞄准按下事件) == 0x000004, "Wrong size on BP_InputComponent_C_瞄准按下事件");
static_assert(offsetof(BP_InputComponent_C_瞄准按下事件, time) == 0x000000, "Member 'BP_InputComponent_C_瞄准按下事件::time' has a wrong offset!");

// Function BP_InputComponent.BP_InputComponent_C.特殊探索技能
// 0x0018 (0x0018 - 0x0000)
struct BP_InputComponent_C_特殊探索技能 final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         指令;                                              // 0x0004(0x0014)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputComponent_C_特殊探索技能) == 0x000004, "Wrong alignment on BP_InputComponent_C_特殊探索技能");
static_assert(sizeof(BP_InputComponent_C_特殊探索技能) == 0x000018, "Wrong size on BP_InputComponent_C_特殊探索技能");
static_assert(offsetof(BP_InputComponent_C_特殊探索技能, Result) == 0x000000, "Member 'BP_InputComponent_C_特殊探索技能::Result' has a wrong offset!");
static_assert(offsetof(BP_InputComponent_C_特殊探索技能, 指令) == 0x000004, "Member 'BP_InputComponent_C_特殊探索技能::指令' has a wrong offset!");

}

