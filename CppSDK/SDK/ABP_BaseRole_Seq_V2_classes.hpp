#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BaseRole_Seq_V2

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KuroAnim_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C
// 0x2240 (0x28A0 - 0x0660)
class UABP_BaseRole_Seq_V2_C final : public UAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x0668(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x06A0(0x0138)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x07D8(0x0020)()
	uint8                                         Pad_7F8[0x8];                                      // 0x07F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RBF                          AnimGraphNode_RBF;                                 // 0x0800(0x0150)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0950(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0970(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x09A8(0x0138)()
	struct FAnimNode_CurveSource                  AnimGraphNode_CurveSource;                         // 0x0AE0(0x0040)()
	struct FAnimNode_CurveFix                     AnimGraphNode_CurveFix;                            // 0x0B20(0x0030)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves_1;                     // 0x0B50(0x0060)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0BB0(0x0060)()
	struct FAnimNode_CombineCurves                AnimGraphNode_CombineCurves;                       // 0x0C10(0x0060)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0C70(0x00B0)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x0D20(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x0DD0(0x0060)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0E30(0x0038)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0E68(0x0060)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0EC8(0x0060)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0F28(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0FF0(0x0090)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1080(0x0060)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x10E0(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x11A0(0x0060)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1200(0x00C0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x12C0(0x0038)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x12F8(0x0138)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x1430(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1558(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1578(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x1598(0x0128)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x16C0(0x01A8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x1868(0x0128)()
	struct FAnimNode_MorphTargetModifier          AnimGraphNode_MorphTargetModifier;                 // 0x1990(0x0060)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x19F0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x1B18(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x1C40(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x1D68(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x1E90(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1FB8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x20E0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2208(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2330(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2458(0x0038)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x2490(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x2550(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x2610(0x00C0)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x26D0(0x00C0)()
	struct FVector2D                              LookXY;                                            // 0x2790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LookFixHead;                                       // 0x2798(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LookFixNeck;                                       // 0x27A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Enable_AimOffset;                                  // 0x27B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27B1[0x3];                                     // 0x27B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               LookFixSpine;                                      // 0x27B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAimOffsetBlendSpace*                   AimOffset;                                         // 0x27C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Stand;                                      // 0x27C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27C9[0x7];                                     // 0x27C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Stand;                                             // 0x27D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableSwitchPose;                                  // 0x27D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D9[0x7];                                     // 0x27D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          CachePose;                                         // 0x27E0(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SwitchPoseTime;                                    // 0x2820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Add_Bip_001LClavicle;                              // 0x2824(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001LUpper_Arm;                             // 0x2830(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001LForearm;                               // 0x283C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001RClavicle;                              // 0x2848(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001RUpper_Arm;                             // 0x2854(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001RForearm;                               // 0x2860(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001Spine_1;                                // 0x286C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001RHand;                                  // 0x2878(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Add_Bip_001LHand;                                  // 0x2884(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SeqLHandWeight;                                    // 0x2890(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SeqRHandWeight;                                    // 0x2894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_BaseRole_Seq_V2(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void 计算层(const struct FPoseLink& InPose_0, struct FPoseLink* 计算层_0);
	void 肢体层(struct FPoseLink* 肢体层_0);
	void 面部层(const struct FPoseLink& InPose, struct FPoseLink* 面部层_0);
	void 修型层(const struct FPoseLink& InPose_0, struct FPoseLink* 修型层_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BaseRole_Seq_V2_C">();
	}
	static class UABP_BaseRole_Seq_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BaseRole_Seq_V2_C>();
	}
};
static_assert(alignof(UABP_BaseRole_Seq_V2_C) == 0x000010, "Wrong alignment on UABP_BaseRole_Seq_V2_C");
static_assert(sizeof(UABP_BaseRole_Seq_V2_C) == 0x0028A0, "Wrong size on UABP_BaseRole_Seq_V2_C");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, UberGraphFrame) == 0x000660, "Member 'UABP_BaseRole_Seq_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_4) == 0x000668, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose_2) == 0x0006A0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0007D8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_RBF) == 0x000800, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_RBF' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000950, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_3) == 0x000970, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose_1) == 0x0009A8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CurveSource) == 0x000AE0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CurveSource' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CurveFix) == 0x000B20, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CurveFix' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CombineCurves_1) == 0x000B50, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CombineCurves_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_5) == 0x000BB0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_CombineCurves) == 0x000C10, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_CombineCurves' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_BlendListByBool) == 0x000C70, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_PoseSnapshot) == 0x000D20, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_4) == 0x000DD0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_2) == 0x000E30, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_3) == 0x000E68, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_2) == 0x000EC8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_TwoWayBlend) == 0x000F28, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_SequencePlayer) == 0x000FF0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot_1) == 0x001080, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0010E0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Slot) == 0x0011A0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LayeredBoneBlend) == 0x001200, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root_1) == 0x0012C0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedInputPose) == 0x0012F8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_11) == 0x001430, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LocalToComponentSpace) == 0x001558, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ComponentToLocalSpace) == 0x001578, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_10) == 0x001598, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0016C0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_9) == 0x001868, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_MorphTargetModifier) == 0x001990, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_MorphTargetModifier' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_8) == 0x0019F0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_7) == 0x001B18, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_6) == 0x001C40, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_5) == 0x001D68, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_4) == 0x001E90, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_3) == 0x001FB8, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_2) == 0x0020E0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone_1) == 0x002208, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_ModifyBone) == 0x002330, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_Root) == 0x002458, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_3) == 0x002490, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_2) == 0x002550, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer_1) == 0x002610, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AnimGraphNode_LinkedAnimLayer) == 0x0026D0, "Member 'UABP_BaseRole_Seq_V2_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookXY) == 0x002790, "Member 'UABP_BaseRole_Seq_V2_C::LookXY' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixHead) == 0x002798, "Member 'UABP_BaseRole_Seq_V2_C::LookFixHead' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixNeck) == 0x0027A4, "Member 'UABP_BaseRole_Seq_V2_C::LookFixNeck' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Enable_AimOffset) == 0x0027B0, "Member 'UABP_BaseRole_Seq_V2_C::Enable_AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, LookFixSpine) == 0x0027B4, "Member 'UABP_BaseRole_Seq_V2_C::LookFixSpine' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, AimOffset) == 0x0027C0, "Member 'UABP_BaseRole_Seq_V2_C::AimOffset' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Enable_Stand) == 0x0027C8, "Member 'UABP_BaseRole_Seq_V2_C::Enable_Stand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Stand) == 0x0027D0, "Member 'UABP_BaseRole_Seq_V2_C::Stand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, EnableSwitchPose) == 0x0027D8, "Member 'UABP_BaseRole_Seq_V2_C::EnableSwitchPose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, CachePose) == 0x0027E0, "Member 'UABP_BaseRole_Seq_V2_C::CachePose' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, SwitchPoseTime) == 0x002820, "Member 'UABP_BaseRole_Seq_V2_C::SwitchPoseTime' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001LClavicle) == 0x002824, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001LClavicle' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001LUpper_Arm) == 0x002830, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001LUpper_Arm' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001LForearm) == 0x00283C, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001LForearm' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001RClavicle) == 0x002848, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001RClavicle' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001RUpper_Arm) == 0x002854, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001RUpper_Arm' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001RForearm) == 0x002860, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001RForearm' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001Spine_1) == 0x00286C, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001Spine_1' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001RHand) == 0x002878, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001RHand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, Add_Bip_001LHand) == 0x002884, "Member 'UABP_BaseRole_Seq_V2_C::Add_Bip_001LHand' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, SeqLHandWeight) == 0x002890, "Member 'UABP_BaseRole_Seq_V2_C::SeqLHandWeight' has a wrong offset!");
static_assert(offsetof(UABP_BaseRole_Seq_V2_C, SeqRHandWeight) == 0x002894, "Member 'UABP_BaseRole_Seq_V2_C::SeqRHandWeight' has a wrong offset!");

}

