#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTriggerVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"
#include "ETriggerType_structs.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTriggerVolume.TsTriggerVolume_C
// 0x0140 (0x03F8 - 0x02B8)
class ATsTriggerVolume_C final : public AKuroEffectActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerGroup;                                      // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrush*                                 TriggerItem;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggerId;                                         // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETriggerType                                  TriggerType;                                       // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreBullet;                                      // 0x02DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitCd;                                             // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UEffectModelBase>        HitEffectData;                                     // 0x02E8(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 HitDataName;                                       // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UEffectModelBase>        TriggerItemEffectData;                             // 0x0328(0x0030)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotScale;                                          // 0x035C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x035D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoTriggerEffect;                               // 0x035E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35F[0x1];                                      // 0x035F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EffectCd;                                          // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int64>                                 BuffIds;                                           // 0x0368(0x0010)(Edit, BlueprintVisible)
	bool                                          IsRemoveBuffIds;                                   // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 PropsIds;                                          // 0x0380(0x0010)(Edit, BlueprintVisible)
	int32                                         AddBuffType;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToleranceDistance;                                 // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBlockCamera;                                     // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          EnterAkEvent;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ExitAkEvent;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ConditionGroupId;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventGroupId;                                      // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ExitEventGroupId;                                  // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsChangeFootStep;                                  // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FootStepMaterialId;                                // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABrush*>                         TriggerItems;                                      // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void ExecuteUbergraph_TsTriggerVolume(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void AddBuffInner(int64 buffId);
	void TryReportSelfBuffDamageLog();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTriggerVolume_C">();
	}
	static class ATsTriggerVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATsTriggerVolume_C>();
	}
};
static_assert(alignof(ATsTriggerVolume_C) == 0x000008, "Wrong alignment on ATsTriggerVolume_C");
static_assert(sizeof(ATsTriggerVolume_C) == 0x0003F8, "Wrong size on ATsTriggerVolume_C");
static_assert(offsetof(ATsTriggerVolume_C, UberGraphFrame) == 0x0002B8, "Member 'ATsTriggerVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, DefaultSceneRoot) == 0x0002C0, "Member 'ATsTriggerVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerGroup) == 0x0002C8, "Member 'ATsTriggerVolume_C::TriggerGroup' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerItem) == 0x0002D0, "Member 'ATsTriggerVolume_C::TriggerItem' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerId) == 0x0002D8, "Member 'ATsTriggerVolume_C::TriggerId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerType) == 0x0002DC, "Member 'ATsTriggerVolume_C::TriggerType' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IgnoreBullet) == 0x0002DD, "Member 'ATsTriggerVolume_C::IgnoreBullet' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, HitCd) == 0x0002E0, "Member 'ATsTriggerVolume_C::HitCd' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, HitEffectData) == 0x0002E8, "Member 'ATsTriggerVolume_C::HitEffectData' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, HitDataName) == 0x000318, "Member 'ATsTriggerVolume_C::HitDataName' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerItemEffectData) == 0x000328, "Member 'ATsTriggerVolume_C::TriggerItemEffectData' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, AreaId) == 0x000358, "Member 'ATsTriggerVolume_C::AreaId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, NotScale) == 0x00035C, "Member 'ATsTriggerVolume_C::NotScale' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IsPlayer) == 0x00035D, "Member 'ATsTriggerVolume_C::IsPlayer' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IsAutoTriggerEffect) == 0x00035E, "Member 'ATsTriggerVolume_C::IsAutoTriggerEffect' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, EffectCd) == 0x000360, "Member 'ATsTriggerVolume_C::EffectCd' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, BuffIds) == 0x000368, "Member 'ATsTriggerVolume_C::BuffIds' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IsRemoveBuffIds) == 0x000378, "Member 'ATsTriggerVolume_C::IsRemoveBuffIds' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, PropsIds) == 0x000380, "Member 'ATsTriggerVolume_C::PropsIds' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, AddBuffType) == 0x000390, "Member 'ATsTriggerVolume_C::AddBuffType' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, ToleranceDistance) == 0x000394, "Member 'ATsTriggerVolume_C::ToleranceDistance' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IsBlockCamera) == 0x000398, "Member 'ATsTriggerVolume_C::IsBlockCamera' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, EnterAkEvent) == 0x0003A0, "Member 'ATsTriggerVolume_C::EnterAkEvent' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, ExitAkEvent) == 0x0003A8, "Member 'ATsTriggerVolume_C::ExitAkEvent' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, ConditionGroupId) == 0x0003B0, "Member 'ATsTriggerVolume_C::ConditionGroupId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, EventGroupId) == 0x0003C0, "Member 'ATsTriggerVolume_C::EventGroupId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, ExitEventGroupId) == 0x0003D0, "Member 'ATsTriggerVolume_C::ExitEventGroupId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, IsChangeFootStep) == 0x0003E0, "Member 'ATsTriggerVolume_C::IsChangeFootStep' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, FootStepMaterialId) == 0x0003E4, "Member 'ATsTriggerVolume_C::FootStepMaterialId' has a wrong offset!");
static_assert(offsetof(ATsTriggerVolume_C, TriggerItems) == 0x0003E8, "Member 'ATsTriggerVolume_C::TriggerItems' has a wrong offset!");

}

