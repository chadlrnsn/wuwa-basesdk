#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplitScreen_New

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.ExecuteUbergraph_BP_SplitScreen_New
// 0x0080 (0x0080 - 0x0000)
struct BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_2;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_RemoveDeadEffects_ReturnValue;            // 0x0040(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_RemoveDeadEffects_ReturnValue_1;          // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_RemoveDeadEffects_ReturnValue_2;          // 0x0068(0x0010)(ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New) == 0x000008, "Wrong alignment on BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New");
static_assert(sizeof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New) == 0x000080, "Wrong size on BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, EntryPoint) == 0x000000, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, K2Node_Event_DeltaSeconds_1) == 0x000004, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000008, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000018, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetVectorParameterValue_ReturnValue_2) == 0x000028, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetVectorParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetValidValue_ReturnValue) == 0x00003A, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue_2) == 0x00003B, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue_3) == 0x00003C, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue_4) == 0x00003D, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_RemoveDeadEffects_ReturnValue) == 0x000040, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_RemoveDeadEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_RemoveDeadEffects_ReturnValue_1) == 0x000050, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_RemoveDeadEffects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_IsValid_ReturnValue_5) == 0x000060, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetValidValue_ReturnValue_1) == 0x000061, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_RemoveDeadEffects_ReturnValue_2) == 0x000068, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_RemoveDeadEffects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New, CallFunc_GetValidValue_ReturnValue_2) == 0x00007C, "Member 'BP_SplitScreen_New_C_ExecuteUbergraph_BP_SplitScreen_New::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.EditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplitScreen_New_C_EditorTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_EditorTick) == 0x000004, "Wrong alignment on BP_SplitScreen_New_C_EditorTick");
static_assert(sizeof(BP_SplitScreen_New_C_EditorTick) == 0x000004, "Wrong size on BP_SplitScreen_New_C_EditorTick");
static_assert(offsetof(BP_SplitScreen_New_C_EditorTick, DeltaSeconds) == 0x000000, "Member 'BP_SplitScreen_New_C_EditorTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplitScreen_New_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplitScreen_New_C_ReceiveTick");
static_assert(sizeof(BP_SplitScreen_New_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplitScreen_New_C_ReceiveTick");
static_assert(offsetof(BP_SplitScreen_New_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplitScreen_New_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.Start
// 0x0028 (0x0028 - 0x0000)
struct BP_SplitScreen_New_C_Start final
{
public:
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroMaterialControllerComponent*       CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_InitKuroMaterialController_returnHandle_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_Start) == 0x000008, "Wrong alignment on BP_SplitScreen_New_C_Start");
static_assert(sizeof(BP_SplitScreen_New_C_Start) == 0x000028, "Wrong size on BP_SplitScreen_New_C_Start");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_AddComponentByClass_ReturnValue) == 0x000000, "Member 'BP_SplitScreen_New_C_Start::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000008, "Member 'BP_SplitScreen_New_C_Start::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_InitKuroMaterialController_returnHandle) == 0x000010, "Member 'BP_SplitScreen_New_C_Start::CallFunc_InitKuroMaterialController_returnHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_InitKuroMaterialController_returnHandle_1) == 0x000014, "Member 'BP_SplitScreen_New_C_Start::CallFunc_InitKuroMaterialController_returnHandle_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000018, "Member 'BP_SplitScreen_New_C_Start::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_Start, CallFunc_InitKuroMaterialController_returnHandle_2) == 0x000020, "Member 'BP_SplitScreen_New_C_Start::CallFunc_InitKuroMaterialController_returnHandle_2' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.InitKuroMaterialController
// 0x0158 (0x0158 - 0x0000)
struct BP_SplitScreen_New_C_InitKuroMaterialController final
{
public:
	class UKuroMaterialControllerComponent*       KuroMaterialControllerComponent;                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CharacterActorComponent;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLightComponent;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PointLight_Location;                               // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PointLight_ToonLightColor;                         // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_TongKong;                       // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_YanBai;                         // 0x0044(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EyeLightSimulation_Color;                          // 0x0054(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         E_LinkPos;                                         // 0x0064(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Channel0;                                          // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel1;                                          // 0x0069(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Channel2;                                          // 0x006A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LightYaw;                                          // 0x006C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FaceLightYaw;                                      // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoleId;                                            // 0x0074(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         returnHandle;                                      // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalHandle;                                       // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0084(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BaseRole_Seq_V2_C*                  K2Node_DynamicCast_AsBP_Base_Role_Seq_V2;          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddEffect_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddEffect_ReturnValue_1;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddEffect_ReturnValue_2;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_InitKuroMaterialController) == 0x000008, "Wrong alignment on BP_SplitScreen_New_C_InitKuroMaterialController");
static_assert(sizeof(BP_SplitScreen_New_C_InitKuroMaterialController) == 0x000158, "Wrong size on BP_SplitScreen_New_C_InitKuroMaterialController");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, KuroMaterialControllerComponent) == 0x000000, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::KuroMaterialControllerComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CharacterActorComponent) == 0x000008, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CharacterActorComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, PointLightComponent) == 0x000010, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::PointLightComponent' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, PointLight_Location) == 0x000018, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::PointLight_Location' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, PointLight_ToonLightColor) == 0x000024, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::PointLight_ToonLightColor' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, EyeLightSimulation_TongKong) == 0x000034, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::EyeLightSimulation_TongKong' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, EyeLightSimulation_YanBai) == 0x000044, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::EyeLightSimulation_YanBai' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, EyeLightSimulation_Color) == 0x000054, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::EyeLightSimulation_Color' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, E_LinkPos) == 0x000064, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::E_LinkPos' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, Channel0) == 0x000068, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::Channel0' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, Channel1) == 0x000069, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::Channel1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, Channel2) == 0x00006A, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::Channel2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, LightYaw) == 0x00006C, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::LightYaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, FaceLightYaw) == 0x000070, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::FaceLightYaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, RoleId) == 0x000074, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::RoleId' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, returnHandle) == 0x000078, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::returnHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, LocalHandle) == 0x00007C, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::LocalHandle' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000084, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, K2Node_DynamicCast_AsBP_Base_Role_Seq_V2) == 0x000120, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::K2Node_DynamicCast_AsBP_Base_Role_Seq_V2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_IsValid_ReturnValue_1) == 0x000129, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_AddEffect_ReturnValue) == 0x00012C, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_AddEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_GetComponentByClass_ReturnValue) == 0x000130, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_AddEffect_ReturnValue_1) == 0x000138, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_AddEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_AddEffect_ReturnValue_2) == 0x00013C, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_AddEffect_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_GetValidValue_ReturnValue) == 0x000140, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_GetValidValue_ReturnValue_1) == 0x000141, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_InitKuroMaterialController, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000144, "Member 'BP_SplitScreen_New_C_InitKuroMaterialController::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.SetPosByViewSize
// 0x0A50 (0x0A50 - 0x0000)
struct BP_SplitScreen_New_C_SetPosByViewSize final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0094(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0160(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0230(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x02D0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0388(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_2; // 0x0450(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_3;         // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_4;         // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_3;  // 0x052C(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_4;  // 0x05C0(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_3; // 0x0654(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector2D                              CallFunc_GetViewportSizeInLink_ViewportSize;       // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0720(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x072C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0738(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x07CC(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0864(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0870(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x087C(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x0910(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x09A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x09B4(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SplitScreen_New_C_SetPosByViewSize) == 0x000010, "Wrong alignment on BP_SplitScreen_New_C_SetPosByViewSize");
static_assert(sizeof(BP_SplitScreen_New_C_SetPosByViewSize) == 0x000A50, "Wrong size on BP_SplitScreen_New_C_SetPosByViewSize");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeTransform_ReturnValue_1) == 0x000040, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000070, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000078, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000080, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000081, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000088, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x000090, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000094, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeTransform_ReturnValue_2) == 0x000130, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000160, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001F4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Roll) == 0x000200, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Pitch) == 0x000204, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Yaw) == 0x000208, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x00020C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeRotator_ReturnValue) == 0x000218, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Roll_1) == 0x000224, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Pitch_1) == 0x000228, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Yaw_1) == 0x00022C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000230, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeRotator_ReturnValue_1) == 0x0002C4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0002D0, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x000364, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Roll_2) == 0x000370, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Pitch_2) == 0x000374, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Yaw_2) == 0x000378, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeRotator_ReturnValue_2) == 0x00037C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000388, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeTransform_ReturnValue_3) == 0x000420, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeTransform_SweepHitResult_2) == 0x000450, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_FindLookAtRotation_ReturnValue_3) == 0x0004E4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_FindLookAtRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_FindLookAtRotation_ReturnValue_4) == 0x0004F0, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_FindLookAtRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Roll_3) == 0x0004FC, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Pitch_3) == 0x000500, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Yaw_3) == 0x000504, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Roll_4) == 0x000508, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Pitch_4) == 0x00050C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakRotator_Yaw_4) == 0x000510, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeRotator_ReturnValue_3) == 0x000514, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeRotator_ReturnValue_4) == 0x000520, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeRotation_SweepHitResult_3) == 0x00052C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeRotation_SweepHitResult_4) == 0x0005C0, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeRotation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeTransform_SweepHitResult_3) == 0x000654, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeTransform_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_GetViewportSizeInLink_ViewportSize) == 0x0006E8, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_GetViewportSizeInLink_ViewportSize' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakVector2D_X) == 0x0006F0, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakVector2D_Y) == 0x0006F4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakVector2D_X_1) == 0x0006F8, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_BreakVector2D_Y_1) == 0x0006FC, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000700, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000704, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000708, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00070C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000710, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000714, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000718, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00071C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue_1) == 0x000720, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue_2) == 0x00072C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000738, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0007CC, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000860, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue_3) == 0x000864, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue_4) == 0x000870, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x00087C, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x000910, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0009A4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_MakeVector_ReturnValue_5) == 0x0009A8, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetPosByViewSize, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x0009B4, "Member 'BP_SplitScreen_New_C_SetPosByViewSize::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.EulerToForward
// 0x0014 (0x0014 - 0x0000)
struct BP_SplitScreen_New_C_EulerToForward final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_EulerToForward) == 0x000004, "Wrong alignment on BP_SplitScreen_New_C_EulerToForward");
static_assert(sizeof(BP_SplitScreen_New_C_EulerToForward) == 0x000014, "Wrong size on BP_SplitScreen_New_C_EulerToForward");
static_assert(offsetof(BP_SplitScreen_New_C_EulerToForward, Pitch) == 0x000000, "Member 'BP_SplitScreen_New_C_EulerToForward::Pitch' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_EulerToForward, Yaw) == 0x000004, "Member 'BP_SplitScreen_New_C_EulerToForward::Yaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_EulerToForward, ReturnValue) == 0x000008, "Member 'BP_SplitScreen_New_C_EulerToForward::ReturnValue' has a wrong offset!");

// Function BP_SplitScreen_New.BP_SplitScreen_New_C.SetLightDirection
// 0x0048 (0x0048 - 0x0000)
struct BP_SplitScreen_New_C_SetLightDirection final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightYaw;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FaceLightYaw;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_EulerToForward_ReturnValue;               // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplitScreen_New_C_SetLightDirection) == 0x000008, "Wrong alignment on BP_SplitScreen_New_C_SetLightDirection");
static_assert(sizeof(BP_SplitScreen_New_C_SetLightDirection) == 0x000048, "Wrong size on BP_SplitScreen_New_C_SetLightDirection");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, Mesh) == 0x000000, "Member 'BP_SplitScreen_New_C_SetLightDirection::Mesh' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, LightYaw) == 0x000008, "Member 'BP_SplitScreen_New_C_SetLightDirection::LightYaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, FaceLightYaw) == 0x00000C, "Member 'BP_SplitScreen_New_C_SetLightDirection::FaceLightYaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_EulerToForward_ReturnValue) == 0x00002C, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_EulerToForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplitScreen_New_C_SetLightDirection, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000038, "Member 'BP_SplitScreen_New_C_SetLightDirection::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

}

