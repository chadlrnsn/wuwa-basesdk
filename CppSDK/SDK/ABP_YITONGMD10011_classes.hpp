#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_YITONGMD10011

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KawaiiPhysics_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_YITONGMD10011.ABP_YITONGMD10011_C
// 0x0640 (0x0CA0 - 0x0660)
class UABP_YITONGMD10011_C final : public UAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0660(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0668(0x0038)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x06A0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x06C0(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x06E0(0x0290)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x0970(0x0290)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0C00(0x0090)()
	class ATsBaseCharacter_C*                     角色;                                              // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_YITONGMD10011(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_YITONGMD10011_C">();
	}
	static class UABP_YITONGMD10011_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_YITONGMD10011_C>();
	}
};
static_assert(alignof(UABP_YITONGMD10011_C) == 0x000010, "Wrong alignment on UABP_YITONGMD10011_C");
static_assert(sizeof(UABP_YITONGMD10011_C) == 0x000CA0, "Wrong size on UABP_YITONGMD10011_C");
static_assert(offsetof(UABP_YITONGMD10011_C, UberGraphFrame) == 0x000660, "Member 'UABP_YITONGMD10011_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_Root) == 0x000668, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_LocalToComponentSpace) == 0x0006A0, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_ComponentToLocalSpace) == 0x0006C0, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_KawaiiPhysics_1) == 0x0006E0, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_KawaiiPhysics) == 0x000970, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, AnimGraphNode_SequencePlayer) == 0x000C00, "Member 'UABP_YITONGMD10011_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_YITONGMD10011_C, 角色) == 0x000C90, "Member 'UABP_YITONGMD10011_C::角色' has a wrong offset!");

}

