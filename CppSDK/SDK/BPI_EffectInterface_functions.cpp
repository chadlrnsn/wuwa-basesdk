#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EffectInterface

#include "Basic.hpp"

#include "BPI_EffectInterface_classes.hpp"
#include "BPI_EffectInterface_parameters.hpp"


namespace SDK
{

// Function BPI_EffectInterface.BPI_EffectInterface_C.GetHandle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Handle                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EffectInterface_C::GetHandle(int32* Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_EffectInterface_C", "GetHandle");

	Params::BPI_EffectInterface_C_GetHandle Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Handle != nullptr)
		*Handle = Parms.Handle;
}


// Function BPI_EffectInterface.BPI_EffectInterface_C.SetHandle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Handle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EffectInterface_C::SetHandle(int32 Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_EffectInterface_C", "SetHandle");

	Params::BPI_EffectInterface_C_SetHandle Parms{};

	Parms.Handle = Handle;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_EffectInterface.BPI_EffectInterface_C.RemoveHandle
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EffectInterface_C::RemoveHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_EffectInterface_C", "RemoveHandle");

	AsUObject()->ProcessEvent(Func, nullptr);
}

}

