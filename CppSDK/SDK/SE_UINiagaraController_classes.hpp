#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SE_UINiagaraController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SE_ControllerBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SE_UINiagaraController.SE_UINiagaraController_C
// 0x0030 (0x00F8 - 0x00C8)
class USE_UINiagaraController_C final : public USE_ControllerBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_SE_UINiagaraController_C;           // 0x00C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UUINiagara*>                     CachedNiagara;                                     // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          HasAdapted;                                        // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ViewportSize;                                      // 0x00E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAspectRatio;                                    // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AspectRatio;                                       // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ControlByWidth;                                    // 0x00F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void CaculatePoint(const struct FVector2D& LeftBottomPoint, const struct FVector2D& RightTopPoint, struct FVector2D* NewLeftBottomPoint, struct FVector2D* NewRightTopPoint);
	void AdjustToScreenEditor();
	void AdjustToScreen();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ApplyAlpha(float alpha);
	void ApplyVisibility(bool visibility);
	void BeforeStart();
	void ApplyEnvironmentFactor(float EnvironmentFactor);
	void ExecuteUbergraph_SE_UINiagaraController(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SE_UINiagaraController_C">();
	}
	static class USE_UINiagaraController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USE_UINiagaraController_C>();
	}
};
static_assert(alignof(USE_UINiagaraController_C) == 0x000008, "Wrong alignment on USE_UINiagaraController_C");
static_assert(sizeof(USE_UINiagaraController_C) == 0x0000F8, "Wrong size on USE_UINiagaraController_C");
static_assert(offsetof(USE_UINiagaraController_C, UberGraphFrame_SE_UINiagaraController_C) == 0x0000C8, "Member 'USE_UINiagaraController_C::UberGraphFrame_SE_UINiagaraController_C' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, CachedNiagara) == 0x0000D0, "Member 'USE_UINiagaraController_C::CachedNiagara' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, HasAdapted) == 0x0000E0, "Member 'USE_UINiagaraController_C::HasAdapted' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, ViewportSize) == 0x0000E4, "Member 'USE_UINiagaraController_C::ViewportSize' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, UseAspectRatio) == 0x0000EC, "Member 'USE_UINiagaraController_C::UseAspectRatio' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, AspectRatio) == 0x0000F0, "Member 'USE_UINiagaraController_C::AspectRatio' has a wrong offset!");
static_assert(offsetof(USE_UINiagaraController_C, ControlByWidth) == 0x0000F4, "Member 'USE_UINiagaraController_C::ControlByWidth' has a wrong offset!");

}

