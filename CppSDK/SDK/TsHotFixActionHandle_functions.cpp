#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsHotFixActionHandle

#include "Basic.hpp"

#include "TsHotFixActionHandle_classes.hpp"
#include "TsHotFixActionHandle_parameters.hpp"


namespace SDK
{

// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnPressAction(const struct FKey& key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnPressAction");

	Params::TsHotFixActionHandle_C_OnPressAction Parms{};

	Parms.key = std::move(key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnReleaseAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnReleaseAction(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnReleaseAction");

	Params::TsHotFixActionHandle_C_OnReleaseAction Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddPressBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    actionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddPressBinding(const class FString& actionName, class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddPressBinding");

	Params::TsHotFixActionHandle_C_AddPressBinding Parms{};

	Parms.actionName = std::move(actionName);
	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddReleaseBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    actionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddReleaseBinding(const class FString& actionName, class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddReleaseBinding");

	Params::TsHotFixActionHandle_C_AddReleaseBinding Parms{};

	Parms.actionName = std::move(actionName);
	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchPressBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchPressBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchPressBinding");

	Params::TsHotFixActionHandle_C_AddTouchPressBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchReleaseBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchReleaseBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchReleaseBinding");

	Params::TsHotFixActionHandle_C_AddTouchReleaseBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             touchIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchPressAction(ETouchIndex touchIndex, const struct FVector& position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchPressAction");

	Params::TsHotFixActionHandle_C_OnTouchPressAction Parms{};

	Parms.touchIndex = touchIndex;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchReleaseAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             touchIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchReleaseAction(ETouchIndex touchIndex, const struct FVector& position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchReleaseAction");

	Params::TsHotFixActionHandle_C_OnTouchReleaseAction Parms{};

	Parms.touchIndex = touchIndex;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearActionBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearActionBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearActionBinding");

	Params::TsHotFixActionHandle_C_ClearActionBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnTouchMoveAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETouchIndex                             touchindex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnTouchMoveAction(ETouchIndex touchindex, const struct FVector& position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnTouchMoveAction");

	Params::TsHotFixActionHandle_C_OnTouchMoveAction Parms{};

	Parms.touchindex = touchindex;
	Parms.position = std::move(position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddTouchMoveBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddTouchMoveBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddTouchMoveBinding");

	Params::TsHotFixActionHandle_C_AddTouchMoveBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAxisBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    axisName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddAxisBinding(const class FString& axisName, class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddAxisBinding");

	Params::TsHotFixActionHandle_C_AddAxisBinding Parms{};

	Parms.axisName = std::move(axisName);
	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAxisInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAxisInput(float value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAxisInput");

	Params::TsHotFixActionHandle_C_OnAxisInput Parms{};

	Parms.value = value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearAxisBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearAxisBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearAxisBinding");

	Params::TsHotFixActionHandle_C_ClearAxisBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.AddAnyKeyPress
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FInputChord&               chord                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::AddAnyKeyPress(class ABasePlayerController* controller, const struct FInputChord& chord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "AddAnyKeyPress");

	Params::TsHotFixActionHandle_C_AddAnyKeyPress Parms{};

	Parms.controller = controller;
	Parms.chord = std::move(chord);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.ClearKeyBinding
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABasePlayerController*            controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::ClearKeyBinding(class ABasePlayerController* controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "ClearKeyBinding");

	Params::TsHotFixActionHandle_C_ClearKeyBinding Parms{};

	Parms.controller = controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TsHotFixActionHandle.TsHotFixActionHandle_C.OnAnyKeyPressAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UTsHotFixActionHandle_C::OnAnyKeyPressAction(const struct FKey& key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TsHotFixActionHandle_C", "OnAnyKeyPressAction");

	Params::TsHotFixActionHandle_C_OnAnyKeyPressAction Parms{};

	Parms.key = std::move(key);

	UObject::ProcessEvent(Func, &Parms);
}

}

