#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DangoGlobalConfig

#include "Basic.hpp"

#include "SBaseCurve_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EDangoPerformType_structs.hpp"
#include "SDangoPerformData_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DangoGlobalConfig.BP_DangoGlobalConfig_C
// 0x00E0 (0x0118 - 0x0038)
class UBP_DangoGlobalConfig_C final : public UPrimaryDataAsset
{
public:
	int32                                         跳跃前摇时间;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃移动时间;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃后摇时间;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃旋转速度;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃高度偏移基准;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃上升偏移曲线高度范围;                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃下降偏移曲线高度范围;                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            跳跃上升偏移曲线;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            跳跃下降偏移曲线;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃中镜头臂长;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃中镜头追踪时间;                                // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         跳跃中镜头FOV;                                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBaseCurve                            跳跃中镜头曲线;                                    // 0x0074(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃前镜头死区距离基准;                            // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃前镜头臂长;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInt32Range                            跳跃前镜头近距离基准范围;                          // 0x0084(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInt32Range                            跳跃前镜头近距离追踪时间范围;                      // 0x0094(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃前镜头远距离基准;                              // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         跳跃前镜头远距离追踪时间;                          // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         跳跃前镜头FOV;                                     // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBaseCurve                            跳跃前镜头曲线;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EDangoPerformType, struct FSDangoPerformData> 动作表现;                                          // 0x00B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   堆叠绑定骨骼名称;                                  // 0x0108(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         堆叠间隔;                                          // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DangoGlobalConfig_C">();
	}
	static class UBP_DangoGlobalConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DangoGlobalConfig_C>();
	}
};
static_assert(alignof(UBP_DangoGlobalConfig_C) == 0x000008, "Wrong alignment on UBP_DangoGlobalConfig_C");
static_assert(sizeof(UBP_DangoGlobalConfig_C) == 0x000118, "Wrong size on UBP_DangoGlobalConfig_C");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前摇时间) == 0x000038, "Member 'UBP_DangoGlobalConfig_C::跳跃前摇时间' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃移动时间) == 0x00003C, "Member 'UBP_DangoGlobalConfig_C::跳跃移动时间' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃后摇时间) == 0x000040, "Member 'UBP_DangoGlobalConfig_C::跳跃后摇时间' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃旋转速度) == 0x000044, "Member 'UBP_DangoGlobalConfig_C::跳跃旋转速度' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃高度偏移基准) == 0x000048, "Member 'UBP_DangoGlobalConfig_C::跳跃高度偏移基准' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃上升偏移曲线高度范围) == 0x00004C, "Member 'UBP_DangoGlobalConfig_C::跳跃上升偏移曲线高度范围' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃下降偏移曲线高度范围) == 0x000050, "Member 'UBP_DangoGlobalConfig_C::跳跃下降偏移曲线高度范围' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃上升偏移曲线) == 0x000058, "Member 'UBP_DangoGlobalConfig_C::跳跃上升偏移曲线' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃下降偏移曲线) == 0x000060, "Member 'UBP_DangoGlobalConfig_C::跳跃下降偏移曲线' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃中镜头臂长) == 0x000068, "Member 'UBP_DangoGlobalConfig_C::跳跃中镜头臂长' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃中镜头追踪时间) == 0x00006C, "Member 'UBP_DangoGlobalConfig_C::跳跃中镜头追踪时间' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃中镜头FOV) == 0x000070, "Member 'UBP_DangoGlobalConfig_C::跳跃中镜头FOV' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃中镜头曲线) == 0x000074, "Member 'UBP_DangoGlobalConfig_C::跳跃中镜头曲线' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头死区距离基准) == 0x00007C, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头死区距离基准' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头臂长) == 0x000080, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头臂长' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头近距离基准范围) == 0x000084, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头近距离基准范围' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头近距离追踪时间范围) == 0x000094, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头近距离追踪时间范围' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头远距离基准) == 0x0000A4, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头远距离基准' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头远距离追踪时间) == 0x0000A8, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头远距离追踪时间' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头FOV) == 0x0000AC, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头FOV' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 跳跃前镜头曲线) == 0x0000B0, "Member 'UBP_DangoGlobalConfig_C::跳跃前镜头曲线' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 动作表现) == 0x0000B8, "Member 'UBP_DangoGlobalConfig_C::动作表现' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 堆叠绑定骨骼名称) == 0x000108, "Member 'UBP_DangoGlobalConfig_C::堆叠绑定骨骼名称' has a wrong offset!");
static_assert(offsetof(UBP_DangoGlobalConfig_C, 堆叠间隔) == 0x000114, "Member 'UBP_DangoGlobalConfig_C::堆叠间隔' has a wrong offset!");

}

