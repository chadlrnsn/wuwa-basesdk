#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAiBlueprintFunctionLibrary

#include "Basic.hpp"

#include "EQuestStepState_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAiBlueprintFunctionLibrary.TsAiBlueprintFunctionLibrary_C
// 0x0000 (0x0030 - 0x0030)
class UTsAiBlueprintFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static bool CheckPlayerGameplayTag(int32 entityId, const struct FGameplayTag& tag, class UObject* __WorldContext);
	static float GetDistanceByPlayer(int32 entityId, class UObject* __WorldContext);
	static EQuestStepState GetQuestState(int32 entityId, float questId, class UObject* __WorldContext);
	static void RestartBehaviorTree(int32 entityId, class UObject* __WorldContext);
	static void SetAiEnabled(int32 entityId, bool value, const class FString& key, class UObject* __WorldContext);
	static bool NeedCheckPlayerImpact(int32 entityId, class UObject* __WorldContext);
	static bool NeedCheckPlayerAttack(int32 entityId, class UObject* __WorldContext);
	static void UpdateInteractionComponent(int32 entityId, class UObject* __WorldContext);
	static void OnPlayerAttack(int32 entityId, class UObject* __WorldContext);
	static void OnPlayerImpact(int32 entityId, class UObject* __WorldContext);
	static bool IsAiDriver(int32 entityId, class UObject* __WorldContext);
	static class AActor* GetRoleActor(int32 entityId, class UObject* __WorldContext);
	static void SetFollowData(int32 entityId, class AActor* target, int32 type, class UObject* __WorldContext);
	static TArray<class AActor*> GetFollowActor(int32 entityId, class UObject* __WorldContext);
	static void Reset(int32 entityId, float targetEntityId, class UObject* __WorldContext);
	static float GetToRoleDistance(int32 entityId, class UObject* __WorldContext);
	static int32 GetSummonType(int32 entityId, class UObject* __WorldContext);
	static void TsLogInfo(const class FString& text, class UObject* __WorldContext);
	static void OnPlayerAttackEnd(int32 entityId, class UObject* __WorldContext);
	static void OnPlayerImpactEnd(int32 entityId, class UObject* __WorldContext);
	static void OnPlayerAttackBegin(int32 entityId, class UObject* __WorldContext);
	static void OnPlayerImpactBegin(int32 entityId, class UObject* __WorldContext);
	static void UpdateNpcPerformData(int32 entityId, bool& isAttacked1, bool& isImpacted, float& direction, float& strength, class UObject* __WorldContext);
	static int32 GetLevelIntVar(const struct FSAiLevelVar& levelVar, class UObject* __WorldContext);
	static class FString GetLevelStringVar(const struct FSAiLevelVar& levelVar, class UObject* __WorldContext);
	static float GetLevelFloatVar(const struct FSAiLevelVar& levelVar, class UObject* __WorldContext);
	static struct FVector GetLevelPosVar(const struct FSAiLevelVar& levelVar, class UObject* __WorldContext);
	static bool GetLevelBoolVar(const struct FSAiLevelVar& levelVar, class UObject* __WorldContext);
	static void UpdateNpcStateData(int32 entityId, int32& animState, class UObject* __WorldContext);
	static bool GetAndResetNoTransitionSwitch(int32 entityId, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAiBlueprintFunctionLibrary_C">();
	}
	static class UTsAiBlueprintFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAiBlueprintFunctionLibrary_C>();
	}
};
static_assert(alignof(UTsAiBlueprintFunctionLibrary_C) == 0x000008, "Wrong alignment on UTsAiBlueprintFunctionLibrary_C");
static_assert(sizeof(UTsAiBlueprintFunctionLibrary_C) == 0x000030, "Wrong size on UTsAiBlueprintFunctionLibrary_C");

}

