#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsBaseVehicle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharacterRenderingType_structs.hpp"
#include "ECharacterDitherType_structs.hpp"
#include "KuroVehicle_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsBaseVehicle.TsBaseVehicle_C
// 0x0040 (0x06F0 - 0x06B0)
class ATsBaseVehicle_C final : public AKuroBaseVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCharRenderingComponent_C*              CharRenderingComponent;                            // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSoftClassPath                         InputComponentClass;                               // 0x06C0(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 PlatformActor;                                     // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterRenderingType                       RenderType;                                        // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EntityId;                                          // 0x06EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TsBaseVehicle(int32 EntryPoint);
	void ReceiveDestroyed();
	void SetDitherEffect(float dither, ECharacterDitherType ditherType);
	int32 GetEntityId();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsBaseVehicle_C">();
	}
	static class ATsBaseVehicle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATsBaseVehicle_C>();
	}
};
static_assert(alignof(ATsBaseVehicle_C) == 0x000010, "Wrong alignment on ATsBaseVehicle_C");
static_assert(sizeof(ATsBaseVehicle_C) == 0x0006F0, "Wrong size on ATsBaseVehicle_C");
static_assert(offsetof(ATsBaseVehicle_C, UberGraphFrame) == 0x0006B0, "Member 'ATsBaseVehicle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATsBaseVehicle_C, CharRenderingComponent) == 0x0006B8, "Member 'ATsBaseVehicle_C::CharRenderingComponent' has a wrong offset!");
static_assert(offsetof(ATsBaseVehicle_C, InputComponentClass) == 0x0006C0, "Member 'ATsBaseVehicle_C::InputComponentClass' has a wrong offset!");
static_assert(offsetof(ATsBaseVehicle_C, PlatformActor) == 0x0006E0, "Member 'ATsBaseVehicle_C::PlatformActor' has a wrong offset!");
static_assert(offsetof(ATsBaseVehicle_C, RenderType) == 0x0006E8, "Member 'ATsBaseVehicle_C::RenderType' has a wrong offset!");
static_assert(offsetof(ATsBaseVehicle_C, EntityId) == 0x0006EC, "Member 'ATsBaseVehicle_C::EntityId' has a wrong offset!");

}

