#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Youhu

#include "Basic.hpp"

#include "sInputCommand_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Youhu.BP_Input_Youhu_C.攻击按下
// 0x0030 (0x0030 - 0x0000)
struct BP_Input_Youhu_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Youhu_C_攻击按下) == 0x000004, "Wrong alignment on BP_Input_Youhu_C_攻击按下");
static_assert(sizeof(BP_Input_Youhu_C_攻击按下) == 0x000030, "Wrong size on BP_Input_Youhu_C_攻击按下");
static_assert(offsetof(BP_Input_Youhu_C_攻击按下, time) == 0x000000, "Member 'BP_Input_Youhu_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_Input_Youhu_C_攻击按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Youhu_C_攻击按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击按下, CallFunc_CanResponseInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Youhu_C_攻击按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");

// Function BP_Input_Youhu.BP_Input_Youhu_C.攻击长按
// 0x01D0 (0x01D0 - 0x0000)
struct BP_Input_Youhu_C_攻击长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0018(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0024(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0038(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0078(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x00A0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x00B8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x00D0(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue_1;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x00F8(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x010C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_1;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x0140(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x01BC(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Youhu_C_攻击长按) == 0x000008, "Wrong alignment on BP_Input_Youhu_C_攻击长按");
static_assert(sizeof(BP_Input_Youhu_C_攻击长按) == 0x0001D0, "Wrong size on BP_Input_Youhu_C_攻击长按");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, time) == 0x000000, "Member 'BP_Input_Youhu_C_攻击长按::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, ReturnValue) == 0x000004, "Member 'BP_Input_Youhu_C_攻击长按::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000018, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc______ReturnValue) == 0x000024, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000038, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000078, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000098, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_FTrunc_ReturnValue) == 0x00009C, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue) == 0x0000A0, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CanResponseInput_ReturnValue) == 0x0000B5, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x0000B8, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x0000D0, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CanResponseInput_ReturnValue_1) == 0x0000F0, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CanResponseInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F1, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F2, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_IsMovingOnGround_ReturnValue) == 0x0000F3, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_BooleanOR_ReturnValue) == 0x0000F5, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x0000F8, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x00010C, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000120, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_IsMovingOnGround_ReturnValue_1) == 0x000121, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_IsMovingOnGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000122, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_BooleanAND_ReturnValue_1) == 0x000123, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_BooleanOR_ReturnValue_1) == 0x000124, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000128, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000138, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x000140, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000160, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000170, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000178, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000188, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x000190, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x0001A0, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4) == 0x0001A8, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4) == 0x0001B8, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击长按, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x0001BC, "Member 'BP_Input_Youhu_C_攻击长按::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");

// Function BP_Input_Youhu.BP_Input_Youhu_C.攻击抬起
// 0x0380 (0x0380 - 0x0000)
struct BP_Input_Youhu_C_攻击抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0028(0x0020)()
	int32                                         ___int_Array_Index_Variable;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_1;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue_1;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue_2;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x007C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0090(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x00A4(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x00B8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x00D0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_2;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x00F8(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0118(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0128(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x0134(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0150(0x0020)()
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_3;                                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x01A0(0x0020)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags_1; // 0x01C8(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x01D8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_1;           // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EF[0x1];                                      // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5; // 0x0208(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6; // 0x0228(0x0020)()
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x024C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_True_if_break_was_hit_Variable_1;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ReferenceParm)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_7;         // 0x0294(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_7; // 0x02C0(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4; // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4; // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5; // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5; // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0310(0x0010)(ReferenceParm)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0320(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc______ReturnValue_1;                       // 0x036C(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Youhu_C_攻击抬起) == 0x000008, "Wrong alignment on BP_Input_Youhu_C_攻击抬起");
static_assert(sizeof(BP_Input_Youhu_C_攻击抬起) == 0x000380, "Wrong size on BP_Input_Youhu_C_攻击抬起");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, time) == 0x000000, "Member 'BP_Input_Youhu_C_攻击抬起::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ReturnValue) == 0x000004, "Member 'BP_Input_Youhu_C_攻击抬起::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Loop_Counter_Variable) == 0x000018, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Variable) == 0x00001C, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000028, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Array_Index_Variable) == 0x000048, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CanResponseInput_ReturnValue) == 0x00004C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Array_Index_Variable_1) == 0x000050, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Variable_1) == 0x000054, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CanResponseInput_ReturnValue_1) == 0x000078, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CanResponseInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CanResponseInput_ReturnValue_2) == 0x000079, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CanResponseInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue) == 0x00007C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000090, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x0000A4, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x0000B8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___bool_True_if_break_was_hit_Variable) == 0x0000CC, "Member 'BP_Input_Youhu_C_攻击抬起::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x0000D0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Not_PreBool_ReturnValue) == 0x0000E4, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Variable_2) == 0x0000E8, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Loop_Counter_Variable_1) == 0x0000EC, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0000F8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000118, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x000134, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000150, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000170, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000178, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000188, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_FTrunc_ReturnValue) == 0x00018C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000190, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___int_Variable_3) == 0x000194, "Member 'BP_Input_Youhu_C_攻击抬起::___int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000198, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000199, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_IsMovingOnGround_ReturnValue) == 0x00019A, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanAND_ReturnValue) == 0x00019B, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x0001A0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanOR_ReturnValue) == 0x0001C0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BreakGameplayTagContainer_GameplayTags_1) == 0x0001C8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BreakGameplayTagContainer_GameplayTags_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Length_ReturnValue_1) == 0x0001E4, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E9, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001EA, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_IsMovingOnGround_ReturnValue_1) == 0x0001EB, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_IsMovingOnGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001EC, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanAND_ReturnValue_2) == 0x0001ED, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanOR_ReturnValue_1) == 0x0001EE, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x0001F0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000200, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5) == 0x000208, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6) == 0x000228, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000248, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000249, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x00024C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, ___bool_True_if_break_was_hit_Variable_1) == 0x000260, "Member 'BP_Input_Youhu_C_攻击抬起::___bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Not_PreBool_ReturnValue_1) == 0x000261, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_BooleanAND_ReturnValue_3) == 0x000262, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, K2Node_MakeArray_Array) == 0x000268, "Member 'BP_Input_Youhu_C_攻击抬起::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x000278, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x000288, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Get_Item_2) == 0x00028C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000290, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_CreateSkillCommand_ReturnValue_7) == 0x000294, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_CreateSkillCommand_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x0002A8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x0002B8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_7) == 0x0002C0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4) == 0x0002E0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4) == 0x0002F0, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5) == 0x0002F8, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5) == 0x000308, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, K2Node_MakeArray_Array_1) == 0x000310, "Member 'BP_Input_Youhu_C_攻击抬起::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc______ReturnValue) == 0x000320, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_Get_Item_3) == 0x000334, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000338, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000340, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000350, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000358, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000368, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_攻击抬起, CallFunc______ReturnValue_1) == 0x00036C, "Member 'BP_Input_Youhu_C_攻击抬起::CallFunc______ReturnValue_1' has a wrong offset!");

// Function BP_Input_Youhu.BP_Input_Youhu_C.技能1按下
// 0x004C (0x004C - 0x0000)
struct BP_Input_Youhu_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0034(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Youhu_C_技能1按下) == 0x000004, "Wrong alignment on BP_Input_Youhu_C_技能1按下");
static_assert(sizeof(BP_Input_Youhu_C_技能1按下) == 0x00004C, "Wrong size on BP_Input_Youhu_C_技能1按下");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, time) == 0x000000, "Member 'BP_Input_Youhu_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_Input_Youhu_C_技能1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000018, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_CanResponseInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002E, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00002F, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc___1___ReturnValue) == 0x000034, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_技能1按下, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'BP_Input_Youhu_C_技能1按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Input_Youhu.BP_Input_Youhu_C.大招按下
// 0x0040 (0x0040 - 0x0000)
struct BP_Input_Youhu_C_大招按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0020(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Youhu_C_大招按下) == 0x000004, "Wrong alignment on BP_Input_Youhu_C_大招按下");
static_assert(sizeof(BP_Input_Youhu_C_大招按下) == 0x000040, "Wrong size on BP_Input_Youhu_C_大招按下");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, time) == 0x000000, "Member 'BP_Input_Youhu_C_大招按下::time' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, ReturnValue) == 0x000004, "Member 'BP_Input_Youhu_C_大招按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_CanResponseInput_ReturnValue) == 0x000018, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_IsMovingOnGround_ReturnValue) == 0x00001A, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000020, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000034, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x000038, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Youhu_C_大招按下, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Input_Youhu_C_大招按下::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

