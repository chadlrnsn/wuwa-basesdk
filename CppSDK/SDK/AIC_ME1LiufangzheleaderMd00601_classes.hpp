#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_ME1LiufangzheleaderMd00601

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SAiConditions_structs.hpp"
#include "AIC_AICommon_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIC_ME1LiufangzheleaderMd00601.AIC_ME1LiufangzheleaderMd00601_C
// 0x0238 (0x09C0 - 0x0788)
class AAIC_ME1LiufangzheleaderMd00601_C final : public AAIC_AICommon_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AIC_ME1LiufangzheleaderMd00601_C;   // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSAiConditions                         Seven0_血量检查;                                   // 0x0790(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         受身受击次数阈值;                                  // 0x0848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C[0x4];                                      // 0x084C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAiConditions                         满韧检测;                                          // 0x0850(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSAiConditions                         空韧检测;                                          // 0x0908(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AIC_ME1LiufangzheleaderMd00601(int32 EntryPoint);
	void 韧性击空(bool bContent);
	void 韧性恢复满(bool bContent);
	void 受击计数(class ATsBaseCharacter_C* 角色, const struct FSHitInformation& 受击数据);
	void 二阶段监听(bool bContent);
	void OnStart();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIC_ME1LiufangzheleaderMd00601_C">();
	}
	static class AAIC_ME1LiufangzheleaderMd00601_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIC_ME1LiufangzheleaderMd00601_C>();
	}
};
static_assert(alignof(AAIC_ME1LiufangzheleaderMd00601_C) == 0x000008, "Wrong alignment on AAIC_ME1LiufangzheleaderMd00601_C");
static_assert(sizeof(AAIC_ME1LiufangzheleaderMd00601_C) == 0x0009C0, "Wrong size on AAIC_ME1LiufangzheleaderMd00601_C");
static_assert(offsetof(AAIC_ME1LiufangzheleaderMd00601_C, UberGraphFrame_AIC_ME1LiufangzheleaderMd00601_C) == 0x000788, "Member 'AAIC_ME1LiufangzheleaderMd00601_C::UberGraphFrame_AIC_ME1LiufangzheleaderMd00601_C' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LiufangzheleaderMd00601_C, Seven0_血量检查) == 0x000790, "Member 'AAIC_ME1LiufangzheleaderMd00601_C::Seven0_血量检查' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LiufangzheleaderMd00601_C, 受身受击次数阈值) == 0x000848, "Member 'AAIC_ME1LiufangzheleaderMd00601_C::受身受击次数阈值' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LiufangzheleaderMd00601_C, 满韧检测) == 0x000850, "Member 'AAIC_ME1LiufangzheleaderMd00601_C::满韧检测' has a wrong offset!");
static_assert(offsetof(AAIC_ME1LiufangzheleaderMd00601_C, 空韧检测) == 0x000908, "Member 'AAIC_ME1LiufangzheleaderMd00601_C::空韧检测' has a wrong offset!");

}

