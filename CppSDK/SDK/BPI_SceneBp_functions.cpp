#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SceneBp

#include "Basic.hpp"

#include "BPI_SceneBp_classes.hpp"
#include "BPI_SceneBp_parameters.hpp"


namespace SDK
{

// Function BPI_SceneBp.BPI_SceneBp_C.TickOutside
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SceneBp_C::TickOutside()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "TickOutside");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SceneBp.BPI_SceneBp_C.Start
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SceneBp_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "Start");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SceneBp.BPI_SceneBp_C.Stop
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SceneBp_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "Stop");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SceneBp.BPI_SceneBp_C.Pause
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SceneBp_C::Pause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "Pause");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SceneBp.BPI_SceneBp_C.Resume
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_SceneBp_C::Resume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "Resume");

	AsUObject()->ProcessEvent(Func, nullptr);
}


// Function BPI_SceneBp.BPI_SceneBp_C.GetAoiRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32*                                  ret                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SceneBp_C::GetAoiRange(int32* ret) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SceneBp_C", "GetAoiRange");

	Params::BPI_SceneBp_C_GetAoiRange Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ret != nullptr)
		*ret = Parms.ret;
}

}

