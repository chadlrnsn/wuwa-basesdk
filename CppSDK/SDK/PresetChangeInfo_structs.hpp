#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PresetChangeInfo

#include "Basic.hpp"

#include "PresetSelection_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// UserDefinedStruct PresetChangeInfo.PresetChangeInfo
// 0x0018 (0x0018 - 0x0000)
struct FPresetChangeInfo final
{
public:
	bool                                          ReloadSelected_25_165DD8E44AE6D7882C2F5ABE35BF41BA; // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Selected_16_785F8D8944070D067940B8B6B53E25FC;      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPresetSelection                              Mode_17_A4BD793844A78E1A22E2778BB14BE206;          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TransitionDuration_19_73F6782E4DE8FB03600ECFBBB894BC0B; // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   TransitionFunc_18_88BE11474DF134CA5C3E6190B2940A25; // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ChangeAfterTime_21_BF5A190D458432A5BC9B168EA48AE7ED; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FPresetChangeInfo) == 0x000004, "Wrong alignment on FPresetChangeInfo");
static_assert(sizeof(FPresetChangeInfo) == 0x000018, "Wrong size on FPresetChangeInfo");
static_assert(offsetof(FPresetChangeInfo, ReloadSelected_25_165DD8E44AE6D7882C2F5ABE35BF41BA) == 0x000000, "Member 'FPresetChangeInfo::ReloadSelected_25_165DD8E44AE6D7882C2F5ABE35BF41BA' has a wrong offset!");
static_assert(offsetof(FPresetChangeInfo, Selected_16_785F8D8944070D067940B8B6B53E25FC) == 0x000004, "Member 'FPresetChangeInfo::Selected_16_785F8D8944070D067940B8B6B53E25FC' has a wrong offset!");
static_assert(offsetof(FPresetChangeInfo, Mode_17_A4BD793844A78E1A22E2778BB14BE206) == 0x000008, "Member 'FPresetChangeInfo::Mode_17_A4BD793844A78E1A22E2778BB14BE206' has a wrong offset!");
static_assert(offsetof(FPresetChangeInfo, TransitionDuration_19_73F6782E4DE8FB03600ECFBBB894BC0B) == 0x00000C, "Member 'FPresetChangeInfo::TransitionDuration_19_73F6782E4DE8FB03600ECFBBB894BC0B' has a wrong offset!");
static_assert(offsetof(FPresetChangeInfo, TransitionFunc_18_88BE11474DF134CA5C3E6190B2940A25) == 0x000010, "Member 'FPresetChangeInfo::TransitionFunc_18_88BE11474DF134CA5C3E6190B2940A25' has a wrong offset!");
static_assert(offsetof(FPresetChangeInfo, ChangeAfterTime_21_BF5A190D458432A5BC9B168EA48AE7ED) == 0x000014, "Member 'FPresetChangeInfo::ChangeAfterTime_21_BF5A190D458432A5BC9B168EA48AE7ED' has a wrong offset!");

}

