#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActorBulletPreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EBulletShape_structs.hpp"
#include "SReBulletDataMain_structs.hpp"
#include "ProceduralMeshComponent_structs.hpp"


namespace SDK::Params
{

// Function BP_ActorBulletPreview.BP_ActorBulletPreview_C.开始
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ActorBulletPreview_C_开始 final
{
public:
	class USkeletalMeshComponent*                 meshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_CalcBulletInitLocation_ReturnValue;       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_SetActorLocation_SweepHitResult;     // 0x0020(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_K2_SetActorLocation_ReturnValue;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalcBulletInitRotator_ReturnValue;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ActorBulletPreview_C_开始) == 0x000008, "Wrong alignment on BP_ActorBulletPreview_C_开始");
static_assert(sizeof(BP_ActorBulletPreview_C_开始) == 0x0000D8, "Wrong size on BP_ActorBulletPreview_C_开始");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, meshComp) == 0x000000, "Member 'BP_ActorBulletPreview_C_开始::meshComp' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_CalcBulletInitLocation_ReturnValue) == 0x000008, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_CalcBulletInitLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_D_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_D_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_D_K2_SetActorLocation_ReturnValue) == 0x0000B4, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_D_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_CalcBulletInitRotator_ReturnValue) == 0x0000B8, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_CalcBulletInitRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_K2_SetTimer_ReturnValue) == 0x0000C8, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_开始, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000D0, "Member 'BP_ActorBulletPreview_C_开始::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_ActorBulletPreview.BP_ActorBulletPreview_C.形状初始化
// 0x03C0 (0x03C0 - 0x0000)
struct BP_ActorBulletPreview_C_形状初始化 final
{
public:
	EBulletShape                                  形状;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 TrianglesArray;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        VerticesArray;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      ___struct_Variable;                                // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      ___struct_Variable_1;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      ___struct_Variable_2;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector>                        ___struct_Variable_3;                              // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class UProceduralMeshComponent*               CallFunc_AddComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FProcMeshTangent>               ___struct_Variable_4;                              // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FLinearColor>                   ___struct_Variable_5;                              // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      ___struct_Variable_6;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      ___struct_Variable_7;                              // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      ___struct_Variable_8;                              // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector2D>                      ___struct_Variable_9;                              // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector>                        ___struct_Variable_10;                             // 0x0108(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	class UProceduralMeshComponent*               CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class UBoxComponent*                          CallFunc_AddComponentByClass_ReturnValue_3;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue_1;           // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FAssetData                             CallFunc_GetAssetByObjectPath_ReturnValue;         // 0x01E8(0x0068)(HasGetValueTypeHash)
	struct FAssetData                             CallFunc_GetAssetByObjectPath_ReturnValue_1;       // 0x0250(0x0068)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue_1;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_As__;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              K2Node_DynamicCast_As___1;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      ___struct_Variable_11;                             // 0x0330(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   ___struct_Variable_12;                             // 0x0358(0x0010)(ConstParm, ReferenceParm)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_1;  // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FProcMeshTangent>               ___struct_Variable_13;                             // 0x03A8(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_ActorBulletPreview_C_形状初始化) == 0x000010, "Wrong alignment on BP_ActorBulletPreview_C_形状初始化");
static_assert(sizeof(BP_ActorBulletPreview_C_形状初始化) == 0x0003C0, "Wrong size on BP_ActorBulletPreview_C_形状初始化");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, 形状) == 0x000000, "Member 'BP_ActorBulletPreview_C_形状初始化::形状' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, TrianglesArray) == 0x000008, "Member 'BP_ActorBulletPreview_C_形状初始化::TrianglesArray' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, VerticesArray) == 0x000018, "Member 'BP_ActorBulletPreview_C_形状初始化::VerticesArray' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable) == 0x000028, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_ActorBulletPreview_C_形状初始化::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_1) == 0x000040, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_2) == 0x000050, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_3) == 0x000060, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_AddComponentByClass_ReturnValue) == 0x0000A0, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_4) == 0x0000A8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_5) == 0x0000B8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_6) == 0x0000C8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_7) == 0x0000D8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_8) == 0x0000E8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_9) == 0x0000F8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_10) == 0x000108, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_MakeTransform_ReturnValue_1) == 0x000120, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_MakeTransform_ReturnValue_2) == 0x000150, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000180, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000188, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_MakeTransform_ReturnValue_3) == 0x000190, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_AddComponentByClass_ReturnValue_3) == 0x0001C0, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_AddComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAssetRegistry_ReturnValue) == 0x0001C8, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAssetRegistry_ReturnValue_1) == 0x0001D8, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAssetRegistry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAssetByObjectPath_ReturnValue) == 0x0001E8, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAssetByObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAssetByObjectPath_ReturnValue_1) == 0x000250, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAssetByObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAsset_ReturnValue) == 0x0002B8, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetAsset_ReturnValue_1) == 0x0002C0, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, K2Node_DynamicCast_As__) == 0x0002C8, "Member 'BP_ActorBulletPreview_C_形状初始化::K2Node_DynamicCast_As__' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'BP_ActorBulletPreview_C_形状初始化::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, K2Node_DynamicCast_As___1) == 0x0002D8, "Member 'BP_ActorBulletPreview_C_形状初始化::K2Node_DynamicCast_As___1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'BP_ActorBulletPreview_C_形状初始化::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_X) == 0x0002E4, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Y) == 0x0002E8, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Z) == 0x0002EC, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x0002F0, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetActorUpVector_ReturnValue) == 0x000308, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000314, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetActorForwardVector_ReturnValue) == 0x000320, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_11) == 0x000330, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_X_1) == 0x000340, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Y_1) == 0x000344, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Z_1) == 0x000348, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_X_2) == 0x00034C, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Y_2) == 0x000350, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_BreakVector_Z_2) == 0x000354, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_12) == 0x000358, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000368, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000380, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_Conv_VectorDoubleToVector_ReturnValue_1) == 0x00038C, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_Conv_VectorDoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000398, "Member 'BP_ActorBulletPreview_C_形状初始化::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_形状初始化, ___struct_Variable_13) == 0x0003A8, "Member 'BP_ActorBulletPreview_C_形状初始化::___struct_Variable_13' has a wrong offset!");

// Function BP_ActorBulletPreview.BP_ActorBulletPreview_C.初始化
// 0x07B8 (0x07B8 - 0x0000)
struct BP_ActorBulletPreview_C_初始化 final
{
public:
	struct FSReBulletDataMain                     配置_0;                                            // 0x0000(0x07B0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 发射者_0;                                          // 0x07B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorBulletPreview_C_初始化) == 0x000008, "Wrong alignment on BP_ActorBulletPreview_C_初始化");
static_assert(sizeof(BP_ActorBulletPreview_C_初始化) == 0x0007B8, "Wrong size on BP_ActorBulletPreview_C_初始化");
static_assert(offsetof(BP_ActorBulletPreview_C_初始化, 配置_0) == 0x000000, "Member 'BP_ActorBulletPreview_C_初始化::配置_0' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_初始化, 发射者_0) == 0x0007B0, "Member 'BP_ActorBulletPreview_C_初始化::发射者_0' has a wrong offset!");

// Function BP_ActorBulletPreview.BP_ActorBulletPreview_C.OnTick
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ActorBulletPreview_C_OnTick final
{
public:
	struct FVectorDouble                          CallFunc_CalcBulletLocation_ReturnValue;           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_SetActorLocation_SweepHitResult;     // 0x0018(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_K2_SetActorLocation_ReturnValue;        // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalcBulletRotator_ReturnValue;            // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActorBulletPreview_C_OnTick) == 0x000008, "Wrong alignment on BP_ActorBulletPreview_C_OnTick");
static_assert(sizeof(BP_ActorBulletPreview_C_OnTick) == 0x0000C8, "Wrong size on BP_ActorBulletPreview_C_OnTick");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_CalcBulletLocation_ReturnValue) == 0x000000, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_CalcBulletLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_D_K2_SetActorLocation_SweepHitResult) == 0x000018, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_D_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_D_K2_SetActorLocation_ReturnValue) == 0x0000AC, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_D_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_CalcBulletRotator_ReturnValue) == 0x0000B0, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_CalcBulletRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000BC, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000BD, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActorBulletPreview_C_OnTick, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_ActorBulletPreview_C_OnTick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ActorBulletPreview.BP_ActorBulletPreview_C.中心位置偏移
// 0x0094 (0x0094 - 0x0000)
struct BP_ActorBulletPreview_C_中心位置偏移 final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0000(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ActorBulletPreview_C_中心位置偏移) == 0x000004, "Wrong alignment on BP_ActorBulletPreview_C_中心位置偏移");
static_assert(sizeof(BP_ActorBulletPreview_C_中心位置偏移) == 0x000094, "Wrong size on BP_ActorBulletPreview_C_中心位置偏移");
static_assert(offsetof(BP_ActorBulletPreview_C_中心位置偏移, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000000, "Member 'BP_ActorBulletPreview_C_中心位置偏移::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

