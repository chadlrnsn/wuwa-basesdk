#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterController

#include "Basic.hpp"

#include "BP_CharacterController_classes.hpp"
#include "BP_CharacterController_parameters.hpp"


namespace SDK
{

// Function BP_CharacterController.BP_CharacterController_C.ExecuteUbergraph_BP_CharacterController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterController_C::ExecuteUbergraph_BP_CharacterController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "ExecuteUbergraph_BP_CharacterController");

	Params::BP_CharacterController_C_ExecuteUbergraph_BP_CharacterController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterController.BP_CharacterController_C.OnReleaseAnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CharacterController_C::OnReleaseAnyKey(const struct FKey& key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "OnReleaseAnyKey");

	Params::BP_CharacterController_C_OnReleaseAnyKey Parms{};

	Parms.key = std::move(key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterController.BP_CharacterController_C.OnPressAnyKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKey&                      key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)

void ABP_CharacterController_C::OnPressAnyKey(const struct FKey& key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "OnPressAnyKey");

	Params::BP_CharacterController_C_OnPressAnyKey Parms{};

	Parms.key = std::move(key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterController.BP_CharacterController_C.ReceiveBeginPlay
// (Event, Public, Protected, BlueprintCallable, BlueprintEvent)

void ABP_CharacterController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterController.BP_CharacterController_C.ReceivePossess
// (Event, Public, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterController_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "ReceivePossess");

	Params::BP_CharacterController_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterController.BP_CharacterController_C.ReceiveUnPossess
// (Event, Public, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            UnpossessedPawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CharacterController_C::ReceiveUnPossess(class APawn* UnpossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterController_C", "ReceiveUnPossess");

	Params::BP_CharacterController_C_ReceiveUnPossess Parms{};

	Parms.UnpossessedPawn = UnpossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}

}

