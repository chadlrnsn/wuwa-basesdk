#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "sInputCommand_structs.hpp"
#include "SInputHoldConfig_structs.hpp"
#include "SInputCaches_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_InputBase.BP_InputBase_C.ExecuteUbergraph_BP_InputBase
// 0x0008 (0x0008 - 0x0000)
struct BP_InputBase_C_ExecuteUbergraph_BP_InputBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_ExecuteUbergraph_BP_InputBase) == 0x000004, "Wrong alignment on BP_InputBase_C_ExecuteUbergraph_BP_InputBase");
static_assert(sizeof(BP_InputBase_C_ExecuteUbergraph_BP_InputBase) == 0x000008, "Wrong size on BP_InputBase_C_ExecuteUbergraph_BP_InputBase");
static_assert(offsetof(BP_InputBase_C_ExecuteUbergraph_BP_InputBase, EntryPoint) == 0x000000, "Member 'BP_InputBase_C_ExecuteUbergraph_BP_InputBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_ExecuteUbergraph_BP_InputBase, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_InputBase_C_ExecuteUbergraph_BP_InputBase::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_InputBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_InputBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_InputBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_InputBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_InputBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_InputBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.GetUnrealCacheConfig
// 0x0010 (0x0010 - 0x0000)
struct BP_InputBase_C_GetUnrealCacheConfig final
{
public:
	int32                                         action;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCaches                          ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_GetUnrealCacheConfig) == 0x000004, "Wrong alignment on BP_InputBase_C_GetUnrealCacheConfig");
static_assert(sizeof(BP_InputBase_C_GetUnrealCacheConfig) == 0x000010, "Wrong size on BP_InputBase_C_GetUnrealCacheConfig");
static_assert(offsetof(BP_InputBase_C_GetUnrealCacheConfig, action) == 0x000000, "Member 'BP_InputBase_C_GetUnrealCacheConfig::action' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_GetUnrealCacheConfig, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_GetUnrealCacheConfig::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.GetUnrealHoldConfig
// 0x000C (0x000C - 0x0000)
struct BP_InputBase_C_GetUnrealHoldConfig final
{
public:
	int32                                         action;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputHoldConfig                      ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_GetUnrealHoldConfig) == 0x000004, "Wrong alignment on BP_InputBase_C_GetUnrealHoldConfig");
static_assert(sizeof(BP_InputBase_C_GetUnrealHoldConfig) == 0x00000C, "Wrong size on BP_InputBase_C_GetUnrealHoldConfig");
static_assert(offsetof(BP_InputBase_C_GetUnrealHoldConfig, action) == 0x000000, "Member 'BP_InputBase_C_GetUnrealHoldConfig::action' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_GetUnrealHoldConfig, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_GetUnrealHoldConfig::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.跳跃按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_跳跃按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_跳跃按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_跳跃按下事件");
static_assert(sizeof(BP_InputBase_C_跳跃按下事件) == 0x000004, "Wrong size on BP_InputBase_C_跳跃按下事件");
static_assert(offsetof(BP_InputBase_C_跳跃按下事件, time) == 0x000000, "Member 'BP_InputBase_C_跳跃按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.跳跃抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_跳跃抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_跳跃抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_跳跃抬起事件");
static_assert(sizeof(BP_InputBase_C_跳跃抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_跳跃抬起事件");
static_assert(offsetof(BP_InputBase_C_跳跃抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_跳跃抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攀爬按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_攀爬按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攀爬按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_攀爬按下事件");
static_assert(sizeof(BP_InputBase_C_攀爬按下事件) == 0x000004, "Wrong size on BP_InputBase_C_攀爬按下事件");
static_assert(offsetof(BP_InputBase_C_攀爬按下事件, time) == 0x000000, "Member 'BP_InputBase_C_攀爬按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攀爬抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_攀爬抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攀爬抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_攀爬抬起事件");
static_assert(sizeof(BP_InputBase_C_攀爬抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_攀爬抬起事件");
static_assert(offsetof(BP_InputBase_C_攀爬抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_攀爬抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.走跑切换按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_走跑切换按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_走跑切换按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_走跑切换按下事件");
static_assert(sizeof(BP_InputBase_C_走跑切换按下事件) == 0x000004, "Wrong size on BP_InputBase_C_走跑切换按下事件");
static_assert(offsetof(BP_InputBase_C_走跑切换按下事件, time) == 0x000000, "Member 'BP_InputBase_C_走跑切换按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.走跑切换抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_走跑切换抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_走跑切换抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_走跑切换抬起事件");
static_assert(sizeof(BP_InputBase_C_走跑切换抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_走跑切换抬起事件");
static_assert(offsetof(BP_InputBase_C_走跑切换抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_走跑切换抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攻击按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_攻击按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攻击按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_攻击按下事件");
static_assert(sizeof(BP_InputBase_C_攻击按下事件) == 0x000004, "Wrong size on BP_InputBase_C_攻击按下事件");
static_assert(offsetof(BP_InputBase_C_攻击按下事件, time) == 0x000000, "Member 'BP_InputBase_C_攻击按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攻击抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_攻击抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攻击抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_攻击抬起事件");
static_assert(sizeof(BP_InputBase_C_攻击抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_攻击抬起事件");
static_assert(offsetof(BP_InputBase_C_攻击抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_攻击抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.闪避按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_闪避按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_闪避按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_闪避按下事件");
static_assert(sizeof(BP_InputBase_C_闪避按下事件) == 0x000004, "Wrong size on BP_InputBase_C_闪避按下事件");
static_assert(offsetof(BP_InputBase_C_闪避按下事件, time) == 0x000000, "Member 'BP_InputBase_C_闪避按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.闪避抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_闪避抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_闪避抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_闪避抬起事件");
static_assert(sizeof(BP_InputBase_C_闪避抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_闪避抬起事件");
static_assert(offsetof(BP_InputBase_C_闪避抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_闪避抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.技能1按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_技能1按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_技能1按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_技能1按下事件");
static_assert(sizeof(BP_InputBase_C_技能1按下事件) == 0x000004, "Wrong size on BP_InputBase_C_技能1按下事件");
static_assert(offsetof(BP_InputBase_C_技能1按下事件, time) == 0x000000, "Member 'BP_InputBase_C_技能1按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.技能1抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_技能1抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_技能1抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_技能1抬起事件");
static_assert(sizeof(BP_InputBase_C_技能1抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_技能1抬起事件");
static_assert(offsetof(BP_InputBase_C_技能1抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_技能1抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象1按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_幻象1按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象1按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象1按下事件");
static_assert(sizeof(BP_InputBase_C_幻象1按下事件) == 0x000004, "Wrong size on BP_InputBase_C_幻象1按下事件");
static_assert(offsetof(BP_InputBase_C_幻象1按下事件, time) == 0x000000, "Member 'BP_InputBase_C_幻象1按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象1抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_幻象1抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象1抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象1抬起事件");
static_assert(sizeof(BP_InputBase_C_幻象1抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_幻象1抬起事件");
static_assert(offsetof(BP_InputBase_C_幻象1抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_幻象1抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.大招按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_大招按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_大招按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_大招按下事件");
static_assert(sizeof(BP_InputBase_C_大招按下事件) == 0x000004, "Wrong size on BP_InputBase_C_大招按下事件");
static_assert(offsetof(BP_InputBase_C_大招按下事件, time) == 0x000000, "Member 'BP_InputBase_C_大招按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.大招抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_大招抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_大招抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_大招抬起事件");
static_assert(sizeof(BP_InputBase_C_大招抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_大招抬起事件");
static_assert(offsetof(BP_InputBase_C_大招抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_大招抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象2按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_幻象2按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象2按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象2按下事件");
static_assert(sizeof(BP_InputBase_C_幻象2按下事件) == 0x000004, "Wrong size on BP_InputBase_C_幻象2按下事件");
static_assert(offsetof(BP_InputBase_C_幻象2按下事件, time) == 0x000000, "Member 'BP_InputBase_C_幻象2按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象2抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_幻象2抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象2抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象2抬起事件");
static_assert(sizeof(BP_InputBase_C_幻象2抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_幻象2抬起事件");
static_assert(offsetof(BP_InputBase_C_幻象2抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_幻象2抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色1按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色1按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色1按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色1按下事件");
static_assert(sizeof(BP_InputBase_C_切换角色1按下事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色1按下事件");
static_assert(offsetof(BP_InputBase_C_切换角色1按下事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色1按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色1抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色1抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色1抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色1抬起事件");
static_assert(sizeof(BP_InputBase_C_切换角色1抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色1抬起事件");
static_assert(offsetof(BP_InputBase_C_切换角色1抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色1抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色2按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色2按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色2按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色2按下事件");
static_assert(sizeof(BP_InputBase_C_切换角色2按下事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色2按下事件");
static_assert(offsetof(BP_InputBase_C_切换角色2按下事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色2按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色2抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色2抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色2抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色2抬起事件");
static_assert(sizeof(BP_InputBase_C_切换角色2抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色2抬起事件");
static_assert(offsetof(BP_InputBase_C_切换角色2抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色2抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色3按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色3按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色3按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色3按下事件");
static_assert(sizeof(BP_InputBase_C_切换角色3按下事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色3按下事件");
static_assert(offsetof(BP_InputBase_C_切换角色3按下事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色3按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色3抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_切换角色3抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色3抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色3抬起事件");
static_assert(sizeof(BP_InputBase_C_切换角色3抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_切换角色3抬起事件");
static_assert(offsetof(BP_InputBase_C_切换角色3抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_切换角色3抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.锁定目标按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_锁定目标按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_锁定目标按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_锁定目标按下事件");
static_assert(sizeof(BP_InputBase_C_锁定目标按下事件) == 0x000004, "Wrong size on BP_InputBase_C_锁定目标按下事件");
static_assert(offsetof(BP_InputBase_C_锁定目标按下事件, time) == 0x000000, "Member 'BP_InputBase_C_锁定目标按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.锁定目标抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_锁定目标抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_锁定目标抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_锁定目标抬起事件");
static_assert(sizeof(BP_InputBase_C_锁定目标抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_锁定目标抬起事件");
static_assert(offsetof(BP_InputBase_C_锁定目标抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_锁定目标抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.瞄准按下事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_瞄准按下事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_瞄准按下事件) == 0x000004, "Wrong alignment on BP_InputBase_C_瞄准按下事件");
static_assert(sizeof(BP_InputBase_C_瞄准按下事件) == 0x000004, "Wrong size on BP_InputBase_C_瞄准按下事件");
static_assert(offsetof(BP_InputBase_C_瞄准按下事件, time) == 0x000000, "Member 'BP_InputBase_C_瞄准按下事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.瞄准抬起事件
// 0x0004 (0x0004 - 0x0000)
struct BP_InputBase_C_瞄准抬起事件 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_瞄准抬起事件) == 0x000004, "Wrong alignment on BP_InputBase_C_瞄准抬起事件");
static_assert(sizeof(BP_InputBase_C_瞄准抬起事件) == 0x000004, "Wrong size on BP_InputBase_C_瞄准抬起事件");
static_assert(offsetof(BP_InputBase_C_瞄准抬起事件, time) == 0x000000, "Member 'BP_InputBase_C_瞄准抬起事件::time' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.跳跃按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_跳跃按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_跳跃按下) == 0x000004, "Wrong alignment on BP_InputBase_C_跳跃按下");
static_assert(sizeof(BP_InputBase_C_跳跃按下) == 0x000018, "Wrong size on BP_InputBase_C_跳跃按下");
static_assert(offsetof(BP_InputBase_C_跳跃按下, time) == 0x000000, "Member 'BP_InputBase_C_跳跃按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_跳跃按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_跳跃按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.跳跃抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_跳跃抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_跳跃抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_跳跃抬起");
static_assert(sizeof(BP_InputBase_C_跳跃抬起) == 0x000018, "Wrong size on BP_InputBase_C_跳跃抬起");
static_assert(offsetof(BP_InputBase_C_跳跃抬起, time) == 0x000000, "Member 'BP_InputBase_C_跳跃抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_跳跃抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_跳跃抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.跳跃长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_跳跃长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_跳跃长按) == 0x000004, "Wrong alignment on BP_InputBase_C_跳跃长按");
static_assert(sizeof(BP_InputBase_C_跳跃长按) == 0x000018, "Wrong size on BP_InputBase_C_跳跃长按");
static_assert(offsetof(BP_InputBase_C_跳跃长按, time) == 0x000000, "Member 'BP_InputBase_C_跳跃长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_跳跃长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_跳跃长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攀爬按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攀爬按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攀爬按下) == 0x000004, "Wrong alignment on BP_InputBase_C_攀爬按下");
static_assert(sizeof(BP_InputBase_C_攀爬按下) == 0x000018, "Wrong size on BP_InputBase_C_攀爬按下");
static_assert(offsetof(BP_InputBase_C_攀爬按下, time) == 0x000000, "Member 'BP_InputBase_C_攀爬按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攀爬按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攀爬按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攀爬抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攀爬抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攀爬抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_攀爬抬起");
static_assert(sizeof(BP_InputBase_C_攀爬抬起) == 0x000018, "Wrong size on BP_InputBase_C_攀爬抬起");
static_assert(offsetof(BP_InputBase_C_攀爬抬起, time) == 0x000000, "Member 'BP_InputBase_C_攀爬抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攀爬抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攀爬抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攀爬长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攀爬长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攀爬长按) == 0x000004, "Wrong alignment on BP_InputBase_C_攀爬长按");
static_assert(sizeof(BP_InputBase_C_攀爬长按) == 0x000018, "Wrong size on BP_InputBase_C_攀爬长按");
static_assert(offsetof(BP_InputBase_C_攀爬长按, time) == 0x000000, "Member 'BP_InputBase_C_攀爬长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攀爬长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攀爬长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.走跑切换按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_走跑切换按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_走跑切换按下) == 0x000004, "Wrong alignment on BP_InputBase_C_走跑切换按下");
static_assert(sizeof(BP_InputBase_C_走跑切换按下) == 0x000018, "Wrong size on BP_InputBase_C_走跑切换按下");
static_assert(offsetof(BP_InputBase_C_走跑切换按下, time) == 0x000000, "Member 'BP_InputBase_C_走跑切换按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_走跑切换按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_走跑切换按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.走跑切换抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_走跑切换抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_走跑切换抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_走跑切换抬起");
static_assert(sizeof(BP_InputBase_C_走跑切换抬起) == 0x000018, "Wrong size on BP_InputBase_C_走跑切换抬起");
static_assert(offsetof(BP_InputBase_C_走跑切换抬起, time) == 0x000000, "Member 'BP_InputBase_C_走跑切换抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_走跑切换抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_走跑切换抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.走跑切换长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_走跑切换长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_走跑切换长按) == 0x000004, "Wrong alignment on BP_InputBase_C_走跑切换长按");
static_assert(sizeof(BP_InputBase_C_走跑切换长按) == 0x000018, "Wrong size on BP_InputBase_C_走跑切换长按");
static_assert(offsetof(BP_InputBase_C_走跑切换长按, time) == 0x000000, "Member 'BP_InputBase_C_走跑切换长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_走跑切换长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_走跑切换长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攻击按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攻击按下) == 0x000004, "Wrong alignment on BP_InputBase_C_攻击按下");
static_assert(sizeof(BP_InputBase_C_攻击按下) == 0x000018, "Wrong size on BP_InputBase_C_攻击按下");
static_assert(offsetof(BP_InputBase_C_攻击按下, time) == 0x000000, "Member 'BP_InputBase_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攻击按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攻击抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攻击抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攻击抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_攻击抬起");
static_assert(sizeof(BP_InputBase_C_攻击抬起) == 0x000018, "Wrong size on BP_InputBase_C_攻击抬起");
static_assert(offsetof(BP_InputBase_C_攻击抬起, time) == 0x000000, "Member 'BP_InputBase_C_攻击抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攻击抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攻击抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.攻击长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_攻击长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_攻击长按) == 0x000004, "Wrong alignment on BP_InputBase_C_攻击长按");
static_assert(sizeof(BP_InputBase_C_攻击长按) == 0x000018, "Wrong size on BP_InputBase_C_攻击长按");
static_assert(offsetof(BP_InputBase_C_攻击长按, time) == 0x000000, "Member 'BP_InputBase_C_攻击长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_攻击长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_攻击长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.闪避按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_闪避按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_闪避按下) == 0x000004, "Wrong alignment on BP_InputBase_C_闪避按下");
static_assert(sizeof(BP_InputBase_C_闪避按下) == 0x000018, "Wrong size on BP_InputBase_C_闪避按下");
static_assert(offsetof(BP_InputBase_C_闪避按下, time) == 0x000000, "Member 'BP_InputBase_C_闪避按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_闪避按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_闪避按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.闪避抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_闪避抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_闪避抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_闪避抬起");
static_assert(sizeof(BP_InputBase_C_闪避抬起) == 0x000018, "Wrong size on BP_InputBase_C_闪避抬起");
static_assert(offsetof(BP_InputBase_C_闪避抬起, time) == 0x000000, "Member 'BP_InputBase_C_闪避抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_闪避抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_闪避抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.闪避长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_闪避长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_闪避长按) == 0x000004, "Wrong alignment on BP_InputBase_C_闪避长按");
static_assert(sizeof(BP_InputBase_C_闪避长按) == 0x000018, "Wrong size on BP_InputBase_C_闪避长按");
static_assert(offsetof(BP_InputBase_C_闪避长按, time) == 0x000000, "Member 'BP_InputBase_C_闪避长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_闪避长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_闪避长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.技能1按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_技能1按下) == 0x000004, "Wrong alignment on BP_InputBase_C_技能1按下");
static_assert(sizeof(BP_InputBase_C_技能1按下) == 0x000018, "Wrong size on BP_InputBase_C_技能1按下");
static_assert(offsetof(BP_InputBase_C_技能1按下, time) == 0x000000, "Member 'BP_InputBase_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_技能1按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.技能1抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_技能1抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_技能1抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_技能1抬起");
static_assert(sizeof(BP_InputBase_C_技能1抬起) == 0x000018, "Wrong size on BP_InputBase_C_技能1抬起");
static_assert(offsetof(BP_InputBase_C_技能1抬起, time) == 0x000000, "Member 'BP_InputBase_C_技能1抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_技能1抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_技能1抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.技能1长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_技能1长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_技能1长按) == 0x000004, "Wrong alignment on BP_InputBase_C_技能1长按");
static_assert(sizeof(BP_InputBase_C_技能1长按) == 0x000018, "Wrong size on BP_InputBase_C_技能1长按");
static_assert(offsetof(BP_InputBase_C_技能1长按, time) == 0x000000, "Member 'BP_InputBase_C_技能1长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_技能1长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_技能1长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象1按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象1按下) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象1按下");
static_assert(sizeof(BP_InputBase_C_幻象1按下) == 0x000018, "Wrong size on BP_InputBase_C_幻象1按下");
static_assert(offsetof(BP_InputBase_C_幻象1按下, time) == 0x000000, "Member 'BP_InputBase_C_幻象1按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象1按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象1按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象1抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象1抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象1抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象1抬起");
static_assert(sizeof(BP_InputBase_C_幻象1抬起) == 0x000018, "Wrong size on BP_InputBase_C_幻象1抬起");
static_assert(offsetof(BP_InputBase_C_幻象1抬起, time) == 0x000000, "Member 'BP_InputBase_C_幻象1抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象1抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象1抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象1长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象1长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象1长按) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象1长按");
static_assert(sizeof(BP_InputBase_C_幻象1长按) == 0x000018, "Wrong size on BP_InputBase_C_幻象1长按");
static_assert(offsetof(BP_InputBase_C_幻象1长按, time) == 0x000000, "Member 'BP_InputBase_C_幻象1长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象1长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象1长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.大招按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_大招按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_大招按下) == 0x000004, "Wrong alignment on BP_InputBase_C_大招按下");
static_assert(sizeof(BP_InputBase_C_大招按下) == 0x000018, "Wrong size on BP_InputBase_C_大招按下");
static_assert(offsetof(BP_InputBase_C_大招按下, time) == 0x000000, "Member 'BP_InputBase_C_大招按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_大招按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_大招按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.大招抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_大招抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_大招抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_大招抬起");
static_assert(sizeof(BP_InputBase_C_大招抬起) == 0x000018, "Wrong size on BP_InputBase_C_大招抬起");
static_assert(offsetof(BP_InputBase_C_大招抬起, time) == 0x000000, "Member 'BP_InputBase_C_大招抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_大招抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_大招抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.大招长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_大招长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_大招长按) == 0x000004, "Wrong alignment on BP_InputBase_C_大招长按");
static_assert(sizeof(BP_InputBase_C_大招长按) == 0x000018, "Wrong size on BP_InputBase_C_大招长按");
static_assert(offsetof(BP_InputBase_C_大招长按, time) == 0x000000, "Member 'BP_InputBase_C_大招长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_大招长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_大招长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象2按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象2按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象2按下) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象2按下");
static_assert(sizeof(BP_InputBase_C_幻象2按下) == 0x000018, "Wrong size on BP_InputBase_C_幻象2按下");
static_assert(offsetof(BP_InputBase_C_幻象2按下, time) == 0x000000, "Member 'BP_InputBase_C_幻象2按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象2按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象2按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象2抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象2抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象2抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象2抬起");
static_assert(sizeof(BP_InputBase_C_幻象2抬起) == 0x000018, "Wrong size on BP_InputBase_C_幻象2抬起");
static_assert(offsetof(BP_InputBase_C_幻象2抬起, time) == 0x000000, "Member 'BP_InputBase_C_幻象2抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象2抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象2抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.幻象2长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_幻象2长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_幻象2长按) == 0x000004, "Wrong alignment on BP_InputBase_C_幻象2长按");
static_assert(sizeof(BP_InputBase_C_幻象2长按) == 0x000018, "Wrong size on BP_InputBase_C_幻象2长按");
static_assert(offsetof(BP_InputBase_C_幻象2长按, time) == 0x000000, "Member 'BP_InputBase_C_幻象2长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_幻象2长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_幻象2长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色1按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色1按下) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色1按下");
static_assert(sizeof(BP_InputBase_C_切换角色1按下) == 0x000018, "Wrong size on BP_InputBase_C_切换角色1按下");
static_assert(offsetof(BP_InputBase_C_切换角色1按下, time) == 0x000000, "Member 'BP_InputBase_C_切换角色1按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色1按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色1按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色1抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色1抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色1抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色1抬起");
static_assert(sizeof(BP_InputBase_C_切换角色1抬起) == 0x000018, "Wrong size on BP_InputBase_C_切换角色1抬起");
static_assert(offsetof(BP_InputBase_C_切换角色1抬起, time) == 0x000000, "Member 'BP_InputBase_C_切换角色1抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色1抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色1抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色1长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色1长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色1长按) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色1长按");
static_assert(sizeof(BP_InputBase_C_切换角色1长按) == 0x000018, "Wrong size on BP_InputBase_C_切换角色1长按");
static_assert(offsetof(BP_InputBase_C_切换角色1长按, time) == 0x000000, "Member 'BP_InputBase_C_切换角色1长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色1长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色1长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色2按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色2按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色2按下) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色2按下");
static_assert(sizeof(BP_InputBase_C_切换角色2按下) == 0x000018, "Wrong size on BP_InputBase_C_切换角色2按下");
static_assert(offsetof(BP_InputBase_C_切换角色2按下, time) == 0x000000, "Member 'BP_InputBase_C_切换角色2按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色2按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色2按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色2抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色2抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色2抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色2抬起");
static_assert(sizeof(BP_InputBase_C_切换角色2抬起) == 0x000018, "Wrong size on BP_InputBase_C_切换角色2抬起");
static_assert(offsetof(BP_InputBase_C_切换角色2抬起, time) == 0x000000, "Member 'BP_InputBase_C_切换角色2抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色2抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色2抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色2长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色2长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色2长按) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色2长按");
static_assert(sizeof(BP_InputBase_C_切换角色2长按) == 0x000018, "Wrong size on BP_InputBase_C_切换角色2长按");
static_assert(offsetof(BP_InputBase_C_切换角色2长按, time) == 0x000000, "Member 'BP_InputBase_C_切换角色2长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色2长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色2长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色3按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色3按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色3按下) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色3按下");
static_assert(sizeof(BP_InputBase_C_切换角色3按下) == 0x000018, "Wrong size on BP_InputBase_C_切换角色3按下");
static_assert(offsetof(BP_InputBase_C_切换角色3按下, time) == 0x000000, "Member 'BP_InputBase_C_切换角色3按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色3按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色3按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色3抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色3抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色3抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色3抬起");
static_assert(sizeof(BP_InputBase_C_切换角色3抬起) == 0x000018, "Wrong size on BP_InputBase_C_切换角色3抬起");
static_assert(offsetof(BP_InputBase_C_切换角色3抬起, time) == 0x000000, "Member 'BP_InputBase_C_切换角色3抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色3抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色3抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.切换角色3长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_切换角色3长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_切换角色3长按) == 0x000004, "Wrong alignment on BP_InputBase_C_切换角色3长按");
static_assert(sizeof(BP_InputBase_C_切换角色3长按) == 0x000018, "Wrong size on BP_InputBase_C_切换角色3长按");
static_assert(offsetof(BP_InputBase_C_切换角色3长按, time) == 0x000000, "Member 'BP_InputBase_C_切换角色3长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_切换角色3长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_切换角色3长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.瞄准按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_瞄准按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_瞄准按下) == 0x000004, "Wrong alignment on BP_InputBase_C_瞄准按下");
static_assert(sizeof(BP_InputBase_C_瞄准按下) == 0x000018, "Wrong size on BP_InputBase_C_瞄准按下");
static_assert(offsetof(BP_InputBase_C_瞄准按下, time) == 0x000000, "Member 'BP_InputBase_C_瞄准按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_瞄准按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_瞄准按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.瞄准抬起
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_瞄准抬起 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_瞄准抬起) == 0x000004, "Wrong alignment on BP_InputBase_C_瞄准抬起");
static_assert(sizeof(BP_InputBase_C_瞄准抬起) == 0x000018, "Wrong size on BP_InputBase_C_瞄准抬起");
static_assert(offsetof(BP_InputBase_C_瞄准抬起, time) == 0x000000, "Member 'BP_InputBase_C_瞄准抬起::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_瞄准抬起, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_瞄准抬起::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.瞄准长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_瞄准长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_瞄准长按) == 0x000004, "Wrong alignment on BP_InputBase_C_瞄准长按");
static_assert(sizeof(BP_InputBase_C_瞄准长按) == 0x000018, "Wrong size on BP_InputBase_C_瞄准长按");
static_assert(offsetof(BP_InputBase_C_瞄准长按, time) == 0x000000, "Member 'BP_InputBase_C_瞄准长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_瞄准长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_瞄准长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.锁定目标长按
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_锁定目标长按 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_锁定目标长按) == 0x000004, "Wrong alignment on BP_InputBase_C_锁定目标长按");
static_assert(sizeof(BP_InputBase_C_锁定目标长按) == 0x000018, "Wrong size on BP_InputBase_C_锁定目标长按");
static_assert(offsetof(BP_InputBase_C_锁定目标长按, time) == 0x000000, "Member 'BP_InputBase_C_锁定目标长按::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_锁定目标长按, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_锁定目标长按::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.通用交互按下
// 0x0018 (0x0018 - 0x0000)
struct BP_InputBase_C_通用交互按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_通用交互按下) == 0x000004, "Wrong alignment on BP_InputBase_C_通用交互按下");
static_assert(sizeof(BP_InputBase_C_通用交互按下) == 0x000018, "Wrong size on BP_InputBase_C_通用交互按下");
static_assert(offsetof(BP_InputBase_C_通用交互按下, time) == 0x000000, "Member 'BP_InputBase_C_通用交互按下::time' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_通用交互按下, ReturnValue) == 0x000004, "Member 'BP_InputBase_C_通用交互按下::ReturnValue' has a wrong offset!");

// Function BP_InputBase.BP_InputBase_C.GetMoveVector
// 0x0010 (0x0010 - 0x0000)
struct BP_InputBase_C_GetMoveVector final
{
public:
	struct FVector2D                              ReturnVaule;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetMoveVector_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputBase_C_GetMoveVector) == 0x000004, "Wrong alignment on BP_InputBase_C_GetMoveVector");
static_assert(sizeof(BP_InputBase_C_GetMoveVector) == 0x000010, "Wrong size on BP_InputBase_C_GetMoveVector");
static_assert(offsetof(BP_InputBase_C_GetMoveVector, ReturnVaule) == 0x000000, "Member 'BP_InputBase_C_GetMoveVector::ReturnVaule' has a wrong offset!");
static_assert(offsetof(BP_InputBase_C_GetMoveVector, CallFunc_GetMoveVector_ReturnValue) == 0x000008, "Member 'BP_InputBase_C_GetMoveVector::CallFunc_GetMoveVector_ReturnValue' has a wrong offset!");

}

