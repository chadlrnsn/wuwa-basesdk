#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GroupFadeWithVolume

#include "Basic.hpp"

#include "BP_GroupFadeWithVolume_classes.hpp"
#include "BP_GroupFadeWithVolume_parameters.hpp"


namespace SDK
{

// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateFlickLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateFlickLight(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateFlickLight");

	Params::BP_GroupFadeWithVolume_C_UpdateFlickLight Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheFlickLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheFlickLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheFlickLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.MarkLightExcludeFromTOD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::MarkLightExcludeFromTOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "MarkLightExcludeFromTOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ComputeWeight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_GroupFadeWithVolume_C::ComputeWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "ComputeWeight");

	Params::BP_GroupFadeWithVolume_C_ComputeWeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CheckObjectPlatform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UObject*                    Object                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GroupFadeWithVolume_C::CheckObjectPlatform(const class UObject* Object, bool* valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CheckObjectPlatform");

	Params::BP_GroupFadeWithVolume_C_CheckObjectPlatform Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (valid != nullptr)
		*valid = Parms.valid;
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CheckPlatform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CheckPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CheckPlatform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateSuperFarFog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateSuperFarFog(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateSuperFarFog");

	Params::BP_GroupFadeWithVolume_C_UpdateSuperFarFog Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheSuperFarFog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheSuperFarFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheSuperFarFog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateCloud
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateCloud(float B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateCloud");

	Params::BP_GroupFadeWithVolume_C_UpdateCloud Parms{};

	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheCloud
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheCloud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheCloud");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateVolumeLightSphereFar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateVolumeLightSphereFar(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateVolumeLightSphereFar");

	Params::BP_GroupFadeWithVolume_C_UpdateVolumeLightSphereFar Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheVolumeLightSphereFar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheVolumeLightSphereFar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheVolumeLightSphereFar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateVolumeLightSphere
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   B                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateVolumeLightSphere(float B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateVolumeLightSphere");

	Params::BP_GroupFadeWithVolume_C_UpdateVolumeLightSphere Parms{};

	Parms.B = B;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheVolumeLightSphere
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheVolumeLightSphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheVolumeLightSphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UpdateLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::UpdateLight(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UpdateLight");

	Params::BP_GroupFadeWithVolume_C_UpdateLight Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheLightInstensity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheLightInstensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheLightInstensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ClearInvalid
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::ClearInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "ClearInvalid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "ReceiveTick");

	Params::BP_GroupFadeWithVolume_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.CacheIntensity
// (BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::CacheIntensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "CacheIntensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.BeforeCookForMobile
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::BeforeCookForMobile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "BeforeCookForMobile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.BeforeCookForPC
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GroupFadeWithVolume_C::BeforeCookForPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "BeforeCookForPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GroupFadeWithVolume.BP_GroupFadeWithVolume_C.ExecuteUbergraph_BP_GroupFadeWithVolume
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GroupFadeWithVolume_C::ExecuteUbergraph_BP_GroupFadeWithVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GroupFadeWithVolume_C", "ExecuteUbergraph_BP_GroupFadeWithVolume");

	Params::BP_GroupFadeWithVolume_C_ExecuteUbergraph_BP_GroupFadeWithVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

