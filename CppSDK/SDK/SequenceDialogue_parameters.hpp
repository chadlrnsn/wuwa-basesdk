#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SequenceDialogue

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SequenceDialogue_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SequenceDialogue.MovieSceneDialogueSubsystem.ShowDialogue
// 0x0030 (0x0030 - 0x0000)
struct MovieSceneDialogueSubsystem_ShowDialogue final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DialogueID;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         GuardTime;                                         // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AudioDelay;                                        // 0x0024(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AudioTransitionDuration;                           // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELanguageAudio                                LanguageType;                                      // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneDialogueSubsystem_ShowDialogue) == 0x000008, "Wrong alignment on MovieSceneDialogueSubsystem_ShowDialogue");
static_assert(sizeof(MovieSceneDialogueSubsystem_ShowDialogue) == 0x000030, "Wrong size on MovieSceneDialogueSubsystem_ShowDialogue");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, bShow) == 0x000000, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::bShow' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, DialogueID) == 0x000008, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::DialogueID' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, GuardTime) == 0x000020, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::GuardTime' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, AudioDelay) == 0x000024, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::AudioDelay' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, AudioTransitionDuration) == 0x000028, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::AudioTransitionDuration' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogue, LanguageType) == 0x00002C, "Member 'MovieSceneDialogueSubsystem_ShowDialogue::LanguageType' has a wrong offset!");

// Function SequenceDialogue.MovieSceneDialogueSubsystem.ShowDialogueAudio
// 0x0020 (0x0020 - 0x0000)
struct MovieSceneDialogueSubsystem_ShowDialogueAudio final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AudioKey;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AudioTransitionDuration;                           // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneDialogueSubsystem_ShowDialogueAudio) == 0x000008, "Wrong alignment on MovieSceneDialogueSubsystem_ShowDialogueAudio");
static_assert(sizeof(MovieSceneDialogueSubsystem_ShowDialogueAudio) == 0x000020, "Wrong size on MovieSceneDialogueSubsystem_ShowDialogueAudio");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogueAudio, bShow) == 0x000000, "Member 'MovieSceneDialogueSubsystem_ShowDialogueAudio::bShow' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogueAudio, AudioKey) == 0x000008, "Member 'MovieSceneDialogueSubsystem_ShowDialogueAudio::AudioKey' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_ShowDialogueAudio, AudioTransitionDuration) == 0x000018, "Member 'MovieSceneDialogueSubsystem_ShowDialogueAudio::AudioTransitionDuration' has a wrong offset!");

// Function SequenceDialogue.MovieSceneDialogueSubsystem.TryGetAutoTransformByOffsetTime
// 0x0040 (0x0040 - 0x0000)
struct MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime final
{
public:
	struct FTransform                             OutTrans;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         OffsetTime;                                        // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0xB];                                       // 0x0035(0x000B)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime) == 0x000010, "Wrong alignment on MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime");
static_assert(sizeof(MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime) == 0x000040, "Wrong size on MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime");
static_assert(offsetof(MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime, OutTrans) == 0x000000, "Member 'MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime::OutTrans' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime, OffsetTime) == 0x000030, "Member 'MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime::OffsetTime' has a wrong offset!");
static_assert(offsetof(MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime, ReturnValue) == 0x000034, "Member 'MovieSceneDialogueSubsystem_TryGetAutoTransformByOffsetTime::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.AddScalarParameterKey
// 0x0014 (0x0014 - 0x0000)
struct MovieSceneSeqAnimDataSection_AddScalarParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x000C(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieSceneSeqAnimDataSection_AddScalarParameterKey) == 0x000004, "Wrong alignment on MovieSceneSeqAnimDataSection_AddScalarParameterKey");
static_assert(sizeof(MovieSceneSeqAnimDataSection_AddScalarParameterKey) == 0x000014, "Wrong size on MovieSceneSeqAnimDataSection_AddScalarParameterKey");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddScalarParameterKey, InParameterName) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_AddScalarParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddScalarParameterKey, InTime) == 0x00000C, "Member 'MovieSceneSeqAnimDataSection_AddScalarParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddScalarParameterKey, InValue) == 0x000010, "Member 'MovieSceneSeqAnimDataSection_AddScalarParameterKey::InValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.AddVectorParameterKey
// 0x001C (0x001C - 0x0000)
struct MovieSceneSeqAnimDataSection_AddVectorParameterKey final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x000C(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InValue;                                           // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MovieSceneSeqAnimDataSection_AddVectorParameterKey) == 0x000004, "Wrong alignment on MovieSceneSeqAnimDataSection_AddVectorParameterKey");
static_assert(sizeof(MovieSceneSeqAnimDataSection_AddVectorParameterKey) == 0x00001C, "Wrong size on MovieSceneSeqAnimDataSection_AddVectorParameterKey");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddVectorParameterKey, InParameterName) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_AddVectorParameterKey::InParameterName' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddVectorParameterKey, InTime) == 0x00000C, "Member 'MovieSceneSeqAnimDataSection_AddVectorParameterKey::InTime' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_AddVectorParameterKey, InValue) == 0x000010, "Member 'MovieSceneSeqAnimDataSection_AddVectorParameterKey::InValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.GetScalarParameters
// 0x0060 (0x0060 - 0x0000)
struct MovieSceneSeqAnimDataSection_GetScalarParameters final
{
public:
	struct FFrameNumber                           InTime;                                            // 0x0000(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      Floats;                                            // 0x0008(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneSeqAnimDataSection_GetScalarParameters) == 0x000008, "Wrong alignment on MovieSceneSeqAnimDataSection_GetScalarParameters");
static_assert(sizeof(MovieSceneSeqAnimDataSection_GetScalarParameters) == 0x000060, "Wrong size on MovieSceneSeqAnimDataSection_GetScalarParameters");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetScalarParameters, InTime) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_GetScalarParameters::InTime' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetScalarParameters, Floats) == 0x000008, "Member 'MovieSceneSeqAnimDataSection_GetScalarParameters::Floats' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetScalarParameters, ReturnValue) == 0x000058, "Member 'MovieSceneSeqAnimDataSection_GetScalarParameters::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.GetVectorParameter
// 0x0020 (0x0020 - 0x0000)
struct MovieSceneSeqAnimDataSection_GetVectorParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           InTime;                                            // 0x000C(0x0004)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Value;                                             // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneSeqAnimDataSection_GetVectorParameter) == 0x000004, "Wrong alignment on MovieSceneSeqAnimDataSection_GetVectorParameter");
static_assert(sizeof(MovieSceneSeqAnimDataSection_GetVectorParameter) == 0x000020, "Wrong size on MovieSceneSeqAnimDataSection_GetVectorParameter");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetVectorParameter, InParameterName) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_GetVectorParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetVectorParameter, InTime) == 0x00000C, "Member 'MovieSceneSeqAnimDataSection_GetVectorParameter::InTime' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetVectorParameter, Value) == 0x000010, "Member 'MovieSceneSeqAnimDataSection_GetVectorParameter::Value' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_GetVectorParameter, ReturnValue) == 0x00001C, "Member 'MovieSceneSeqAnimDataSection_GetVectorParameter::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.RemoveCategory
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneSeqAnimDataSection_RemoveCategory final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneSeqAnimDataSection_RemoveCategory) == 0x000004, "Wrong alignment on MovieSceneSeqAnimDataSection_RemoveCategory");
static_assert(sizeof(MovieSceneSeqAnimDataSection_RemoveCategory) == 0x000010, "Wrong size on MovieSceneSeqAnimDataSection_RemoveCategory");
static_assert(offsetof(MovieSceneSeqAnimDataSection_RemoveCategory, InParameterName) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_RemoveCategory::InParameterName' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_RemoveCategory, ReturnValue) == 0x00000C, "Member 'MovieSceneSeqAnimDataSection_RemoveCategory::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.MovieSceneSeqAnimDataSection.RemoveScalarParameter
// 0x0010 (0x0010 - 0x0000)
struct MovieSceneSeqAnimDataSection_RemoveScalarParameter final
{
public:
	class FName                                   InParameterName;                                   // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MovieSceneSeqAnimDataSection_RemoveScalarParameter) == 0x000004, "Wrong alignment on MovieSceneSeqAnimDataSection_RemoveScalarParameter");
static_assert(sizeof(MovieSceneSeqAnimDataSection_RemoveScalarParameter) == 0x000010, "Wrong size on MovieSceneSeqAnimDataSection_RemoveScalarParameter");
static_assert(offsetof(MovieSceneSeqAnimDataSection_RemoveScalarParameter, InParameterName) == 0x000000, "Member 'MovieSceneSeqAnimDataSection_RemoveScalarParameter::InParameterName' has a wrong offset!");
static_assert(offsetof(MovieSceneSeqAnimDataSection_RemoveScalarParameter, ReturnValue) == 0x00000C, "Member 'MovieSceneSeqAnimDataSection_RemoveScalarParameter::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAnimDataInterface.GetAnimDataFloat
// 0x0018 (0x0018 - 0x0000)
struct SeqAnimDataInterface_GetAnimDataFloat final
{
public:
	TArray<struct FNamedCurveValue>               FloatCurveData;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeqAnimDataInterface_GetAnimDataFloat) == 0x000008, "Wrong alignment on SeqAnimDataInterface_GetAnimDataFloat");
static_assert(sizeof(SeqAnimDataInterface_GetAnimDataFloat) == 0x000018, "Wrong size on SeqAnimDataInterface_GetAnimDataFloat");
static_assert(offsetof(SeqAnimDataInterface_GetAnimDataFloat, FloatCurveData) == 0x000000, "Member 'SeqAnimDataInterface_GetAnimDataFloat::FloatCurveData' has a wrong offset!");
static_assert(offsetof(SeqAnimDataInterface_GetAnimDataFloat, ReturnValue) == 0x000010, "Member 'SeqAnimDataInterface_GetAnimDataFloat::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAnimDataInterface.GetAnimDataVector
// 0x0058 (0x0058 - 0x0000)
struct SeqAnimDataInterface_GetAnimDataVector final
{
public:
	TMap<class FName, struct FVector>             VectorCurveData;                                   // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeqAnimDataInterface_GetAnimDataVector) == 0x000008, "Wrong alignment on SeqAnimDataInterface_GetAnimDataVector");
static_assert(sizeof(SeqAnimDataInterface_GetAnimDataVector) == 0x000058, "Wrong size on SeqAnimDataInterface_GetAnimDataVector");
static_assert(offsetof(SeqAnimDataInterface_GetAnimDataVector, VectorCurveData) == 0x000000, "Member 'SeqAnimDataInterface_GetAnimDataVector::VectorCurveData' has a wrong offset!");
static_assert(offsetof(SeqAnimDataInterface_GetAnimDataVector, ReturnValue) == 0x000050, "Member 'SeqAnimDataInterface_GetAnimDataVector::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAnimDataInterface.GetSupportGroupNames
// 0x0010 (0x0010 - 0x0000)
struct SeqAnimDataInterface_GetSupportGroupNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeqAnimDataInterface_GetSupportGroupNames) == 0x000008, "Wrong alignment on SeqAnimDataInterface_GetSupportGroupNames");
static_assert(sizeof(SeqAnimDataInterface_GetSupportGroupNames) == 0x000010, "Wrong size on SeqAnimDataInterface_GetSupportGroupNames");
static_assert(offsetof(SeqAnimDataInterface_GetSupportGroupNames, ReturnValue) == 0x000000, "Member 'SeqAnimDataInterface_GetSupportGroupNames::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAnimDataInterface.SetAnimDataFloat
// 0x0018 (0x0018 - 0x0000)
struct SeqAnimDataInterface_SetAnimDataFloat final
{
public:
	TArray<struct FNamedCurveValue>               FloatCurveData;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeqAnimDataInterface_SetAnimDataFloat) == 0x000008, "Wrong alignment on SeqAnimDataInterface_SetAnimDataFloat");
static_assert(sizeof(SeqAnimDataInterface_SetAnimDataFloat) == 0x000018, "Wrong size on SeqAnimDataInterface_SetAnimDataFloat");
static_assert(offsetof(SeqAnimDataInterface_SetAnimDataFloat, FloatCurveData) == 0x000000, "Member 'SeqAnimDataInterface_SetAnimDataFloat::FloatCurveData' has a wrong offset!");
static_assert(offsetof(SeqAnimDataInterface_SetAnimDataFloat, ReturnValue) == 0x000010, "Member 'SeqAnimDataInterface_SetAnimDataFloat::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAnimDataInterface.SetAnimDataVector
// 0x0058 (0x0058 - 0x0000)
struct SeqAnimDataInterface_SetAnimDataVector final
{
public:
	TMap<class FName, struct FVector>             VectorCurveData;                                   // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeqAnimDataInterface_SetAnimDataVector) == 0x000008, "Wrong alignment on SeqAnimDataInterface_SetAnimDataVector");
static_assert(sizeof(SeqAnimDataInterface_SetAnimDataVector) == 0x000058, "Wrong size on SeqAnimDataInterface_SetAnimDataVector");
static_assert(offsetof(SeqAnimDataInterface_SetAnimDataVector, VectorCurveData) == 0x000000, "Member 'SeqAnimDataInterface_SetAnimDataVector::VectorCurveData' has a wrong offset!");
static_assert(offsetof(SeqAnimDataInterface_SetAnimDataVector, ReturnValue) == 0x000050, "Member 'SeqAnimDataInterface_SetAnimDataVector::ReturnValue' has a wrong offset!");

// Function SequenceDialogue.SeqAutoTransformInterface.BeginAutoTransform
// 0x0004 (0x0004 - 0x0000)
struct SeqAutoTransformInterface_BeginAutoTransform final
{
public:
	float                                         TimeLength;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeqAutoTransformInterface_BeginAutoTransform) == 0x000004, "Wrong alignment on SeqAutoTransformInterface_BeginAutoTransform");
static_assert(sizeof(SeqAutoTransformInterface_BeginAutoTransform) == 0x000004, "Wrong size on SeqAutoTransformInterface_BeginAutoTransform");
static_assert(offsetof(SeqAutoTransformInterface_BeginAutoTransform, TimeLength) == 0x000000, "Member 'SeqAutoTransformInterface_BeginAutoTransform::TimeLength' has a wrong offset!");

}

