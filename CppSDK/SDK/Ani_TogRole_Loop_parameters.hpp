#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ani_TogRole_Loop

#include "Basic.hpp"


namespace SDK::Params
{

// Function Ani_TogRole_Loop.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3 final
{
public:
	class AUIContainerActor*                      TogRole;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3, TogRole) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_3::TogRole' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_2::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_1::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_0 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_0");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_0");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_0, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_0::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_1 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_1) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_1");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_1) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_1");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_1, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_1::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_2
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_2 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_2) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_2");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_2) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_2");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_2, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_2::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_3
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_3 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_3) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_3");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_3) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_3");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_3, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_3::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_4
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_4 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_4) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_4");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_4) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_4");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_4, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_4::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.UiItem_ActivityTower_Core_Event_5
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_UiItem_ActivityTower_Core_Event_5 final
{
public:
	class AUIContainerActor*                      UiItem_ActivityTower_Core;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_5) == 0x000008, "Wrong alignment on SequenceDirector_C_UiItem_ActivityTower_Core_Event_5");
static_assert(sizeof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_5) == 0x000008, "Wrong size on SequenceDirector_C_UiItem_ActivityTower_Core_Event_5");
static_assert(offsetof(SequenceDirector_C_UiItem_ActivityTower_Core_Event_5, UiItem_ActivityTower_Core) == 0x000000, "Member 'SequenceDirector_C_UiItem_ActivityTower_Core_Event_5::UiItem_ActivityTower_Core' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.TogRole_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_TogRole_Event_0 final
{
public:
	class AUIContainerActor*                      TogRole;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_TogRole_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_TogRole_Event_0");
static_assert(sizeof(SequenceDirector_C_TogRole_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_TogRole_Event_0");
static_assert(offsetof(SequenceDirector_C_TogRole_Event_0, TogRole) == 0x000000, "Member 'SequenceDirector_C_TogRole_Event_0::TogRole' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.TogRole_Event_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_TogRole_Event_1 final
{
public:
	class AUIContainerActor*                      TogRole;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_TogRole_Event_1) == 0x000008, "Wrong alignment on SequenceDirector_C_TogRole_Event_1");
static_assert(sizeof(SequenceDirector_C_TogRole_Event_1) == 0x000008, "Wrong size on SequenceDirector_C_TogRole_Event_1");
static_assert(offsetof(SequenceDirector_C_TogRole_Event_1, TogRole) == 0x000000, "Member 'SequenceDirector_C_TogRole_Event_1::TogRole' has a wrong offset!");

// Function Ani_TogRole_Loop.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x0048 (0x0048 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUIContainerActor*                      K2Node_CustomEvent_TogRole;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core_5;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core_4;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core_3;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core_2;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core_1;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_UiItem_ActivityTower_Core;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUIContainerActor*                      K2Node_CustomEvent_TogRole_1;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000048, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_TogRole) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_TogRole' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core_5) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core_5' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core_4) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core_4' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core_3) == 0x000020, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core_3' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core_2) == 0x000028, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core_2' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core_1) == 0x000030, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_UiItem_ActivityTower_Core) == 0x000038, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_UiItem_ActivityTower_Core' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_TogRole_1) == 0x000040, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_TogRole_1' has a wrong offset!");

}

