#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_MO1HuojinMd00101

#include "Basic.hpp"

#include "SHitInformation_structs.hpp"


namespace SDK::Params
{

// Function AIC_MO1HuojinMd00101.AIC_MO1HuojinMd00101_C.ExecuteUbergraph_AIC_MO1HuojinMd00101
// 0x0920 (0x0920 - 0x0000)
struct AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ATsBaseCharacter_C* 角色, const struct FSHitInformation& 受击数据)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0028)(ZeroConstructor)
	TDelegate<void(bool bContent)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0028)(ZeroConstructor)
	class UBP_EventManager_C*                     CallFunc______________;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_CustomEvent___;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitInformation                       K2Node_CustomEvent_____;                           // 0x0068(0x08A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutonomousProxy_ReturnValue;            // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSkill_ReturnValue;                   // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x0913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bContent;                       // 0x0915(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_916[0x2];                                      // 0x0916(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UKuroBooleanEventBinder*                CallFunc___AIC___ReturnValue;                      // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101) == 0x000008, "Wrong alignment on AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101");
static_assert(sizeof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101) == 0x000920, "Wrong size on AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, EntryPoint) == 0x000000, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc______________) == 0x000058, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc______________' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, K2Node_CustomEvent___) == 0x000060, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::K2Node_CustomEvent___' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, K2Node_CustomEvent_____) == 0x000068, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::K2Node_CustomEvent_____' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc_IsAutonomousProxy_ReturnValue) == 0x000910, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc_IsAutonomousProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc_BeginSkill_ReturnValue) == 0x000911, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc_BeginSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000912, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc_ContainsTag_ReturnValue) == 0x000913, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc_BooleanAND_ReturnValue) == 0x000914, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, K2Node_CustomEvent_bContent) == 0x000915, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::K2Node_CustomEvent_bContent' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101, CallFunc___AIC___ReturnValue) == 0x000918, "Member 'AIC_MO1HuojinMd00101_C_ExecuteUbergraph_AIC_MO1HuojinMd00101::CallFunc___AIC___ReturnValue' has a wrong offset!");

// Function AIC_MO1HuojinMd00101.AIC_MO1HuojinMd00101_C.一次性爬塔监听
// 0x0001 (0x0001 - 0x0000)
struct AIC_MO1HuojinMd00101_C_一次性爬塔监听 final
{
public:
	bool                                          bContent;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_MO1HuojinMd00101_C_一次性爬塔监听) == 0x000001, "Wrong alignment on AIC_MO1HuojinMd00101_C_一次性爬塔监听");
static_assert(sizeof(AIC_MO1HuojinMd00101_C_一次性爬塔监听) == 0x000001, "Wrong size on AIC_MO1HuojinMd00101_C_一次性爬塔监听");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_一次性爬塔监听, bContent) == 0x000000, "Member 'AIC_MO1HuojinMd00101_C_一次性爬塔监听::bContent' has a wrong offset!");

// Function AIC_MO1HuojinMd00101.AIC_MO1HuojinMd00101_C.防御受击
// 0x08B0 (0x08B0 - 0x0000)
struct AIC_MO1HuojinMd00101_C_防御受击 final
{
public:
	class ATsBaseCharacter_C*                     角色;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSHitInformation                       受击数据;                                          // 0x0008(0x08A8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AIC_MO1HuojinMd00101_C_防御受击) == 0x000008, "Wrong alignment on AIC_MO1HuojinMd00101_C_防御受击");
static_assert(sizeof(AIC_MO1HuojinMd00101_C_防御受击) == 0x0008B0, "Wrong size on AIC_MO1HuojinMd00101_C_防御受击");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_防御受击, 角色) == 0x000000, "Member 'AIC_MO1HuojinMd00101_C_防御受击::角色' has a wrong offset!");
static_assert(offsetof(AIC_MO1HuojinMd00101_C_防御受击, 受击数据) == 0x000008, "Member 'AIC_MO1HuojinMd00101_C_防御受击::受击数据' has a wrong offset!");

}

