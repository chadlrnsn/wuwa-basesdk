#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Bulante

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "sInputCommand_structs.hpp"
#include "BP_InputComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Input_Bulante.BP_Input_Bulante_C
// 0x0028 (0x0248 - 0x0220)
class UBP_Input_Bulante_C final : public UBP_InputComponent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Input_Bulante_C;                 // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         衔接计数;                                          // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         小循环触发的条件充能值;                            // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         输出值;                                            // 0x0230(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Input_Bulante(int32 EntryPoint);
	void ReceiveBeginPlay();
	struct FSInputCommand 攻击按下(float time);
	struct FSInputCommand 攻击长按(float time);
	struct FSInputCommand 攻击抬起(float time);
	struct FSInputCommand 技能1按下(float time);
	struct FSInputCommand 技能1抬起(float time);
	struct FSInputCommand 大招按下(float time);
	struct FSInputCommand 跳跃按下(float time);
	struct FSInputCommand 闪避按下(float time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Input_Bulante_C">();
	}
	static class UBP_Input_Bulante_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Input_Bulante_C>();
	}
};
static_assert(alignof(UBP_Input_Bulante_C) == 0x000008, "Wrong alignment on UBP_Input_Bulante_C");
static_assert(sizeof(UBP_Input_Bulante_C) == 0x000248, "Wrong size on UBP_Input_Bulante_C");
static_assert(offsetof(UBP_Input_Bulante_C, UberGraphFrame_BP_Input_Bulante_C) == 0x000220, "Member 'UBP_Input_Bulante_C::UberGraphFrame_BP_Input_Bulante_C' has a wrong offset!");
static_assert(offsetof(UBP_Input_Bulante_C, 衔接计数) == 0x000228, "Member 'UBP_Input_Bulante_C::衔接计数' has a wrong offset!");
static_assert(offsetof(UBP_Input_Bulante_C, 小循环触发的条件充能值) == 0x00022C, "Member 'UBP_Input_Bulante_C::小循环触发的条件充能值' has a wrong offset!");
static_assert(offsetof(UBP_Input_Bulante_C, 输出值) == 0x000230, "Member 'UBP_Input_Bulante_C::输出值' has a wrong offset!");

}

