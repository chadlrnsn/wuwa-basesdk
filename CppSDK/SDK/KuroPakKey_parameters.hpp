#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KuroPakKey

#include "Basic.hpp"


namespace SDK::Params
{

// Function KuroPakKey.KuroPakKeyLibrary.GetUpdateInterval
// 0x0004 (0x0004 - 0x0000)
struct KuroPakKeyLibrary_GetUpdateInterval final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_GetUpdateInterval) == 0x000004, "Wrong alignment on KuroPakKeyLibrary_GetUpdateInterval");
static_assert(sizeof(KuroPakKeyLibrary_GetUpdateInterval) == 0x000004, "Wrong size on KuroPakKeyLibrary_GetUpdateInterval");
static_assert(offsetof(KuroPakKeyLibrary_GetUpdateInterval, ReturnValue) == 0x000000, "Member 'KuroPakKeyLibrary_GetUpdateInterval::ReturnValue' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.HasPendingEncryptedPaks
// 0x0001 (0x0001 - 0x0000)
struct KuroPakKeyLibrary_HasPendingEncryptedPaks final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_HasPendingEncryptedPaks) == 0x000001, "Wrong alignment on KuroPakKeyLibrary_HasPendingEncryptedPaks");
static_assert(sizeof(KuroPakKeyLibrary_HasPendingEncryptedPaks) == 0x000001, "Wrong size on KuroPakKeyLibrary_HasPendingEncryptedPaks");
static_assert(offsetof(KuroPakKeyLibrary_HasPendingEncryptedPaks, ReturnValue) == 0x000000, "Member 'KuroPakKeyLibrary_HasPendingEncryptedPaks::ReturnValue' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.LoadKeys
// 0x0030 (0x0030 - 0x0000)
struct KuroPakKeyLibrary_LoadKeys final
{
public:
	class FString                                 RSAPubKey;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FilePath;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_LoadKeys) == 0x000008, "Wrong alignment on KuroPakKeyLibrary_LoadKeys");
static_assert(sizeof(KuroPakKeyLibrary_LoadKeys) == 0x000030, "Wrong size on KuroPakKeyLibrary_LoadKeys");
static_assert(offsetof(KuroPakKeyLibrary_LoadKeys, RSAPubKey) == 0x000000, "Member 'KuroPakKeyLibrary_LoadKeys::RSAPubKey' has a wrong offset!");
static_assert(offsetof(KuroPakKeyLibrary_LoadKeys, FilePath) == 0x000010, "Member 'KuroPakKeyLibrary_LoadKeys::FilePath' has a wrong offset!");
static_assert(offsetof(KuroPakKeyLibrary_LoadKeys, Tag) == 0x000020, "Member 'KuroPakKeyLibrary_LoadKeys::Tag' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.LoadPakKeysFromFile
// 0x0010 (0x0010 - 0x0000)
struct KuroPakKeyLibrary_LoadPakKeysFromFile final
{
public:
	class FString                                 FilePath;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_LoadPakKeysFromFile) == 0x000008, "Wrong alignment on KuroPakKeyLibrary_LoadPakKeysFromFile");
static_assert(sizeof(KuroPakKeyLibrary_LoadPakKeysFromFile) == 0x000010, "Wrong size on KuroPakKeyLibrary_LoadPakKeysFromFile");
static_assert(offsetof(KuroPakKeyLibrary_LoadPakKeysFromFile, FilePath) == 0x000000, "Member 'KuroPakKeyLibrary_LoadPakKeysFromFile::FilePath' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.NeedExtPakKeys
// 0x0001 (0x0001 - 0x0000)
struct KuroPakKeyLibrary_NeedExtPakKeys final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_NeedExtPakKeys) == 0x000001, "Wrong alignment on KuroPakKeyLibrary_NeedExtPakKeys");
static_assert(sizeof(KuroPakKeyLibrary_NeedExtPakKeys) == 0x000001, "Wrong size on KuroPakKeyLibrary_NeedExtPakKeys");
static_assert(offsetof(KuroPakKeyLibrary_NeedExtPakKeys, ReturnValue) == 0x000000, "Member 'KuroPakKeyLibrary_NeedExtPakKeys::ReturnValue' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.SetCompleteCallback
// 0x0028 (0x0028 - 0x0000)
struct KuroPakKeyLibrary_SetCompleteCallback final
{
public:
	TDelegate<void(bool Success)>                 Callback;                                          // 0x0000(0x0028)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_SetCompleteCallback) == 0x000004, "Wrong alignment on KuroPakKeyLibrary_SetCompleteCallback");
static_assert(sizeof(KuroPakKeyLibrary_SetCompleteCallback) == 0x000028, "Wrong size on KuroPakKeyLibrary_SetCompleteCallback");
static_assert(offsetof(KuroPakKeyLibrary_SetCompleteCallback, Callback) == 0x000000, "Member 'KuroPakKeyLibrary_SetCompleteCallback::Callback' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.SetLoadCallback
// 0x0028 (0x0028 - 0x0000)
struct KuroPakKeyLibrary_SetLoadCallback final
{
public:
	TDelegate<void(bool Success, const class FString& Tag)> Callback;                                // 0x0000(0x0028)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_SetLoadCallback) == 0x000004, "Wrong alignment on KuroPakKeyLibrary_SetLoadCallback");
static_assert(sizeof(KuroPakKeyLibrary_SetLoadCallback) == 0x000028, "Wrong size on KuroPakKeyLibrary_SetLoadCallback");
static_assert(offsetof(KuroPakKeyLibrary_SetLoadCallback, Callback) == 0x000000, "Member 'KuroPakKeyLibrary_SetLoadCallback::Callback' has a wrong offset!");

// Function KuroPakKey.KuroPakKeyLibrary.SetRSAPublicKey
// 0x0010 (0x0010 - 0x0000)
struct KuroPakKeyLibrary_SetRSAPublicKey final
{
public:
	class FString                                 PublicKey;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KuroPakKeyLibrary_SetRSAPublicKey) == 0x000008, "Wrong alignment on KuroPakKeyLibrary_SetRSAPublicKey");
static_assert(sizeof(KuroPakKeyLibrary_SetRSAPublicKey) == 0x000010, "Wrong size on KuroPakKeyLibrary_SetRSAPublicKey");
static_assert(offsetof(KuroPakKeyLibrary_SetRSAPublicKey, PublicKey) == 0x000000, "Member 'KuroPakKeyLibrary_SetRSAPublicKey::PublicKey' has a wrong offset!");

}

