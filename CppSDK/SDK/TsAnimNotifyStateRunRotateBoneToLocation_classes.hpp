#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsAnimNotifyStateRunRotateBoneToLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsAnimNotifyStateRunRotateBoneToLocation.TsAnimNotifyStateRunRotateBoneToLocation_C
// 0x0028 (0x0070 - 0x0048)
class UTsAnimNotifyStateRunRotateBoneToLocation_C final : public UKuroAnimNotifyState
{
public:
	struct FVector2D                              TurnLimit;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              LookUpLimit;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            TurnSpeed;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            LookUpSpeed;                                       // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnOffset;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookUpOffset;                                      // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
	bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);

	class FString GetNotifyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsAnimNotifyStateRunRotateBoneToLocation_C">();
	}
	static class UTsAnimNotifyStateRunRotateBoneToLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsAnimNotifyStateRunRotateBoneToLocation_C>();
	}
};
static_assert(alignof(UTsAnimNotifyStateRunRotateBoneToLocation_C) == 0x000008, "Wrong alignment on UTsAnimNotifyStateRunRotateBoneToLocation_C");
static_assert(sizeof(UTsAnimNotifyStateRunRotateBoneToLocation_C) == 0x000070, "Wrong size on UTsAnimNotifyStateRunRotateBoneToLocation_C");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, TurnLimit) == 0x000048, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::TurnLimit' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, LookUpLimit) == 0x000050, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::LookUpLimit' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, TurnSpeed) == 0x000058, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::TurnSpeed' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, LookUpSpeed) == 0x000060, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::LookUpSpeed' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, TurnOffset) == 0x000068, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::TurnOffset' has a wrong offset!");
static_assert(offsetof(UTsAnimNotifyStateRunRotateBoneToLocation_C, LookUpOffset) == 0x00006C, "Member 'UTsAnimNotifyStateRunRotateBoneToLocation_C::LookUpOffset' has a wrong offset!");

}

