#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Jueyuan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Jueyuan.BP_Jueyuan_C.ExecuteUbergraph_BP_Jueyuan
// 0x0004 (0x0004 - 0x0000)
struct BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan) == 0x000004, "Wrong alignment on BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan");
static_assert(sizeof(BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan) == 0x000004, "Wrong size on BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan");
static_assert(offsetof(BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan, EntryPoint) == 0x000000, "Member 'BP_Jueyuan_C_ExecuteUbergraph_BP_Jueyuan::EntryPoint' has a wrong offset!");

// Function BP_Jueyuan.BP_Jueyuan_C.获取当前高度是否满足释放空中技能
// 0x0110 (0x0110 - 0x0000)
struct BP_Jueyuan_C_获取当前高度是否满足释放空中技能 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ___object_Variable;                                // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_LineTraceSingle_OutHit;                 // 0x0078(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_LineTraceSingle_ReturnValue;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能) == 0x000008, "Wrong alignment on BP_Jueyuan_C_获取当前高度是否满足释放空中技能");
static_assert(sizeof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能) == 0x000110, "Wrong size on BP_Jueyuan_C_获取当前高度是否满足释放空中技能");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, ReturnValue) == 0x000000, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_MakeVectorDouble_ReturnValue) == 0x000008, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, ___object_Variable) == 0x000020, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::___object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_D_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_D_LineTraceSingle_OutHit) == 0x000078, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_D_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_D_LineTraceSingle_ReturnValue) == 0x00010C, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_D_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_获取当前高度是否满足释放空中技能, CallFunc_Not_PreBool_ReturnValue) == 0x00010D, "Member 'BP_Jueyuan_C_获取当前高度是否满足释放空中技能::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Jueyuan.BP_Jueyuan_C.FightCommand
// 0x0020 (0x0020 - 0x0000)
struct BP_Jueyuan_C_FightCommand final
{
public:
	bool                                          isInAir;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSkillTarget_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSkillTarget_ReturnValue_1;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSkill_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginSkill_ReturnValue_1;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Jueyuan_C_FightCommand) == 0x000008, "Wrong alignment on BP_Jueyuan_C_FightCommand");
static_assert(sizeof(BP_Jueyuan_C_FightCommand) == 0x000020, "Wrong size on BP_Jueyuan_C_FightCommand");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, isInAir) == 0x000000, "Member 'BP_Jueyuan_C_FightCommand::isInAir' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, CallFunc_GetSkillTarget_ReturnValue) == 0x000008, "Member 'BP_Jueyuan_C_FightCommand::CallFunc_GetSkillTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, CallFunc_GetSkillTarget_ReturnValue_1) == 0x000010, "Member 'BP_Jueyuan_C_FightCommand::CallFunc_GetSkillTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, CallFunc_BeginSkill_ReturnValue) == 0x000018, "Member 'BP_Jueyuan_C_FightCommand::CallFunc_BeginSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, CallFunc_BeginSkill_ReturnValue_1) == 0x000019, "Member 'BP_Jueyuan_C_FightCommand::CallFunc_BeginSkill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Jueyuan_C_FightCommand, CallFunc_ContainsTag_ReturnValue) == 0x00001A, "Member 'BP_Jueyuan_C_FightCommand::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");

}

