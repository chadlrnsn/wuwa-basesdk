#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolumetricSphereLightSuperFar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C.UpdateVolumetricSphereLight
// 0x0068 (0x0068 - 0x0000)
struct BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight final
{
public:
	class UWorld*                                 CallFunc_GetWorld_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetWorldCameraLocation_OutCameraLocation; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_GetWorldCameraLocation_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_1;  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight) == 0x000008, "Wrong alignment on BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight");
static_assert(sizeof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight) == 0x000068, "Wrong size on BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_GetWorld_ReturnValue) == 0x000000, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_GetWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_D_GetWorldCameraLocation_OutCameraLocation) == 0x000008, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_D_GetWorldCameraLocation_OutCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_D_GetWorldCameraLocation_ReturnValue) == 0x000020, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_D_GetWorldCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000024, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_Conv_VectorDoubleToVector_ReturnValue_1) == 0x000050, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_Conv_VectorDoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_Vector_Distance_ReturnValue) == 0x00005C, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_VolumetricSphereLightSuperFar_C_UpdateVolumetricSphereLight::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_VolumetricSphereLightSuperFar_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_VolumetricSphereLightSuperFar_C_UserConstructionScript");
static_assert(sizeof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript) == 0x000048, "Wrong size on BP_VolumetricSphereLightSuperFar_C_UserConstructionScript");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000020, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000028, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000030, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x000038, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000040, "Member 'BP_VolumetricSphereLightSuperFar_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VolumetricSphereLightSuperFar_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumetricSphereLightSuperFar_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VolumetricSphereLightSuperFar_C_ReceiveTick");
static_assert(sizeof(BP_VolumetricSphereLightSuperFar_C_ReceiveTick) == 0x000004, "Wrong size on BP_VolumetricSphereLightSuperFar_C_ReceiveTick");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VolumetricSphereLightSuperFar_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C.EditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VolumetricSphereLightSuperFar_C_EditorTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumetricSphereLightSuperFar_C_EditorTick) == 0x000004, "Wrong alignment on BP_VolumetricSphereLightSuperFar_C_EditorTick");
static_assert(sizeof(BP_VolumetricSphereLightSuperFar_C_EditorTick) == 0x000004, "Wrong size on BP_VolumetricSphereLightSuperFar_C_EditorTick");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_EditorTick, DeltaSeconds) == 0x000000, "Member 'BP_VolumetricSphereLightSuperFar_C_EditorTick::DeltaSeconds' has a wrong offset!");

// Function BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C.ExecuteUbergraph_BP_VolumetricSphereLightSuperFar
// 0x000C (0x000C - 0x0000)
struct BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar) == 0x000004, "Wrong alignment on BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar");
static_assert(sizeof(BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar) == 0x00000C, "Wrong size on BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar, EntryPoint) == 0x000000, "Member 'BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar, K2Node_Event_DeltaSeconds_1) == 0x000004, "Member 'BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_VolumetricSphereLightSuperFar_C_ExecuteUbergraph_BP_VolumetricSphereLightSuperFar::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

