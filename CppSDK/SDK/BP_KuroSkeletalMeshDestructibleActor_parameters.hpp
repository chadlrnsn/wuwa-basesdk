#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroSkeletalMeshDestructibleActor

#include "Basic.hpp"

#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroSkeletalMeshDestructibleActor.BP_KuroSkeletalMeshDestructibleActor_C.可视化物理破碎表现参数
// 0x01E0 (0x01E0 - 0x0000)
struct BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数 final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable_1;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0010(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue_1;             // 0x0060(0x0040)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWorldSettings*                         CallFunc_GetWorldSetting_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                CallFunc_GetWorldType_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0xF];                                       // 0x00F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKuroDestructiblePieceInfo             CallFunc_Array_Get_Item;                           // 0x0100(0x0050)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_1;  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue_1;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C6[0x2];                                      // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetComponentLocation_ReturnValue;    // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数) == 0x000010, "Wrong alignment on BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数");
static_assert(sizeof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数) == 0x0001E0, "Wrong size on BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, ___int_Array_Index_Variable) == 0x000000, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, ___int_Loop_Counter_Variable) == 0x000004, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, ___int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_D_GetTransform_ReturnValue) == 0x000010, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_D_GetTransform_ReturnValue_1) == 0x000060, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_D_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000A4, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, ___int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x0000B0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_D_TransformLocation_ReturnValue) == 0x0000C8, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_D_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_GetWorldSetting_ReturnValue) == 0x0000E8, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_GetWorldSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_GetWorldType_ReturnValue) == 0x0000F0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_GetWorldType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000150, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_BreakTransform_Location) == 0x000154, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_BreakTransform_Scale) == 0x00016C, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Conv_VectorToVectorDouble_ReturnValue_1) == 0x000180, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Conv_VectorToVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_D_TransformLocation_ReturnValue_1) == 0x0001A0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_D_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_IsValid_ReturnValue) == 0x0001C4, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001C5, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数, CallFunc_D_K2_GetComponentLocation_ReturnValue) == 0x0001C8, "Member 'BP_KuroSkeletalMeshDestructibleActor_C_可视化物理破碎表现参数::CallFunc_D_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

