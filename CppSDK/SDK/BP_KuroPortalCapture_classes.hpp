#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroPortalCapture

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_KuroPortalCapture.BP_KuroPortalCapture_C
// 0x0050 (0x0300 - 0x02B0)
class ABP_KuroPortalCapture_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow1;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         offset;                                            // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableCamera;                                      // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(const struct FVector& Velocity)> RoleTeleport;                     // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         PbdataId;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hight;                                             // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_KuroPortalCapture(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Teleport(const struct FTransformDouble& InTrans, class AActor* InActor, bool IsRole);
	void SetPair(class AActor* Pair);
	void SetPbDataId(int32 PbdataId_0);
	void GetPortalTrans(struct FTransformDouble* NewParam);
	void GetPair(class ABP_KuroPortalCapture_C** Target_0);
	void ToggleDebug(bool Enable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_KuroPortalCapture_C">();
	}
	static class ABP_KuroPortalCapture_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_KuroPortalCapture_C>();
	}
};
static_assert(alignof(ABP_KuroPortalCapture_C) == 0x000008, "Wrong alignment on ABP_KuroPortalCapture_C");
static_assert(sizeof(ABP_KuroPortalCapture_C) == 0x000300, "Wrong size on ABP_KuroPortalCapture_C");
static_assert(offsetof(ABP_KuroPortalCapture_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_KuroPortalCapture_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Arrow1) == 0x0002B8, "Member 'ABP_KuroPortalCapture_C::Arrow1' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Arrow) == 0x0002C0, "Member 'ABP_KuroPortalCapture_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Plane) == 0x0002C8, "Member 'ABP_KuroPortalCapture_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Scene) == 0x0002D0, "Member 'ABP_KuroPortalCapture_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Target) == 0x0002D8, "Member 'ABP_KuroPortalCapture_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, offset) == 0x0002E0, "Member 'ABP_KuroPortalCapture_C::offset' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, EnableCamera) == 0x0002E4, "Member 'ABP_KuroPortalCapture_C::EnableCamera' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, RoleTeleport) == 0x0002E8, "Member 'ABP_KuroPortalCapture_C::RoleTeleport' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, PbdataId) == 0x0002F8, "Member 'ABP_KuroPortalCapture_C::PbdataId' has a wrong offset!");
static_assert(offsetof(ABP_KuroPortalCapture_C, Hight) == 0x0002FC, "Member 'ABP_KuroPortalCapture_C::Hight' has a wrong offset!");

}

