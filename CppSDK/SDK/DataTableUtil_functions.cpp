#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DataTableUtil

#include "Basic.hpp"

#include "DataTableUtil_classes.hpp"
#include "DataTableUtil_parameters.hpp"


namespace SDK
{

// Function DataTableUtil.DataTableUtil_C.LoadRoleQualityInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Row                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSucc                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSRoleQualityInfo*               result                                                 (Parm, OutParm, HasGetValueTypeHash)

void UDataTableUtil_C::LoadRoleQualityInfo(const class FString& Row, class UObject* __WorldContext, bool* bSucc, struct FSRoleQualityInfo* result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadRoleQualityInfo");

	Params::DataTableUtil_C_LoadRoleQualityInfo Parms{};

	Parms.Row = std::move(Row);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSucc != nullptr)
		*bSucc = Parms.bSucc;

	if (result != nullptr)
		*result = std::move(Parms.result);
}


// Function DataTableUtil.DataTableUtil_C.LoadModelConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Row                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   bSucc                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSModelConfig*                   result                                                 (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UDataTableUtil_C::LoadModelConfig(const class FString& Row, class UObject* __WorldContext, bool* bSucc, struct FSModelConfig* result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadModelConfig");

	Params::DataTableUtil_C_LoadModelConfig Parms{};

	Parms.Row = std::move(Row);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bSucc != nullptr)
		*bSucc = Parms.bSucc;

	if (result != nullptr)
		*result = std::move(Parms.result);
}


// Function DataTableUtil.DataTableUtil_C.LoadServerInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSServerInfo>*            NewParam                                               (Parm, OutParm)

void UDataTableUtil_C::LoadServerInfo(class UObject* __WorldContext, TArray<struct FSServerInfo>* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadServerInfo");

	Params::DataTableUtil_C_LoadServerInfo Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function DataTableUtil.DataTableUtil_C.LoadVisionInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    phantomId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSVisionData*                    visionConfig                                           (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool*                                   found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadVisionInfo(const class FString& phantomId, class UObject* __WorldContext, struct FSVisionData* visionConfig, bool* found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadVisionInfo");

	Params::DataTableUtil_C_LoadVisionInfo Parms{};

	Parms.phantomId = std::move(phantomId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (visionConfig != nullptr)
		*visionConfig = std::move(Parms.visionConfig);

	if (found != nullptr)
		*found = Parms.found;
}


// Function DataTableUtil.DataTableUtil_C.LoadSeqNetworksInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       inSeqNetwork                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSSequencesNetwork*              outInfo                                                (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outIsFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadSeqNetworksInfo(class UDataTable* inSeqNetwork, const class FString& inRow, class UObject* __WorldContext, struct FSSequencesNetwork* outInfo, bool* outIsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadSeqNetworksInfo");

	Params::DataTableUtil_C_LoadSeqNetworksInfo Parms{};

	Parms.inSeqNetwork = inSeqNetwork;
	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outInfo != nullptr)
		*outInfo = std::move(Parms.outInfo);

	if (outIsFound != nullptr)
		*outIsFound = Parms.outIsFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadGmOrderInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSGMOrderInfo>*           gmInfoList1                                            (Parm, OutParm)

void UDataTableUtil_C::LoadGmOrderInfo(class UObject* __WorldContext, TArray<struct FSGMOrderInfo>* gmInfoList1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadGmOrderInfo");

	Params::DataTableUtil_C_LoadGmOrderInfo Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (gmInfoList1 != nullptr)
		*gmInfoList1 = std::move(Parms.gmInfoList1);
}


// Function DataTableUtil.DataTableUtil_C.LoadConditionGroupInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSConditionGroup*                outConfig                                              (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadConditionGroupInfo(const class FString& inRow, class UObject* __WorldContext, struct FSConditionGroup* outConfig, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadConditionGroupInfo");

	Params::DataTableUtil_C_LoadConditionGroupInfo Parms{};

	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outConfig != nullptr)
		*outConfig = std::move(Parms.outConfig);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadCipherInfo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSCipherGameplay*                outConfig                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadCipherInfo(const class FString& inRow, class UObject* __WorldContext, struct FSCipherGameplay* outConfig, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadCipherInfo");

	Params::DataTableUtil_C_LoadCipherInfo Parms{};

	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outConfig != nullptr)
		*outConfig = std::move(Parms.outConfig);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadInteractionConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInteractionConfig*             ouConfig                                               (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadInteractionConfig(const class FString& inRow, class UObject* __WorldContext, struct FSInteractionConfig* ouConfig, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadInteractionConfig");

	Params::DataTableUtil_C_LoadInteractionConfig Parms{};

	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ouConfig != nullptr)
		*ouConfig = std::move(Parms.ouConfig);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadUiCameraAnimationSettings
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSUiCameraAnimationSettings      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FSUiCameraAnimationSettings UDataTableUtil_C::LoadUiCameraAnimationSettings(const class FString& RowName, class UObject* __WorldContext, bool* bFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadUiCameraAnimationSettings");

	Params::DataTableUtil_C_LoadUiCameraAnimationSettings Parms{};

	Parms.RowName = std::move(RowName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadUiCameraAnimationBlendSettings
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSUiCameraAnimationBlendSettings ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FSUiCameraAnimationBlendSettings UDataTableUtil_C::LoadUiCameraAnimationBlendSettings(const class FString& RowName, class UObject* __WorldContext, bool* bFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadUiCameraAnimationBlendSettings");

	Params::DataTableUtil_C_LoadUiCameraAnimationBlendSettings Parms{};

	Parms.RowName = std::move(RowName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadAIConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inConfigId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSAIConfig*                      Out_Row                                                (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadAIConfig(const class FString& inConfigId, class UObject* __WorldContext, struct FSAIConfig* Out_Row, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAIConfig");

	Params::DataTableUtil_C_LoadAIConfig Parms{};

	Parms.inConfigId = std::move(inConfigId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadCampConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CampNum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSCamp*                          CampInfo                                               (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadCampConfig(int32 CampNum, class UObject* __WorldContext, struct FSCamp* CampInfo, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadCampConfig");

	Params::DataTableUtil_C_LoadCampConfig Parms{};

	Parms.CampNum = CampNum;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CampInfo != nullptr)
		*CampInfo = std::move(Parms.CampInfo);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function DataTableUtil.DataTableUtil_C.LoadHitMapConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSHitMapping*                    result                                                 (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadHitMapConfig(int32 MapId, class UObject* __WorldContext, struct FSHitMapping* result, bool* found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadHitMapConfig");

	Params::DataTableUtil_C_LoadHitMapConfig Parms{};

	Parms.MapId = MapId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (result != nullptr)
		*result = std::move(Parms.result);

	if (found != nullptr)
		*found = Parms.found;
}


// Function DataTableUtil.DataTableUtil_C.GetCampNum
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Camp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECamp*                                  Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDataTableUtil_C::GetCampNum(int32 Camp, class UObject* __WorldContext, ECamp* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "GetCampNum");

	Params::DataTableUtil_C_GetCampNum Parms{};

	Parms.Camp = Camp;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function DataTableUtil.DataTableUtil_C.LoadAllCampConfigs
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSCamp>                   ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FSCamp> UDataTableUtil_C::LoadAllCampConfigs(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAllCampConfigs");

	Params::DataTableUtil_C_LoadAllCampConfigs Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadParkourConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSParkourConfig*                 输出行                                                 (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadParkourConfig(class FName RowName, class UObject* __WorldContext, struct FSParkourConfig* 输出行, bool* found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadParkourConfig");

	Params::DataTableUtil_C_LoadParkourConfig Parms{};

	Parms.RowName = RowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (输出行 != nullptr)
		*输出行 = std::move(Parms.输出行);

	if (found != nullptr)
		*found = Parms.found;
}


// Function DataTableUtil.DataTableUtil_C.LoadAllSkillMontages
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSSkillMontage>           ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FSSkillMontage> UDataTableUtil_C::LoadAllSkillMontages(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAllSkillMontages");

	Params::DataTableUtil_C_LoadAllSkillMontages Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadCharacterFightInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       CharacterFightInfo                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    CharacterResourcePath                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSCharacterFightInfo*            outInfo                                                (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outIsFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadCharacterFightInfo(class UDataTable* CharacterFightInfo, const class FString& CharacterResourcePath, class UObject* __WorldContext, struct FSCharacterFightInfo* outInfo, bool* outIsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadCharacterFightInfo");

	Params::DataTableUtil_C_LoadCharacterFightInfo Parms{};

	Parms.CharacterFightInfo = CharacterFightInfo;
	Parms.CharacterResourcePath = std::move(CharacterResourcePath);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outInfo != nullptr)
		*outInfo = std::move(Parms.outInfo);

	if (outIsFound != nullptr)
		*outIsFound = Parms.outIsFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadManipulatePrecastConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSManipulateConfig*              outConfig                                              (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadManipulatePrecastConfig(const class FString& inRow, class UObject* __WorldContext, struct FSManipulateConfig* outConfig, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadManipulatePrecastConfig");

	Params::DataTableUtil_C_LoadManipulatePrecastConfig Parms{};

	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outConfig != nullptr)
		*outConfig = std::move(Parms.outConfig);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadManipulateItemConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSManipulateConfig*              outConfig                                              (Parm, OutParm, HasGetValueTypeHash)
// bool*                                   outFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDataTableUtil_C::LoadManipulateItemConfig(const class FString& inRow, class UObject* __WorldContext, struct FSManipulateConfig* outConfig, bool* outFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadManipulateItemConfig");

	Params::DataTableUtil_C_LoadManipulateItemConfig Parms{};

	Parms.inRow = std::move(inRow);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (outConfig != nullptr)
		*outConfig = std::move(Parms.outConfig);

	if (outFound != nullptr)
		*outFound = Parms.outFound;
}


// Function DataTableUtil.DataTableUtil_C.LoadSceneDecorationConfig
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSSceneDecorationConfig          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FSSceneDecorationConfig UDataTableUtil_C::LoadSceneDecorationConfig(const class FString& RowName, class UObject* __WorldContext, bool* bFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadSceneDecorationConfig");

	Params::DataTableUtil_C_LoadSceneDecorationConfig Parms{};

	Parms.RowName = std::move(RowName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadSceneUITagConfig
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSSceneUITagConfig               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
// bool*                                   bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

struct FSSceneUITagConfig UDataTableUtil_C::LoadSceneUITagConfig(const class FString& RowName, class UObject* __WorldContext, bool* bFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadSceneUITagConfig");

	Params::DataTableUtil_C_LoadSceneUITagConfig Parms{};

	Parms.RowName = std::move(RowName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	return Parms.ReturnValue;
}


// Function DataTableUtil.DataTableUtil_C.LoadAllAiWeaponSockets
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, struct FSAiWeaponSocket>*   Sockets                                                (Parm, OutParm)

void UDataTableUtil_C::LoadAllAiWeaponSockets(class UObject* __WorldContext, TMap<int32, struct FSAiWeaponSocket>* Sockets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAllAiWeaponSockets");

	Params::DataTableUtil_C_LoadAllAiWeaponSockets Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Sockets != nullptr)
		*Sockets = std::move(Parms.Sockets);
}


// Function DataTableUtil.DataTableUtil_C.LoadAiWeaponSocket
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSAiWeaponSocket*                Out_Row                                                (Parm, OutParm, HasGetValueTypeHash)

void UDataTableUtil_C::LoadAiWeaponSocket(class FName RowName, class UObject* __WorldContext, struct FSAiWeaponSocket* Out_Row)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAiWeaponSocket");

	Params::DataTableUtil_C_LoadAiWeaponSocket Parms{};

	Parms.RowName = RowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_Row != nullptr)
		*Out_Row = std::move(Parms.Out_Row);
}


// Function DataTableUtil.DataTableUtil_C.LoadAiWeaponSocketConfigs
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32&                            Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSWeaponSocketItem*              Weapon                                                 (Parm, OutParm, HasGetValueTypeHash)

void UDataTableUtil_C::LoadAiWeaponSocketConfigs(class FName RowName, const int32& Key, class UObject* __WorldContext, struct FSWeaponSocketItem* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "LoadAiWeaponSocketConfigs");

	Params::DataTableUtil_C_LoadAiWeaponSocketConfigs Parms{};

	Parms.RowName = RowName;
	Parms.Key = Key;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Weapon != nullptr)
		*Weapon = std::move(Parms.Weapon);
}


// Function DataTableUtil.DataTableUtil_C.GetDataTableOnEditor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    path                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable**                      Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDataTableUtil_C::GetDataTableOnEditor(const class FString& path, class UObject* __WorldContext, class UDataTable** Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DataTableUtil_C", "GetDataTableOnEditor");

	Params::DataTableUtil_C_GetDataTableOnEditor Parms{};

	Parms.path = std::move(path);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

