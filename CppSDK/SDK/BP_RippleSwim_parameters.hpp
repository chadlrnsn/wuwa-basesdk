#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RippleSwim

#include "Basic.hpp"

#include "KuroInteractionEffect_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_RippleSwim.BP_RippleSwim_C.ExecuteUbergraph_BP_RippleSwim
// 0x0EF0 (0x0EF0 - 0x0000)
struct BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_ImpactPoint_3;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              K2Node_CustomEvent_Config_3;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_OriginPoint_3;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Id_3;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameQualitySettingLevel_ReturnValue;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Choose_Available_Point_AvailblePoint;     // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentPlatformPC_ReturnValue;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInWater_ReturnValue;                   // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_153[0x5];                                      // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTexCoord_TexCoord;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTexCoord_TexCoord_1;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_D_Conv_FloatToString_ReturnValue;         // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue;         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_1;                     // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_ImpactPoint_2;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              K2Node_CustomEvent_Config_2;                       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_OriginPoint_2;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Id_2;                           // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Choose_Available_Point_AvailblePoint_1;   // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetPointsV3_Vaild;                        // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPointsV3_P_0;                          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPointsV3_P_1;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPointsV3_P_2;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPointsV3_P_3;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_CatmullRomPoints_CurveList;               // 0x0320(0x0010)(ReferenceParm)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_2;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_3;         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_6;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_2;      // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_2;                   // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EA[0x2];                                      // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance;                  // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_4;         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_1;       // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43D[0x3];                                      // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance_1;                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_5;         // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetBpEventManager_ReturnValue;            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventManager_C*                     K2Node_DynamicCast_AsBP_Event_Manager;             // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          K2Node_CustomEvent_ImpactPoint_1;                  // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              K2Node_CustomEvent_Config_1;                       // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_OriginPoint_1;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Id_1;                           // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Choose_Available_Point_AvailblePoint_2;   // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_1;                 // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          K2Node_CustomEvent_ImpactPoint;                    // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              K2Node_CustomEvent_Config;                         // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          K2Node_CustomEvent_OriginPoint;                    // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Id;                             // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Choose_Available_Point_AvailblePoint_3;   // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_2;                    // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_2;                    // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_2;                    // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_1;                       // 0x0555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_556[0x2];                                      // 0x0556(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_7;         // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_3;      // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_3;                   // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X_3;                    // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_3;                    // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_3;                    // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue;        // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_8;         // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_4;      // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_2;       // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue_4;                   // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D3[0x1];                                      // 0x05D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x05E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_6;         // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x05F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Add_FloatFloat_ReturnValue;             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0620(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x062C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance_2;                // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_2;                 // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_662[0x6];                                      // 0x0662(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_7;         // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_8;         // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_2;                       // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance_3;                // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_9;         // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_CatmullRomPointsFromLists_CurveList;      // 0x06A0(0x0010)(ReferenceParm)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_5;      // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_4;                    // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_4;                    // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_4;                    // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_2;           // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_9;         // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_10;        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord_1;                // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_3;           // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0740(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755[0x3];                                      // 0x0755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FVectorDouble& ImpactPoint, class UBP_SceneBattleInteract_C* Config, const struct FVectorDouble& OriginPoint, int32 Id)> K2Node_CreateDelegate_OutputDelegate; // 0x0758(0x0028)(ZeroConstructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Compare_New_Point_Weapon_2_Vaild;         // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_3;       // 0x0785(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_New_Point_Weapon_2_Vaild_1;       // 0x0786(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_New_Point_Weapon_2_Vaild_2;       // 0x0787(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_New_Point_Weapon_0_Vaild;         // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Compare_New_Point_Weapon_1_Vaild;         // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A[0x2];                                      // 0x078A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_1;                                 // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_11;        // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorFloat_ReturnValue;            // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_2;                                 // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_12;        // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Add_FloatFloat_ReturnValue_1;           // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x07E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_1;         // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x07FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x0808(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0818(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0824(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_825[0x3];                                      // 0x0825(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable_3;                                 // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_10;        // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0850(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x0858(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0869(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x086A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x086B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance_4;                // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_11;        // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKuroEnviInteractionComponent*          CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0888(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKuroEnviInteractionData               CallFunc_GetEnviInteractionData_ReturnValue;       // 0x0898(0x0080)(NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable;                                // 0x0920(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931[0x3];                                      // 0x0931(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CheckAndSetPos_LastRippleTime;            // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93A[0x6];                                      // 0x093A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_5;                   // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_13;        // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991[0x7];                                      // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_14;        // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_4;           // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_AddActorWorldOffset_SweepHitResult;  // 0x09B8(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_A4C[0x4];                                      // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetComponentLocation_ReturnValue;    // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_15;        // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_5;           // 0x0A80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A98[0x8];                                      // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ___struct_Variable;                                // 0x0AA0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0AD0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_4;                   // 0x0AE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AF9[0x3];                                      // 0x0AF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0AFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0B04(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0B0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B14[0x4];                                      // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_12;        // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_6;      // 0x0B20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_6;                   // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3A[0x2];                                      // 0x0B3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x0B3C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_4;       // 0x0B44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B45[0x3];                                      // 0x0B45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_13;        // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0B50(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_7;      // 0x0B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x0B70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B81[0x3];                                      // 0x0B81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0B84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5; // 0x0B90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_5;     // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA1[0x3];                                      // 0x0BA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0BA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB1[0x3];                                      // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC1[0x3];                                      // 0x0BC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0BC4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCC[0x4];                                      // 0x0BCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_6; // 0x0BD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_6;     // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE2[0x2];                                      // 0x0BE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_5;            // 0x0BE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0BF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0C00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x0C0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_4;     // 0x0C14(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0C1C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0C24(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_7;                        // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_7;                        // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_16;        // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_17;        // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_6;           // 0x0C48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x0C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_6;            // 0x0C78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_5;       // 0x0C84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C85[0x3];                                      // 0x0C85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0C88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0C98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0CA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA5[0x3];                                      // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0CB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0CB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0CB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB6[0x2];                                      // 0x0CB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_GetCharacterGravityDirect_ReturnValue;    // 0x0CB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Multiply_VectorFloat_ReturnValue;       // 0x0CD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Multiply_VectorFloat_ReturnValue_1;     // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_14;        // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_8;      // 0x0D08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue;      // 0x0D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue_1;         // 0x0D38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_LineTraceSingle_OutHit;                 // 0x0D50(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_LineTraceSingle_ReturnValue;            // 0x0DE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0DE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0DE6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE7[0x1];                                      // 0x0DE7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0DF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0DFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0E08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0E14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0E20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0E30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0E38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0E4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0E58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0E64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7C[0x4];                                      // 0x0E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_15;        // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8C[0x4];                                      // 0x0E8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_5;        // 0x0E90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9C[0x4];                                      // 0x0E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_7; // 0x0EA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_7;     // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB1[0x3];                                      // 0x0EB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_8; // 0x0EB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_8;     // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0EC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ECA[0x2];                                      // 0x0ECA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable_4;                                 // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0ED0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED1[0x3];                                      // 0x0ED1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_5;         // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0ED9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EDA[0x2];                                      // 0x0EDA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0EDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0EE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim) == 0x000010, "Wrong alignment on BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim");
static_assert(sizeof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim) == 0x000EF0, "Wrong size on BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, EntryPoint) == 0x000000, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000018, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetGameUserSettings_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_ImpactPoint_3) == 0x000040, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Config_3) == 0x000058, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Config_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_OriginPoint_3) == 0x000060, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_OriginPoint_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Id_3) == 0x000078, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Id_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetGameQualitySettingLevel_ReturnValue) == 0x00007C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetGameQualitySettingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Choose_Available_Point_AvailblePoint) == 0x000080, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Choose_Available_Point_AvailblePoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0000A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue) == 0x0000C0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C1, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsCurrentPlatformPC_ReturnValue) == 0x0000C2, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsCurrentPlatformPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x0000C8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0000D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0000E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0000F0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000100, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Array_Index_Variable) == 0x000104, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToString_ReturnValue) == 0x000108, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_StringToName_ReturnValue) == 0x000128, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue) == 0x000134, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000140, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_DynamicCast_AsTs_Base_Character) == 0x000148, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_SwitchInteger_CmpSuccess) == 0x000151, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetInWater_ReturnValue) == 0x000152, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000158, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000160, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcTexCoord_TexCoord) == 0x000168, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcTexCoord_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_X) == 0x000174, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Y) == 0x000178, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Z) == 0x00017C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVector2D_ReturnValue) == 0x000180, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcTexCoord_TexCoord_1) == 0x000188, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcTexCoord_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_Event_DeltaSeconds) == 0x000194, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_VectorToString_ReturnValue) == 0x000198, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001B0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001C0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Y_1) == 0x0001D4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Z_1) == 0x0001D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001DC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Conv_FloatToString_ReturnValue) == 0x0001E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue) == 0x000208, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Array_Index_Variable_1) == 0x00020C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000210, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000220, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_ImpactPoint_2) == 0x000230, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Config_2) == 0x000248, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Config_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_OriginPoint_2) == 0x000250, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_OriginPoint_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Id_2) == 0x000268, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Id_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00026C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Choose_Available_Point_AvailblePoint_1) == 0x000278, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Choose_Available_Point_AvailblePoint_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000290, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_X) == 0x0002A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Y) == 0x0002A8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Z) == 0x0002B0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue) == 0x0002B8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Add_ReturnValue) == 0x0002D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002D4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue) == 0x0002D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002E0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Max_ReturnValue) == 0x0002E4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_1) == 0x0002E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_IntInt_ReturnValue) == 0x0002EC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPointsV3_Vaild) == 0x0002ED, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPointsV3_Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPointsV3_P_0) == 0x0002F0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPointsV3_P_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPointsV3_P_1) == 0x0002F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPointsV3_P_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPointsV3_P_2) == 0x000300, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPointsV3_P_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPointsV3_P_3) == 0x000308, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPointsV3_P_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000310, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000318, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CatmullRomPoints_CurveList) == 0x000320, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CatmullRomPoints_CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000330, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Get_Item) == 0x000348, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_X_1) == 0x000350, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Y_1) == 0x000358, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Z_1) == 0x000360, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X) == 0x000368, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y) == 0x00036C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_2) == 0x000370, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_2) == 0x000378, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_3) == 0x000380, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x000388, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_1) == 0x0003A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_2) == 0x0003A1, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_6) == 0x0003A8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_2) == 0x0003B0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcTexCoord2D_TexCoord) == 0x0003C8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcTexCoord2D_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_1) == 0x0003D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_1) == 0x0003D4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_MakeStruct_LinearColor) == 0x0003D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_2) == 0x0003E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_3) == 0x0003E9, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_3) == 0x0003EC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0003F0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_4) == 0x0003F4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0003F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Loop_Counter_Variable) == 0x0003FC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_5) == 0x000400, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000404, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_IntInt_ReturnValue_1) == 0x000408, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcDistance2D_Distance) == 0x000410, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcDistance2D_Distance' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000418, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue) == 0x00041C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_Has_Been_Initd_Variable) == 0x000420, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_6) == 0x000424, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000428, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_IsClosed_Variable) == 0x000429, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_4) == 0x000430, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_7) == 0x000438, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue_1) == 0x00043C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000440, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000444, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcDistance2D_Distance_1) == 0x000448, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcDistance2D_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Loop_Counter_Variable_1) == 0x000450, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_5) == 0x000458, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_1) == 0x000460, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetBpEventManager_ReturnValue) == 0x000468, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetBpEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_DynamicCast_AsBP_Event_Manager) == 0x000470, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_DynamicCast_AsBP_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_DynamicCast_bSuccess_1) == 0x000478, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_ImpactPoint_1) == 0x000480, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Config_1) == 0x000498, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Config_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_OriginPoint_1) == 0x0004A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_OriginPoint_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Id_1) == 0x0004B8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Id_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Choose_Available_Point_AvailblePoint_2) == 0x0004C0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Choose_Available_Point_AvailblePoint_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_SwitchInteger_CmpSuccess_1) == 0x0004D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_Has_Been_Initd_Variable_1) == 0x0004D9, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_SwitchInteger_CmpSuccess_2) == 0x0004DA, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_ImpactPoint) == 0x0004E0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Config) == 0x0004F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Config' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_OriginPoint) == 0x000500, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CustomEvent_Id) == 0x000518, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CustomEvent_Id' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Choose_Available_Point_AvailblePoint_3) == 0x000520, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Choose_Available_Point_AvailblePoint_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_X_2) == 0x000538, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Y_2) == 0x000540, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Z_2) == 0x000548, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Z_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Add_ReturnValue_1) == 0x000550, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000554, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_IsClosed_Variable_1) == 0x000555, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000558, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_7) == 0x000560, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_3) == 0x000568, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_3) == 0x000580, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_X_3) == 0x000588, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_X_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Y_3) == 0x000590, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Y_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Z_3) == 0x000598, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Z_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_4) == 0x0005A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Subtract_FloatFloat_ReturnValue) == 0x0005A8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_8) == 0x0005B0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_4) == 0x0005B8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue_2) == 0x0005D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_4) == 0x0005D1, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_5) == 0x0005D2, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Variable) == 0x0005D4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0005D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0005E0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_6) == 0x0005F0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0005F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Add_FloatFloat_ReturnValue) == 0x000608, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000610, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x00061C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000620, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_MakeStruct_LinearColor_1) == 0x00062C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00063C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_2) == 0x000640, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_8) == 0x000644, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_9) == 0x000648, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00064C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000650, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcDistance2D_Distance_2) == 0x000658, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcDistance2D_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000660, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_Has_Been_Initd_Variable_2) == 0x000661, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_7) == 0x000668, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_10) == 0x000670, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_8) == 0x000678, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000680, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___bool_IsClosed_Variable_2) == 0x000684, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcDistance2D_Distance_3) == 0x000688, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcDistance2D_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000690, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_9) == 0x000698, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CatmullRomPointsFromLists_CurveList) == 0x0006A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CatmullRomPointsFromLists_CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_5) == 0x0006B0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Get_Item_1) == 0x0006C8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_X_4) == 0x0006D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_X_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Y_4) == 0x0006D8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Y_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVectorDouble_Z_4) == 0x0006E0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVectorDouble_Z_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_2) == 0x0006E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_2) == 0x0006EC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_2) == 0x0006F0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_9) == 0x000708, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_10) == 0x000710, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcTexCoord2D_TexCoord_1) == 0x000718, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcTexCoord2D_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_3) == 0x000720, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_3) == 0x000738, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_3) == 0x00073C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_MakeStruct_LinearColor_2) == 0x000740, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Length_ReturnValue_11) == 0x000750, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_IntInt_ReturnValue_2) == 0x000754, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_CreateDelegate_OutputDelegate) == 0x000758, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000780, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Compare_New_Point_Weapon_2_Vaild) == 0x000784, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Compare_New_Point_Weapon_2_Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue_3) == 0x000785, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Compare_New_Point_Weapon_2_Vaild_1) == 0x000786, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Compare_New_Point_Weapon_2_Vaild_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Compare_New_Point_Weapon_2_Vaild_2) == 0x000787, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Compare_New_Point_Weapon_2_Vaild_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Compare_New_Point_Weapon_0_Vaild) == 0x000788, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Compare_New_Point_Weapon_0_Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Compare_New_Point_Weapon_1_Vaild) == 0x000789, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Compare_New_Point_Weapon_1_Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Variable_1) == 0x00078C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x000790, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000794, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_11) == 0x000798, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Add_VectorFloat_ReturnValue) == 0x0007A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0007B8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_3) == 0x0007BC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Variable_2) == 0x0007C0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0007C4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_12) == 0x0007C8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0007D0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Add_FloatFloat_ReturnValue_1) == 0x0007E0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0007E8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_DoubleToFloat_ReturnValue_1) == 0x0007F8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_DoubleToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_StringToName_ReturnValue_3) == 0x0007FC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_MakeStruct_LinearColor_3) == 0x000808, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000818, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000824, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_4) == 0x000828, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Variable_3) == 0x00082C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000830, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_5) == 0x000834, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_4) == 0x000838, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_10) == 0x000848, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000850, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000858, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000868, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000869, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_6) == 0x00086A, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue) == 0x00086B, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CalcDistance2D_Distance_4) == 0x000870, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CalcDistance2D_Distance_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_7) == 0x000878, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_FloatFloat_ReturnValue) == 0x000879, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_11) == 0x000880, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000888, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsValid_ReturnValue_1) == 0x000890, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetEnviInteractionData_ReturnValue) == 0x000898, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetEnviInteractionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Abs_ReturnValue) == 0x000918, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___object_Variable) == 0x000920, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___object_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000930, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CheckAndSetPos_LastRippleTime) == 0x000934, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CheckAndSetPos_LastRippleTime' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_8) == 0x000938, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000939, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000940, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000948, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000950, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000958, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000960, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000968, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000970, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_4) == 0x000978, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_4) == 0x00097C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_5) == 0x000980, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_13) == 0x000988, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_9) == 0x000990, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_14) == 0x000998, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_4) == 0x0009A0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_AddActorWorldOffset_SweepHitResult) == 0x0009B8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetComponentLocation_ReturnValue) == 0x000A50, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000A68, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_15) == 0x000A70, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_5) == 0x000A78, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_5) == 0x000A7C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_5) == 0x000A80, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___struct_Variable) == 0x000AA0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_AddComponent_ReturnValue) == 0x000AD0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_6) == 0x000AD8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_6) == 0x000ADC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, K2Node_MakeStruct_LinearColor_4) == 0x000AE0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::K2Node_MakeStruct_LinearColor_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_VSize2D_ReturnValue) == 0x000AF0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000AF4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000AF8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Normal2D_ReturnValue) == 0x000AFC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000B04, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000B0C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_12) == 0x000B18, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_6) == 0x000B20, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_IsEditor_ReturnValue_6) == 0x000B38, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_IsEditor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_10) == 0x000B39, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x000B3C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue_4) == 0x000B44, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_13) == 0x000B48, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000B50, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_7) == 0x000B58, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000B70, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000B80, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000B84, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_5) == 0x000B90, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_5) == 0x000BA0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000BA4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue_1) == 0x000BB0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_X_2) == 0x000BB4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Y_2) == 0x000BB8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector_Z_2) == 0x000BBC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_11) == 0x000BC0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVector2D_ReturnValue_2) == 0x000BC4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_6) == 0x000BD0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_6) == 0x000BE0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue_2) == 0x000BE1, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_5) == 0x000BE4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000BF0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000C00, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x000C0C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DFloat_ReturnValue_4) == 0x000C14, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000C1C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000C24, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_X_7) == 0x000C2C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakVector2D_Y_7) == 0x000C30, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_16) == 0x000C38, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_FloatToDouble_ReturnValue_17) == 0x000C40, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_FloatToDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeVectorDouble_ReturnValue_6) == 0x000C48, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeVectorDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Add_VectorVector_ReturnValue) == 0x000C60, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_MakeLiteralName_ReturnValue_6) == 0x000C78, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_MakeLiteralName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Greater_FloatFloat_ReturnValue_5) == 0x000C84, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000C88, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000C98, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000CA4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Vector_Distance2D_ReturnValue) == 0x000CA8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x000CAC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000CB0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000CB1, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_12) == 0x000CB2, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_13) == 0x000CB3, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue_3) == 0x000CB4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue_4) == 0x000CB5, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetCharacterGravityDirect_ReturnValue) == 0x000CB8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetCharacterGravityDirect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Multiply_VectorFloat_ReturnValue) == 0x000CD0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Multiply_VectorFloat_ReturnValue_1) == 0x000CE8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_14) == 0x000D00, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_K2_GetActorLocation_ReturnValue_8) == 0x000D08, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Subtract_VectorVector_ReturnValue) == 0x000D20, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_Add_VectorVector_ReturnValue_1) == 0x000D38, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_LineTraceSingle_OutHit) == 0x000D50, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_D_LineTraceSingle_ReturnValue) == 0x000DE4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_D_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_bBlockingHit) == 0x000DE5, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_bInitialOverlap) == 0x000DE6, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_Time) == 0x000DE8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_Distance) == 0x000DEC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_Location) == 0x000DF0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_ImpactPoint) == 0x000DFC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_Normal) == 0x000E08, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_ImpactNormal) == 0x000E14, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_PhysMat) == 0x000E20, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_HitActor) == 0x000E28, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_HitComponent) == 0x000E30, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_HitBoneName) == 0x000E38, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_HitItem) == 0x000E44, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_FaceIndex) == 0x000E48, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_TraceStart) == 0x000E4C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BreakHitResult_TraceEnd) == 0x000E58, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000E64, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000E68, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000E6C, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_FClamp_ReturnValue) == 0x000E70, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000E74, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000E78, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetPlayerCharacter_ReturnValue_15) == 0x000E80, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetPlayerCharacter_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000E88, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_GetComponentByClass_ReturnValue_5) == 0x000E90, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_GetComponentByClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_FClamp_ReturnValue_1) == 0x000E98, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_7) == 0x000EA0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_7) == 0x000EB0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000EB4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_self_CastInput_8) == 0x000EB8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_self_CastInput_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_HasMatchingGameplayTag_ReturnValue_8) == 0x000EC8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_HasMatchingGameplayTag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanOR_ReturnValue_5) == 0x000EC9, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, ___int_Variable_4) == 0x000ECC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::___int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_BooleanAND_ReturnValue_14) == 0x000ED0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_Add_ReturnValue_2) == 0x000ED4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Array_IsValidIndex_ReturnValue_5) == 0x000ED8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Array_IsValidIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000ED9, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_IntInt_ReturnValue_6) == 0x000EDC, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000EE0, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000EE4, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000EE8, "Member 'BP_RippleSwim_C_ExecuteUbergraph_BP_RippleSwim::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.TestHitEvent
// 0x0040 (0x0040 - 0x0000)
struct BP_RippleSwim_C_TestHitEvent final
{
public:
	struct FVectorDouble                          ImpactPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          OriginPoint;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_TestHitEvent) == 0x000008, "Wrong alignment on BP_RippleSwim_C_TestHitEvent");
static_assert(sizeof(BP_RippleSwim_C_TestHitEvent) == 0x000040, "Wrong size on BP_RippleSwim_C_TestHitEvent");
static_assert(offsetof(BP_RippleSwim_C_TestHitEvent, ImpactPoint) == 0x000000, "Member 'BP_RippleSwim_C_TestHitEvent::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TestHitEvent, Config) == 0x000018, "Member 'BP_RippleSwim_C_TestHitEvent::Config' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TestHitEvent, OriginPoint) == 0x000020, "Member 'BP_RippleSwim_C_TestHitEvent::OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TestHitEvent, Id) == 0x000038, "Member 'BP_RippleSwim_C_TestHitEvent::Id' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.OnBulletHitPos
// 0x0040 (0x0040 - 0x0000)
struct BP_RippleSwim_C_OnBulletHitPos final
{
public:
	struct FVectorDouble                          ImpactPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          OriginPoint;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_OnBulletHitPos) == 0x000008, "Wrong alignment on BP_RippleSwim_C_OnBulletHitPos");
static_assert(sizeof(BP_RippleSwim_C_OnBulletHitPos) == 0x000040, "Wrong size on BP_RippleSwim_C_OnBulletHitPos");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitPos, ImpactPoint) == 0x000000, "Member 'BP_RippleSwim_C_OnBulletHitPos::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitPos, Config) == 0x000018, "Member 'BP_RippleSwim_C_OnBulletHitPos::Config' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitPos, OriginPoint) == 0x000020, "Member 'BP_RippleSwim_C_OnBulletHitPos::OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitPos, Id) == 0x000038, "Member 'BP_RippleSwim_C_OnBulletHitPos::Id' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.BulletHitPos
// 0x0040 (0x0040 - 0x0000)
struct BP_RippleSwim_C_BulletHitPos final
{
public:
	struct FVectorDouble                          ImpactPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          OriginPoint;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_BulletHitPos) == 0x000008, "Wrong alignment on BP_RippleSwim_C_BulletHitPos");
static_assert(sizeof(BP_RippleSwim_C_BulletHitPos) == 0x000040, "Wrong size on BP_RippleSwim_C_BulletHitPos");
static_assert(offsetof(BP_RippleSwim_C_BulletHitPos, ImpactPoint) == 0x000000, "Member 'BP_RippleSwim_C_BulletHitPos::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_BulletHitPos, Config) == 0x000018, "Member 'BP_RippleSwim_C_BulletHitPos::Config' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_BulletHitPos, OriginPoint) == 0x000020, "Member 'BP_RippleSwim_C_BulletHitPos::OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_BulletHitPos, Id) == 0x000038, "Member 'BP_RippleSwim_C_BulletHitPos::Id' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.OnBulletHitWater
// 0x0040 (0x0040 - 0x0000)
struct BP_RippleSwim_C_OnBulletHitWater final
{
public:
	struct FVectorDouble                          ImpactPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          OriginPoint;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Id;                                                // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_OnBulletHitWater) == 0x000008, "Wrong alignment on BP_RippleSwim_C_OnBulletHitWater");
static_assert(sizeof(BP_RippleSwim_C_OnBulletHitWater) == 0x000040, "Wrong size on BP_RippleSwim_C_OnBulletHitWater");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitWater, ImpactPoint) == 0x000000, "Member 'BP_RippleSwim_C_OnBulletHitWater::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitWater, Config) == 0x000018, "Member 'BP_RippleSwim_C_OnBulletHitWater::Config' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitWater, OriginPoint) == 0x000020, "Member 'BP_RippleSwim_C_OnBulletHitWater::OriginPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_OnBulletHitWater, Id) == 0x000038, "Member 'BP_RippleSwim_C_OnBulletHitWater::Id' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_RippleSwim_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_RippleSwim_C_ReceiveTick");
static_assert(sizeof(BP_RippleSwim_C_ReceiveTick) == 0x000004, "Wrong size on BP_RippleSwim_C_ReceiveTick");
static_assert(offsetof(BP_RippleSwim_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_RippleSwim_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_RippleSwim_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsCurrentPlatformPC_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_RippleSwim_C_UserConstructionScript");
static_assert(sizeof(BP_RippleSwim_C_UserConstructionScript) == 0x000001, "Wrong size on BP_RippleSwim_C_UserConstructionScript");
static_assert(offsetof(BP_RippleSwim_C_UserConstructionScript, CallFunc_IsCurrentPlatformPC_ReturnValue) == 0x000000, "Member 'BP_RippleSwim_C_UserConstructionScript::CallFunc_IsCurrentPlatformPC_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.AboveWater
// 0x0058 (0x0058 - 0x0000)
struct BP_RippleSwim_C_AboveWater final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAboveWater;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_AboveWater) == 0x000008, "Wrong alignment on BP_RippleSwim_C_AboveWater");
static_assert(sizeof(BP_RippleSwim_C_AboveWater) == 0x000058, "Wrong size on BP_RippleSwim_C_AboveWater");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, Location) == 0x000000, "Member 'BP_RippleSwim_C_AboveWater::Location' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, bAboveWater) == 0x00000C, "Member 'BP_RippleSwim_C_AboveWater::bAboveWater' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVectorDouble_X) == 0x000038, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVectorDouble_Y) == 0x000040, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_BreakVectorDouble_Z) == 0x000048, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x000050, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_AboveWater, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_RippleSwim_C_AboveWater::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.SetWaterRippleData
// 0x0018 (0x0018 - 0x0000)
struct BP_RippleSwim_C_SetWaterRippleData final
{
public:
	class UBP_RippleWater_Data_C*                 InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_SetWaterRippleData) == 0x000008, "Wrong alignment on BP_RippleSwim_C_SetWaterRippleData");
static_assert(sizeof(BP_RippleSwim_C_SetWaterRippleData) == 0x000018, "Wrong size on BP_RippleSwim_C_SetWaterRippleData");
static_assert(offsetof(BP_RippleSwim_C_SetWaterRippleData, InputPin) == 0x000000, "Member 'BP_RippleSwim_C_SetWaterRippleData::InputPin' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_SetWaterRippleData, CallFunc_MakeLiteralName_ReturnValue) == 0x000008, "Member 'BP_RippleSwim_C_SetWaterRippleData::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.CalcTexCoord
// 0x00B0 (0x00B0 - 0x0000)
struct BP_RippleSwim_C_CalcTexCoord final
{
public:
	struct FVectorDouble                          RippleCenter;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          RipplePointLocation;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureSize;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TexCoord;                                          // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue;      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Divide_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue;              // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_CalcTexCoord) == 0x000008, "Wrong alignment on BP_RippleSwim_C_CalcTexCoord");
static_assert(sizeof(BP_RippleSwim_C_CalcTexCoord) == 0x0000B0, "Wrong size on BP_RippleSwim_C_CalcTexCoord");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, RippleCenter) == 0x000000, "Member 'BP_RippleSwim_C_CalcTexCoord::RippleCenter' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, RipplePointLocation) == 0x000018, "Member 'BP_RippleSwim_C_CalcTexCoord::RipplePointLocation' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CaptureSize) == 0x000030, "Member 'BP_RippleSwim_C_CalcTexCoord::CaptureSize' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, TexCoord) == 0x000034, "Member 'BP_RippleSwim_C_CalcTexCoord::TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_D_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_D_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000058, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_D_Divide_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_D_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_Add_VectorFloat_ReturnValue) == 0x000084, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_BreakVector_X) == 0x000090, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_BreakVector_Y) == 0x000094, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_BreakVector_Z) == 0x000098, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BP_RippleSwim_C_CalcTexCoord::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Change Ripple Preset
// 0x0030 (0x0030 - 0x0000)
struct BP_RippleSwim_C_Change_Ripple_Preset final
{
public:
	class UBP_RippleWater_Data_C*                 NewRippleState;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Change_Ripple_Preset) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Change_Ripple_Preset");
static_assert(sizeof(BP_RippleSwim_C_Change_Ripple_Preset) == 0x000030, "Wrong size on BP_RippleSwim_C_Change_Ripple_Preset");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, NewRippleState) == 0x000000, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::NewRippleState' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, CallFunc_BreakVector2D_Y_1) == 0x000014, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Change_Ripple_Preset, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'BP_RippleSwim_C_Change_Ripple_Preset::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Choose Available Point
// 0x0058 (0x0058 - 0x0000)
struct BP_RippleSwim_C_Choose_Available_Point final
{
public:
	struct FVectorDouble                          CollisionPoint;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          WeaponPoint;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SceneBattleInteract_C*              ConfigDA;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Choose_Available_Point) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Choose_Available_Point");
static_assert(sizeof(BP_RippleSwim_C_Choose_Available_Point) == 0x000058, "Wrong size on BP_RippleSwim_C_Choose_Available_Point");
static_assert(offsetof(BP_RippleSwim_C_Choose_Available_Point, CollisionPoint) == 0x000000, "Member 'BP_RippleSwim_C_Choose_Available_Point::CollisionPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Choose_Available_Point, WeaponPoint) == 0x000018, "Member 'BP_RippleSwim_C_Choose_Available_Point::WeaponPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Choose_Available_Point, ConfigDA) == 0x000030, "Member 'BP_RippleSwim_C_Choose_Available_Point::ConfigDA' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Choose_Available_Point, AvailblePoint_0) == 0x000038, "Member 'BP_RippleSwim_C_Choose_Available_Point::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Choose_Available_Point, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_RippleSwim_C_Choose_Available_Point::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.CalcDistance2D
// 0x0098 (0x0098 - 0x0000)
struct BP_RippleSwim_C_CalcDistance2D final
{
public:
	struct FVectorDouble                          V1;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          V2;                                                // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_0;                                        // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Square_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Square_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Add_FloatFloat_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Sqrt_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_CalcDistance2D) == 0x000008, "Wrong alignment on BP_RippleSwim_C_CalcDistance2D");
static_assert(sizeof(BP_RippleSwim_C_CalcDistance2D) == 0x000098, "Wrong size on BP_RippleSwim_C_CalcDistance2D");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, V1) == 0x000000, "Member 'BP_RippleSwim_C_CalcDistance2D::V1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, V2) == 0x000018, "Member 'BP_RippleSwim_C_CalcDistance2D::V2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, Distance_0) == 0x000030, "Member 'BP_RippleSwim_C_CalcDistance2D::Distance_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_X) == 0x000038, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_Y) == 0x000040, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_Z) == 0x000048, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_X_1) == 0x000050, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_Y_1) == 0x000058, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_BreakVectorDouble_Z_1) == 0x000060, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Subtract_FloatFloat_ReturnValue_1) == 0x000070, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Square_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Square_ReturnValue_1) == 0x000080, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Square_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcDistance2D, CallFunc_D_Sqrt_ReturnValue) == 0x000090, "Member 'BP_RippleSwim_C_CalcDistance2D::CallFunc_D_Sqrt_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.CatmullRom
// 0x00D0 (0x00D0 - 0x0000)
struct BP_RippleSwim_C_CatmullRom final
{
public:
	TArray<struct FVector2D>                      PointList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         StepCount;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vaild;                                             // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CurveList;                                         // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FVector2D>                      ResultList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CurveStep;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Points;                                            // 0x0040(0x0010)(Edit, BlueprintVisible)
	struct FVector2D                              P3;                                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P2;                                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P1;                                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P0;                                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Variable;                                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_CatmullRom) == 0x000008, "Wrong alignment on BP_RippleSwim_C_CatmullRom");
static_assert(sizeof(BP_RippleSwim_C_CatmullRom) == 0x0000D0, "Wrong size on BP_RippleSwim_C_CatmullRom");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, PointList) == 0x000000, "Member 'BP_RippleSwim_C_CatmullRom::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, StepCount) == 0x000010, "Member 'BP_RippleSwim_C_CatmullRom::StepCount' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, Vaild) == 0x000014, "Member 'BP_RippleSwim_C_CatmullRom::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CurveList) == 0x000018, "Member 'BP_RippleSwim_C_CatmullRom::CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, ResultList) == 0x000028, "Member 'BP_RippleSwim_C_CatmullRom::ResultList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CurveStep) == 0x000038, "Member 'BP_RippleSwim_C_CatmullRom::CurveStep' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, Points) == 0x000040, "Member 'BP_RippleSwim_C_CatmullRom::Points' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, P3) == 0x000050, "Member 'BP_RippleSwim_C_CatmullRom::P3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, P2) == 0x000058, "Member 'BP_RippleSwim_C_CatmullRom::P2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, P1) == 0x000060, "Member 'BP_RippleSwim_C_CatmullRom::P1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, P0) == 0x000068, "Member 'BP_RippleSwim_C_CatmullRom::P0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_X) == 0x00007C, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_X_1) == 0x000088, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_Y_1) == 0x00008C, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_X_2) == 0x000090, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_Y_2) == 0x000094, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_X_3) == 0x000098, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_BreakVector2D_Y_3) == 0x00009C, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000A0, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000A1, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, ___int_Variable) == 0x0000A4, "Member 'BP_RippleSwim_C_CatmullRom::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000A8, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, K2Node_MathExpression_ReturnValue) == 0x0000B0, "Member 'BP_RippleSwim_C_CatmullRom::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, K2Node_MathExpression_ReturnValue_1) == 0x0000B4, "Member 'BP_RippleSwim_C_CatmullRom::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_MakeVector2D_ReturnValue) == 0x0000BC, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000CC, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CatmullRom, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x0000CD, "Member 'BP_RippleSwim_C_CatmullRom::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.GetPoints
// 0x0098 (0x0098 - 0x0000)
struct BP_RippleSwim_C_GetPoints final
{
public:
	TArray<struct FVector2D>                      PointList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Vaild;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              P_0;                                               // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_1;                                               // 0x001C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_2;                                               // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_3;                                               // 0x002C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewLocalVar_0;                                     // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      ResultList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CurveStep;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Points;                                            // 0x0058(0x0010)(Edit, BlueprintVisible)
	struct FVector2D                              P3;                                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P2;                                                // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P1;                                                // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P0;                                                // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_GetPoints) == 0x000008, "Wrong alignment on BP_RippleSwim_C_GetPoints");
static_assert(sizeof(BP_RippleSwim_C_GetPoints) == 0x000098, "Wrong size on BP_RippleSwim_C_GetPoints");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, PointList) == 0x000000, "Member 'BP_RippleSwim_C_GetPoints::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, Vaild) == 0x000010, "Member 'BP_RippleSwim_C_GetPoints::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P_0) == 0x000014, "Member 'BP_RippleSwim_C_GetPoints::P_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P_1) == 0x00001C, "Member 'BP_RippleSwim_C_GetPoints::P_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P_2) == 0x000024, "Member 'BP_RippleSwim_C_GetPoints::P_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P_3) == 0x00002C, "Member 'BP_RippleSwim_C_GetPoints::P_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, NewLocalVar_0) == 0x000034, "Member 'BP_RippleSwim_C_GetPoints::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, ResultList) == 0x000040, "Member 'BP_RippleSwim_C_GetPoints::ResultList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CurveStep) == 0x000050, "Member 'BP_RippleSwim_C_GetPoints::CurveStep' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, Points) == 0x000058, "Member 'BP_RippleSwim_C_GetPoints::Points' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P3) == 0x000068, "Member 'BP_RippleSwim_C_GetPoints::P3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P2) == 0x000070, "Member 'BP_RippleSwim_C_GetPoints::P2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P1) == 0x000078, "Member 'BP_RippleSwim_C_GetPoints::P1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, P0) == 0x000080, "Member 'BP_RippleSwim_C_GetPoints::P0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000089, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x00008A, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPoints, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000091, "Member 'BP_RippleSwim_C_GetPoints::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.GetPointsV3
// 0x0150 (0x0150 - 0x0000)
struct BP_RippleSwim_C_GetPointsV3 final
{
public:
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Vaild;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              P_0;                                               // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_1;                                               // 0x001C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_2;                                               // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              P_3;                                               // 0x002C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          P3;                                                // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          P2;                                                // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          P1;                                                // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          P0;                                                // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_1;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_2;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_3;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_2;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_2;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_2;                    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_4;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X_3;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_3;                    // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_3;                    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_5;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_6;         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_7;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_GetPointsV3) == 0x000008, "Wrong alignment on BP_RippleSwim_C_GetPointsV3");
static_assert(sizeof(BP_RippleSwim_C_GetPointsV3) == 0x000150, "Wrong size on BP_RippleSwim_C_GetPointsV3");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, PointList) == 0x000000, "Member 'BP_RippleSwim_C_GetPointsV3::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, Vaild) == 0x000010, "Member 'BP_RippleSwim_C_GetPointsV3::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P_0) == 0x000014, "Member 'BP_RippleSwim_C_GetPointsV3::P_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P_1) == 0x00001C, "Member 'BP_RippleSwim_C_GetPointsV3::P_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P_2) == 0x000024, "Member 'BP_RippleSwim_C_GetPointsV3::P_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P_3) == 0x00002C, "Member 'BP_RippleSwim_C_GetPointsV3::P_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P3) == 0x000038, "Member 'BP_RippleSwim_C_GetPointsV3::P3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P2) == 0x000050, "Member 'BP_RippleSwim_C_GetPointsV3::P2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P1) == 0x000068, "Member 'BP_RippleSwim_C_GetPointsV3::P1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, P0) == 0x000080, "Member 'BP_RippleSwim_C_GetPointsV3::P0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_X) == 0x000098, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Y) == 0x0000A0, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Z) == 0x0000A8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x0000B0, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_MakeVector2D_ReturnValue) == 0x0000BC, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000C4, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000C5, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x0000C6, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_X_1) == 0x0000D0, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Y_1) == 0x0000D8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Z_1) == 0x0000E0, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_2) == 0x0000E8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_3) == 0x0000EC, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000F0, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_X_2) == 0x0000F8, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Y_2) == 0x000100, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Z_2) == 0x000108, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Z_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_4) == 0x000110, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_X_3) == 0x000118, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_X_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Y_3) == 0x000120, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Y_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_BreakVectorDouble_Z_3) == 0x000128, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_BreakVectorDouble_Z_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_5) == 0x000130, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_6) == 0x000134, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_MakeVector2D_ReturnValue_2) == 0x000138, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_Conv_DoubleToFloat_ReturnValue_7) == 0x000140, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_Conv_DoubleToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_GetPointsV3, CallFunc_MakeVector2D_ReturnValue_3) == 0x000144, "Member 'BP_RippleSwim_C_GetPointsV3::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.CalcTexCoord2D
// 0x0088 (0x0088 - 0x0000)
struct BP_RippleSwim_C_CalcTexCoord2D final
{
public:
	struct FVectorDouble                          RippleCenter;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RipplePointLocation;                               // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureSize;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TexCoord;                                          // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_1;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_CalcTexCoord2D) == 0x000008, "Wrong alignment on BP_RippleSwim_C_CalcTexCoord2D");
static_assert(sizeof(BP_RippleSwim_C_CalcTexCoord2D) == 0x000088, "Wrong size on BP_RippleSwim_C_CalcTexCoord2D");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, RippleCenter) == 0x000000, "Member 'BP_RippleSwim_C_CalcTexCoord2D::RippleCenter' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, RipplePointLocation) == 0x000018, "Member 'BP_RippleSwim_C_CalcTexCoord2D::RipplePointLocation' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CaptureSize) == 0x000020, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CaptureSize' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, TexCoord) == 0x000024, "Member 'BP_RippleSwim_C_CalcTexCoord2D::TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_BreakVectorDouble_X) == 0x000030, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_BreakVectorDouble_Y) == 0x000038, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_BreakVectorDouble_Z) == 0x000040, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Conv_DoubleToFloat_ReturnValue_1) == 0x00004C, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Conv_DoubleToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000060, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_BreakVector2D_X) == 0x000070, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CalcTexCoord2D, CallFunc_MakeVector2D_ReturnValue_1) == 0x00007C, "Member 'BP_RippleSwim_C_CalcTexCoord2D::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Calc Catmull Weapon 0
// 0x01D8 (0x01D8 - 0x0000)
struct BP_RippleSwim_C_Calc_Catmull_Weapon_0 final
{
public:
	class UBP_SceneBattleInteract_C*              BulletConfig_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CallFunc_CatmullRomPointsFromLists_CurveList;      // 0x00B8(0x0010)(ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord_1;                // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Calc_Catmull_Weapon_0) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Calc_Catmull_Weapon_0");
static_assert(sizeof(BP_RippleSwim_C_Calc_Catmull_Weapon_0) == 0x0001D8, "Wrong size on BP_RippleSwim_C_Calc_Catmull_Weapon_0");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, BulletConfig_0) == 0x000000, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::BulletConfig_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, AvailblePoint_0) == 0x000008, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, PointList) == 0x000020, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_X) == 0x000030, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_Y) == 0x000038, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_Z) == 0x000040, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_MakeVectorDouble_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, ___int_Array_Index_Variable) == 0x000060, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_MakeLiteralName_ReturnValue) == 0x000094, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, ___int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, ___int_Variable) == 0x0000AC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_CatmullRomPointsFromLists_CurveList) == 0x0000B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_CatmullRomPointsFromLists_CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_X) == 0x0000D8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_Y) == 0x0000DC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x0000E8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000FC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Greater_IntInt_ReturnValue) == 0x00010D, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_IsEditor_ReturnValue) == 0x00010E, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BooleanAND_ReturnValue) == 0x00010F, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000110, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_IsEditor_ReturnValue_1) == 0x000118, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_CalcTexCoord2D_TexCoord) == 0x000138, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_CalcTexCoord2D_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_X_1) == 0x000144, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_Y_1) == 0x000148, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, K2Node_MakeStruct_LinearColor) == 0x00014C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_CalcTexCoord2D_TexCoord_1) == 0x00015C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_CalcTexCoord2D_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_X_2) == 0x000164, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVector2D_Y_2) == 0x000168, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000170, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, K2Node_MakeStruct_LinearColor_1) == 0x000178, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000188, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_X_1) == 0x0001A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_Y_1) == 0x0001A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_BreakVectorDouble_Z_1) == 0x0001B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x0001B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Compare New Point Weapon 0
// 0x0050 (0x0050 - 0x0000)
struct BP_RippleSwim_C_Compare_New_Point_Weapon_0 final
{
public:
	struct FVectorDouble                          V2;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vaild;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_1;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Compare_New_Point_Weapon_0) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Compare_New_Point_Weapon_0");
static_assert(sizeof(BP_RippleSwim_C_Compare_New_Point_Weapon_0) == 0x000050, "Wrong size on BP_RippleSwim_C_Compare_New_Point_Weapon_0");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, V2) == 0x000000, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::V2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, Vaild) == 0x000018, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000028, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000030, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_D_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_D_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_D_Greater_FloatFloat_ReturnValue_1) == 0x000039, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_D_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000044, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_0, CallFunc_CalcDistance2D_Distance) == 0x000048, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_0::CallFunc_CalcDistance2D_Distance' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Calc Catmull Weapon 1
// 0x01D8 (0x01D8 - 0x0000)
struct BP_RippleSwim_C_Calc_Catmull_Weapon_1 final
{
public:
	class UBP_SceneBattleInteract_C*              BulletConfig_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CallFunc_CatmullRomPointsFromLists_CurveList;      // 0x00B8(0x0010)(ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord_1;                // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Calc_Catmull_Weapon_1) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Calc_Catmull_Weapon_1");
static_assert(sizeof(BP_RippleSwim_C_Calc_Catmull_Weapon_1) == 0x0001D8, "Wrong size on BP_RippleSwim_C_Calc_Catmull_Weapon_1");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, BulletConfig_0) == 0x000000, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::BulletConfig_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, AvailblePoint_0) == 0x000008, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, PointList) == 0x000020, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_X) == 0x000030, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_Y) == 0x000038, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_Z) == 0x000040, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_MakeVectorDouble_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, ___int_Array_Index_Variable) == 0x000060, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_MakeLiteralName_ReturnValue) == 0x000094, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, ___int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, ___int_Variable) == 0x0000AC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_CatmullRomPointsFromLists_CurveList) == 0x0000B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_CatmullRomPointsFromLists_CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_X) == 0x0000D8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_Y) == 0x0000DC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x0000E8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000FC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Greater_IntInt_ReturnValue) == 0x00010D, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_IsEditor_ReturnValue) == 0x00010E, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BooleanAND_ReturnValue) == 0x00010F, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000110, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_IsEditor_ReturnValue_1) == 0x000118, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_CalcTexCoord2D_TexCoord) == 0x000138, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_CalcTexCoord2D_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_X_1) == 0x000144, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_Y_1) == 0x000148, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, K2Node_MakeStruct_LinearColor) == 0x00014C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_CalcTexCoord2D_TexCoord_1) == 0x00015C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_CalcTexCoord2D_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_X_2) == 0x000164, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVector2D_Y_2) == 0x000168, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000170, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, K2Node_MakeStruct_LinearColor_1) == 0x000178, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000188, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_X_1) == 0x0001A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_Y_1) == 0x0001A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_BreakVectorDouble_Z_1) == 0x0001B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x0001B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_1, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_1::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Compare New Point Weapon 1
// 0x0050 (0x0050 - 0x0000)
struct BP_RippleSwim_C_Compare_New_Point_Weapon_1 final
{
public:
	struct FVectorDouble                          V2;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vaild;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_1;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Compare_New_Point_Weapon_1) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Compare_New_Point_Weapon_1");
static_assert(sizeof(BP_RippleSwim_C_Compare_New_Point_Weapon_1) == 0x000050, "Wrong size on BP_RippleSwim_C_Compare_New_Point_Weapon_1");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, V2) == 0x000000, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::V2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, Vaild) == 0x000018, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000028, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000030, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_D_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_D_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_D_Greater_FloatFloat_ReturnValue_1) == 0x000039, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_D_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000044, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_1, CallFunc_CalcDistance2D_Distance) == 0x000048, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_1::CallFunc_CalcDistance2D_Distance' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Calc Catmull Weapon 2
// 0x01D8 (0x01D8 - 0x0000)
struct BP_RippleSwim_C_Calc_Catmull_Weapon_2 final
{
public:
	class UBP_SceneBattleInteract_C*              BulletConfig_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      CallFunc_CatmullRomPointsFromLists_CurveList;      // 0x00B8(0x0010)(ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcTexCoord2D_TexCoord_1;                // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Calc_Catmull_Weapon_2) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Calc_Catmull_Weapon_2");
static_assert(sizeof(BP_RippleSwim_C_Calc_Catmull_Weapon_2) == 0x0001D8, "Wrong size on BP_RippleSwim_C_Calc_Catmull_Weapon_2");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, BulletConfig_0) == 0x000000, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::BulletConfig_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, AvailblePoint_0) == 0x000008, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, PointList) == 0x000020, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_X) == 0x000030, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_Y) == 0x000038, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_Z) == 0x000040, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_MakeVectorDouble_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, ___int_Array_Index_Variable) == 0x000060, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_MakeLiteralName_ReturnValue) == 0x000094, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, ___int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, ___int_Variable) == 0x0000AC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_CatmullRomPointsFromLists_CurveList) == 0x0000B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_CatmullRomPointsFromLists_CurveList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_X) == 0x0000D8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_Y) == 0x0000DC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x0000E8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000FC, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Greater_IntInt_ReturnValue) == 0x00010D, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_IsEditor_ReturnValue) == 0x00010E, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BooleanAND_ReturnValue) == 0x00010F, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000110, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_IsEditor_ReturnValue_1) == 0x000118, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_CalcTexCoord2D_TexCoord) == 0x000138, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_CalcTexCoord2D_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_X_1) == 0x000144, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_Y_1) == 0x000148, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, K2Node_MakeStruct_LinearColor) == 0x00014C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_CalcTexCoord2D_TexCoord_1) == 0x00015C, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_CalcTexCoord2D_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_X_2) == 0x000164, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVector2D_Y_2) == 0x000168, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000170, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, K2Node_MakeStruct_LinearColor_1) == 0x000178, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000188, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_X_1) == 0x0001A0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_Y_1) == 0x0001A8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_BreakVectorDouble_Z_1) == 0x0001B0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x0001B8, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Catmull_Weapon_2, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BP_RippleSwim_C_Calc_Catmull_Weapon_2::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Compare New Point Weapon 2
// 0x0050 (0x0050 - 0x0000)
struct BP_RippleSwim_C_Compare_New_Point_Weapon_2 final
{
public:
	struct FVectorDouble                          V2;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vaild;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue_1;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcDistance2D_Distance;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Compare_New_Point_Weapon_2) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Compare_New_Point_Weapon_2");
static_assert(sizeof(BP_RippleSwim_C_Compare_New_Point_Weapon_2) == 0x000050, "Wrong size on BP_RippleSwim_C_Compare_New_Point_Weapon_2");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, V2) == 0x000000, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::V2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, Vaild) == 0x000018, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::Vaild' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000028, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000030, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_D_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_D_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_D_Greater_FloatFloat_ReturnValue_1) == 0x000039, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_D_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000044, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Compare_New_Point_Weapon_2, CallFunc_CalcDistance2D_Distance) == 0x000048, "Member 'BP_RippleSwim_C_Compare_New_Point_Weapon_2::CallFunc_CalcDistance2D_Distance' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Calc Capsule Weapon 2
// 0x00E8 (0x00E8 - 0x0000)
struct BP_RippleSwim_C_Calc_Capsule_Weapon_2 final
{
public:
	class UBP_SceneBattleInteract_C*              BulletConfig_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTexCoord_TexCoord;                    // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcTexCoord_TexCoord_1;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Calc_Capsule_Weapon_2) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Calc_Capsule_Weapon_2");
static_assert(sizeof(BP_RippleSwim_C_Calc_Capsule_Weapon_2) == 0x0000E8, "Wrong size on BP_RippleSwim_C_Calc_Capsule_Weapon_2");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, BulletConfig_0) == 0x000000, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::BulletConfig_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, AvailblePoint_0) == 0x000008, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, PointList) == 0x000020, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_CalcTexCoord_TexCoord) == 0x00005C, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_CalcTexCoord_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_X) == 0x000068, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_Y) == 0x00006C, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_Z) == 0x000070, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000078, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, K2Node_MakeStruct_LinearColor) == 0x000080, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Array_LastIndex_ReturnValue) == 0x0000A8, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B0, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000B4, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_IsEditor_ReturnValue) == 0x0000B8, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_CalcTexCoord_TexCoord_1) == 0x0000BC, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_CalcTexCoord_TexCoord_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_X_1) == 0x0000C8, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_Y_1) == 0x0000CC, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BreakVector_Z_1) == 0x0000D0, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, CallFunc_BooleanAND_ReturnValue) == 0x0000D4, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Capsule_Weapon_2, K2Node_MakeStruct_LinearColor_1) == 0x0000D8, "Member 'BP_RippleSwim_C_Calc_Capsule_Weapon_2::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Calc Circle Weapon 2
// 0x0090 (0x0090 - 0x0000)
struct BP_RippleSwim_C_Calc_Circle_Weapon_2 final
{
public:
	class UBP_SceneBattleInteract_C*              BulletConfig_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          AvailblePoint_0;                                   // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVectorDouble>                  PointList;                                         // 0x0020(0x0010)(Edit, BlueprintVisible)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTexCoord_TexCoord;                    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RippleSwim_C_Calc_Circle_Weapon_2) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Calc_Circle_Weapon_2");
static_assert(sizeof(BP_RippleSwim_C_Calc_Circle_Weapon_2) == 0x000090, "Wrong size on BP_RippleSwim_C_Calc_Circle_Weapon_2");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, BulletConfig_0) == 0x000000, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::BulletConfig_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, AvailblePoint_0) == 0x000008, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::AvailblePoint_0' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, PointList) == 0x000020, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::PointList' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_CalcTexCoord_TexCoord) == 0x000050, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_CalcTexCoord_TexCoord' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_BreakVector_X) == 0x00005C, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_BreakVector_Z) == 0x000064, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, K2Node_MakeStruct_LinearColor) == 0x000068, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, K2Node_MakeStruct_LinearColor_1) == 0x000078, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_IsEditor_ReturnValue) == 0x00008C, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Calc_Circle_Weapon_2, CallFunc_BooleanAND_ReturnValue) == 0x00008D, "Member 'BP_RippleSwim_C_Calc_Circle_Weapon_2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.TexcoordToPosition
// 0x0088 (0x0088 - 0x0000)
struct BP_RippleSwim_C_TexcoordToPosition final
{
public:
	struct FVectorDouble                          RippleCenter;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RippleUV;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureSize;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Position;                                          // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue_1;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_TexcoordToPosition) == 0x000008, "Wrong alignment on BP_RippleSwim_C_TexcoordToPosition");
static_assert(sizeof(BP_RippleSwim_C_TexcoordToPosition) == 0x000088, "Wrong size on BP_RippleSwim_C_TexcoordToPosition");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, RippleCenter) == 0x000000, "Member 'BP_RippleSwim_C_TexcoordToPosition::RippleCenter' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, RippleUV) == 0x000018, "Member 'BP_RippleSwim_C_TexcoordToPosition::RippleUV' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CaptureSize) == 0x000020, "Member 'BP_RippleSwim_C_TexcoordToPosition::CaptureSize' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, Position) == 0x000024, "Member 'BP_RippleSwim_C_TexcoordToPosition::Position' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_BreakVectorDouble_X) == 0x000030, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_BreakVectorDouble_Y) == 0x000038, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_BreakVectorDouble_Z) == 0x000040, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x000050, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000054, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Conv_DoubleToFloat_ReturnValue_1) == 0x00005C, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Conv_DoubleToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_BreakVector2D_X) == 0x000070, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_TexcoordToPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x00007C, "Member 'BP_RippleSwim_C_TexcoordToPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.SetOldRipple
// 0x000C (0x000C - 0x0000)
struct BP_RippleSwim_C_SetOldRipple final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_SetOldRipple) == 0x000004, "Wrong alignment on BP_RippleSwim_C_SetOldRipple");
static_assert(sizeof(BP_RippleSwim_C_SetOldRipple) == 0x00000C, "Wrong size on BP_RippleSwim_C_SetOldRipple");
static_assert(offsetof(BP_RippleSwim_C_SetOldRipple, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'BP_RippleSwim_C_SetOldRipple::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.SetNewRipple
// 0x000C (0x000C - 0x0000)
struct BP_RippleSwim_C_SetNewRipple final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_SetNewRipple) == 0x000004, "Wrong alignment on BP_RippleSwim_C_SetNewRipple");
static_assert(sizeof(BP_RippleSwim_C_SetNewRipple) == 0x00000C, "Wrong size on BP_RippleSwim_C_SetNewRipple");
static_assert(offsetof(BP_RippleSwim_C_SetNewRipple, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'BP_RippleSwim_C_SetNewRipple::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Set Bullet Data
// 0x0008 (0x0008 - 0x0000)
struct BP_RippleSwim_C_Set_Bullet_Data final
{
public:
	class UBP_SceneBattleInteract_C*              Config;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Set_Bullet_Data) == 0x000008, "Wrong alignment on BP_RippleSwim_C_Set_Bullet_Data");
static_assert(sizeof(BP_RippleSwim_C_Set_Bullet_Data) == 0x000008, "Wrong size on BP_RippleSwim_C_Set_Bullet_Data");
static_assert(offsetof(BP_RippleSwim_C_Set_Bullet_Data, Config) == 0x000000, "Member 'BP_RippleSwim_C_Set_Bullet_Data::Config' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.CheckAndSetPos
// 0x0548 (0x0548 - 0x0000)
struct BP_RippleSwim_C_CheckAndSetPos final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastRippleTime;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_GetCharacterGravityDirect_ReturnValue;    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Multiply_VectorFloat_ReturnValue;       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Multiply_VectorFloat_ReturnValue_1;     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInWater_ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_2;     // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DFloat_ReturnValue;            // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_1;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_2;      // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue_1;         // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_3;     // 0x0284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_4;     // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetComponentByClass_ReturnValue_2;        // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4; // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5; // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_5;     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB[0x1];                                      // 0x02EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_2;         // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_FloatToDouble_ReturnValue_3;         // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_MakeVectorDouble_ReturnValue_1;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_K2_AddActorWorldOffset_SweepHitResult;  // 0x0330(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x03C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable;                                // 0x03D0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_LineTraceSingle_OutHit;                 // 0x03EC(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_LineTraceSingle_ReturnValue;            // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_CheckAndSetPos) == 0x000008, "Wrong alignment on BP_RippleSwim_C_CheckAndSetPos");
static_assert(sizeof(BP_RippleSwim_C_CheckAndSetPos) == 0x000548, "Wrong size on BP_RippleSwim_C_CheckAndSetPos");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, DeltaSeconds) == 0x000000, "Member 'BP_RippleSwim_C_CheckAndSetPos::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, LastRippleTime) == 0x000004, "Member 'BP_RippleSwim_C_CheckAndSetPos::LastRippleTime' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000010, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000050, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000060, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetCharacterGravityDirect_ReturnValue) == 0x000070, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetCharacterGravityDirect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_Multiply_VectorFloat_ReturnValue) == 0x000088, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_Multiply_VectorFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0000E8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_FClamp_ReturnValue) == 0x0000F0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, K2Node_DynamicCast_AsTs_Base_Character) == 0x0000F8, "Member 'BP_RippleSwim_C_CheckAndSetPos::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_RippleSwim_C_CheckAndSetPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000104, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetInWater_ReturnValue) == 0x000108, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetInWater_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_MakeLiteralName_ReturnValue) == 0x00010C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000118, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000128, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x00012C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Vector_Distance2D_ReturnValue) == 0x000138, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000140, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000150, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000168, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000178, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000184, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000190, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x000198, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0001A0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0001B0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x0001C0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Not_PreBool_ReturnValue) == 0x0001C1, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001C4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001C8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0001CC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0001D4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0001DC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue_2) == 0x0001E4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Add_Vector2DFloat_ReturnValue) == 0x0001EC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Add_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector2D_X) == 0x0001F4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector2D_Y) == 0x0001F8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_FloatToDouble_ReturnValue) == 0x000200, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_FloatToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_FloatToDouble_ReturnValue_1) == 0x000208, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_FloatToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_IsEditor_ReturnValue) == 0x000210, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_MakeVectorDouble_ReturnValue) == 0x000218, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_MakeVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue_1) == 0x000230, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000238, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_K2_GetActorLocation_ReturnValue_2) == 0x000240, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_Add_VectorVector_ReturnValue_1) == 0x000258, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_VSize2D_ReturnValue) == 0x000270, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000274, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Normal2D_ReturnValue) == 0x000278, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000280, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue_3) == 0x000284, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_Vector2DFloat_ReturnValue_4) == 0x00028C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_Vector2DFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000298, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0002A0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x0002A8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x0002B8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x0002C0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x0002D0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_self_CastInput_5) == 0x0002D8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_HasMatchingGameplayTag_ReturnValue_5) == 0x0002E8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_HasMatchingGameplayTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue_1) == 0x0002E9, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue_2) == 0x0002EA, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector2D_X_1) == 0x0002EC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector2D_Y_1) == 0x0002F0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue_2) == 0x0002F4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_FloatToDouble_ReturnValue_2) == 0x0002F8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_FloatToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue_3) == 0x000300, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Conv_FloatToDouble_ReturnValue_3) == 0x000308, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Conv_FloatToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue_3) == 0x000310, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_MakeVectorDouble_ReturnValue_1) == 0x000318, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_MakeVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_K2_AddActorWorldOffset_SweepHitResult) == 0x000330, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue_4) == 0x0003C4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0003C5, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanAND_ReturnValue_5) == 0x0003C6, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue_4) == 0x0003C7, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BooleanOR_ReturnValue_5) == 0x0003C8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, ___object_Variable) == 0x0003D0, "Member 'BP_RippleSwim_C_CheckAndSetPos::___object_Variable' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003E0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_LineTraceSingle_OutHit) == 0x0003EC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_D_LineTraceSingle_ReturnValue) == 0x000480, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_D_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector_X) == 0x000484, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector_Y) == 0x000488, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakVector_Z) == 0x00048C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_MakeVector2D_ReturnValue) == 0x000490, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_bBlockingHit) == 0x000498, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_bInitialOverlap) == 0x000499, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_Time) == 0x00049C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_Distance) == 0x0004A0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_Location) == 0x0004A4, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_ImpactPoint) == 0x0004B0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_Normal) == 0x0004BC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_ImpactNormal) == 0x0004C8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_PhysMat) == 0x0004D8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_HitActor) == 0x0004E0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_HitComponent) == 0x0004E8, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_HitBoneName) == 0x0004F0, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_HitItem) == 0x0004FC, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_FaceIndex) == 0x000500, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_TraceStart) == 0x000504, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_BreakHitResult_TraceEnd) == 0x000510, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00051C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000520, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000524, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000528, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_FClamp_ReturnValue_1) == 0x00052C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_FClamp_ReturnValue_2) == 0x000530, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000534, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Lerp_ReturnValue) == 0x000538, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00053C, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_CheckAndSetPos, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000540, "Member 'BP_RippleSwim_C_CheckAndSetPos::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Ripple Simulation
// 0x0020 (0x0020 - 0x0000)
struct BP_RippleSwim_C_Ripple_Simulation final
{
public:
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Ripple_Simulation) == 0x000004, "Wrong alignment on BP_RippleSwim_C_Ripple_Simulation");
static_assert(sizeof(BP_RippleSwim_C_Ripple_Simulation) == 0x000020, "Wrong size on BP_RippleSwim_C_Ripple_Simulation");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Simulation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000000, "Member 'BP_RippleSwim_C_Ripple_Simulation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Simulation, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_RippleSwim_C_Ripple_Simulation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Simulation, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'BP_RippleSwim_C_Ripple_Simulation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Simulation, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'BP_RippleSwim_C_Ripple_Simulation::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_RippleSwim.BP_RippleSwim_C.Ripple Stamp
// 0x006C (0x006C - 0x0000)
struct BP_RippleSwim_C_Ripple_Stamp final
{
public:
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RippleSwim_C_Ripple_Stamp) == 0x000004, "Wrong alignment on BP_RippleSwim_C_Ripple_Stamp");
static_assert(sizeof(BP_RippleSwim_C_Ripple_Stamp) == 0x00006C, "Wrong size on BP_RippleSwim_C_Ripple_Stamp");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000000, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_Y_1) == 0x000014, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'BP_RippleSwim_C_Ripple_Stamp::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_X_2) == 0x000028, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_BreakVector2D_Y_2) == 0x00002C, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, K2Node_MakeStruct_LinearColor_1) == 0x000030, "Member 'BP_RippleSwim_C_Ripple_Stamp::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_MakeLiteralName_ReturnValue) == 0x000040, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, CallFunc_GetVectorParameterValue_ReturnValue) == 0x00004C, "Member 'BP_RippleSwim_C_Ripple_Stamp::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RippleSwim_C_Ripple_Stamp, K2Node_MakeStruct_LinearColor_2) == 0x00005C, "Member 'BP_RippleSwim_C_Ripple_Stamp::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");

}

