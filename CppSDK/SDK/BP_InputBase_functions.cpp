#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputBase

#include "Basic.hpp"

#include "BP_InputBase_classes.hpp"
#include "BP_InputBase_parameters.hpp"


namespace SDK
{

// Function BP_InputBase.BP_InputBase_C.ExecuteUbergraph_BP_InputBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::ExecuteUbergraph_BP_InputBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "ExecuteUbergraph_BP_InputBase");

	Params::BP_InputBase_C_ExecuteUbergraph_BP_InputBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "ReceiveEndPlay");

	Params::BP_InputBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.GetUnrealCacheConfig
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCaches                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FSInputCaches UBP_InputBase_C::GetUnrealCacheConfig(int32 action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "GetUnrealCacheConfig");

	Params::BP_InputBase_C_GetUnrealCacheConfig Parms{};

	Parms.action = action;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.GetUnrealHoldConfig
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputHoldConfig                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FSInputHoldConfig UBP_InputBase_C::GetUnrealHoldConfig(int32 action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "GetUnrealHoldConfig");

	Params::BP_InputBase_C_GetUnrealHoldConfig Parms{};

	Parms.action = action;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.跳跃按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::跳跃按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "跳跃按下事件");

	Params::BP_InputBase_C_跳跃按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.跳跃抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::跳跃抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "跳跃抬起事件");

	Params::BP_InputBase_C_跳跃抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.攀爬按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::攀爬按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攀爬按下事件");

	Params::BP_InputBase_C_攀爬按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.攀爬抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::攀爬抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攀爬抬起事件");

	Params::BP_InputBase_C_攀爬抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.走跑切换按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::走跑切换按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "走跑切换按下事件");

	Params::BP_InputBase_C_走跑切换按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.走跑切换抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::走跑切换抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "走跑切换抬起事件");

	Params::BP_InputBase_C_走跑切换抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.攻击按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::攻击按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攻击按下事件");

	Params::BP_InputBase_C_攻击按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.攻击抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::攻击抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攻击抬起事件");

	Params::BP_InputBase_C_攻击抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.闪避按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::闪避按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "闪避按下事件");

	Params::BP_InputBase_C_闪避按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.闪避抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::闪避抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "闪避抬起事件");

	Params::BP_InputBase_C_闪避抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.技能1按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::技能1按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "技能1按下事件");

	Params::BP_InputBase_C_技能1按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.技能1抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::技能1抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "技能1抬起事件");

	Params::BP_InputBase_C_技能1抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.幻象1按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::幻象1按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象1按下事件");

	Params::BP_InputBase_C_幻象1按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.幻象1抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::幻象1抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象1抬起事件");

	Params::BP_InputBase_C_幻象1抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.大招按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::大招按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "大招按下事件");

	Params::BP_InputBase_C_大招按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.大招抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::大招抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "大招抬起事件");

	Params::BP_InputBase_C_大招抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.幻象2按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::幻象2按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象2按下事件");

	Params::BP_InputBase_C_幻象2按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.幻象2抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::幻象2抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象2抬起事件");

	Params::BP_InputBase_C_幻象2抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色1按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色1按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色1按下事件");

	Params::BP_InputBase_C_切换角色1按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色1抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色1抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色1抬起事件");

	Params::BP_InputBase_C_切换角色1抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色2按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色2按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色2按下事件");

	Params::BP_InputBase_C_切换角色2按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色2抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色2抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色2抬起事件");

	Params::BP_InputBase_C_切换角色2抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色3按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色3按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色3按下事件");

	Params::BP_InputBase_C_切换角色3按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.切换角色3抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::切换角色3抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色3抬起事件");

	Params::BP_InputBase_C_切换角色3抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.锁定目标按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::锁定目标按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "锁定目标按下事件");

	Params::BP_InputBase_C_锁定目标按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.锁定目标抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::锁定目标抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "锁定目标抬起事件");

	Params::BP_InputBase_C_锁定目标抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.瞄准按下事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::瞄准按下事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "瞄准按下事件");

	Params::BP_InputBase_C_瞄准按下事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.瞄准抬起事件
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::瞄准抬起事件(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "瞄准抬起事件");

	Params::BP_InputBase_C_瞄准抬起事件 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputBase.BP_InputBase_C.跳跃按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::跳跃按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "跳跃按下");

	Params::BP_InputBase_C_跳跃按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.跳跃抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::跳跃抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "跳跃抬起");

	Params::BP_InputBase_C_跳跃抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.跳跃长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::跳跃长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "跳跃长按");

	Params::BP_InputBase_C_跳跃长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攀爬按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攀爬按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攀爬按下");

	Params::BP_InputBase_C_攀爬按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攀爬抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攀爬抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攀爬抬起");

	Params::BP_InputBase_C_攀爬抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攀爬长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攀爬长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攀爬长按");

	Params::BP_InputBase_C_攀爬长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.走跑切换按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::走跑切换按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "走跑切换按下");

	Params::BP_InputBase_C_走跑切换按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.走跑切换抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::走跑切换抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "走跑切换抬起");

	Params::BP_InputBase_C_走跑切换抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.走跑切换长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::走跑切换长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "走跑切换长按");

	Params::BP_InputBase_C_走跑切换长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攻击按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攻击按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攻击按下");

	Params::BP_InputBase_C_攻击按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攻击抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攻击抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攻击抬起");

	Params::BP_InputBase_C_攻击抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.攻击长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::攻击长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "攻击长按");

	Params::BP_InputBase_C_攻击长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.闪避按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::闪避按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "闪避按下");

	Params::BP_InputBase_C_闪避按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.闪避抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::闪避抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "闪避抬起");

	Params::BP_InputBase_C_闪避抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.闪避长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::闪避长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "闪避长按");

	Params::BP_InputBase_C_闪避长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.技能1按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::技能1按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "技能1按下");

	Params::BP_InputBase_C_技能1按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.技能1抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::技能1抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "技能1抬起");

	Params::BP_InputBase_C_技能1抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.技能1长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::技能1长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "技能1长按");

	Params::BP_InputBase_C_技能1长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象1按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象1按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象1按下");

	Params::BP_InputBase_C_幻象1按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象1抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象1抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象1抬起");

	Params::BP_InputBase_C_幻象1抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象1长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象1长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象1长按");

	Params::BP_InputBase_C_幻象1长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.大招按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::大招按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "大招按下");

	Params::BP_InputBase_C_大招按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.大招抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::大招抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "大招抬起");

	Params::BP_InputBase_C_大招抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.大招长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::大招长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "大招长按");

	Params::BP_InputBase_C_大招长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象2按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象2按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象2按下");

	Params::BP_InputBase_C_幻象2按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象2抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象2抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象2抬起");

	Params::BP_InputBase_C_幻象2抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.幻象2长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::幻象2长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "幻象2长按");

	Params::BP_InputBase_C_幻象2长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色1按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色1按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色1按下");

	Params::BP_InputBase_C_切换角色1按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色1抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色1抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色1抬起");

	Params::BP_InputBase_C_切换角色1抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色1长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色1长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色1长按");

	Params::BP_InputBase_C_切换角色1长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色2按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色2按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色2按下");

	Params::BP_InputBase_C_切换角色2按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色2抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色2抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色2抬起");

	Params::BP_InputBase_C_切换角色2抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色2长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色2长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色2长按");

	Params::BP_InputBase_C_切换角色2长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色3按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色3按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色3按下");

	Params::BP_InputBase_C_切换角色3按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色3抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色3抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色3抬起");

	Params::BP_InputBase_C_切换角色3抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.切换角色3长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::切换角色3长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "切换角色3长按");

	Params::BP_InputBase_C_切换角色3长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.瞄准按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::瞄准按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "瞄准按下");

	Params::BP_InputBase_C_瞄准按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.瞄准抬起
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::瞄准抬起(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "瞄准抬起");

	Params::BP_InputBase_C_瞄准抬起 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.瞄准长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::瞄准长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "瞄准长按");

	Params::BP_InputBase_C_瞄准长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.锁定目标长按
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::锁定目标长按(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "锁定目标长按");

	Params::BP_InputBase_C_锁定目标长按 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.通用交互按下
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSInputCommand                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FSInputCommand UBP_InputBase_C::通用交互按下(float time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "通用交互按下");

	Params::BP_InputBase_C_通用交互按下 Parms{};

	Parms.time = time;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputBase.BP_InputBase_C.GetMoveVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D*                       ReturnVaule                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputBase_C::GetMoveVector(struct FVector2D* ReturnVaule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputBase_C", "GetMoveVector");

	Params::BP_InputBase_C_GetMoveVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnVaule != nullptr)
		*ReturnVaule = std::move(Parms.ReturnVaule);
}

}

