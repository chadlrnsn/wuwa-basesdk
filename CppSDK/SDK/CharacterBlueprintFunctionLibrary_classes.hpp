#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterBlueprintFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass CharacterBlueprintFunctionLibrary.CharacterBlueprintFunctionLibrary_C
// 0x0000 (0x0030 - 0x0030)
class UCharacterBlueprintFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void SetPartCollisionSwitch(class ATsBaseCharacter_C* character, const class FString& compName, bool isBlockPawn, bool isBulletDetect, bool isBlockCamera, class UObject* __WorldContext);
	static class ATsBaseCharacter_C* GetCharacterActorByEntityId(int32 id, class UObject* __WorldContext);
	static void CharacterOperationRecord(bool open, class UObject* __WorldContext);
	static bool SaveCharacterOperationRecord(class UObject* __WorldContext);
	static float GetOperationRecordCount(class UObject* __WorldContext);
	static void CleanupOperationRecord(class UObject* __WorldContext);
	static void SetHalfLengthRecord(float sideLenHalf, class UObject* __WorldContext);
	static bool GetStatisticsOpen(class UObject* __WorldContext);
	static void ResetPartCollisionSwitch(class ATsBaseCharacter_C* character, const class FString& compName, class UObject* __WorldContext);
	static void TestLeaveSplineMove(class ATsBaseCharacter_C* actor, class UObject* __WorldContext);
	static void SetCurrentAttacker(int32 index, class UObject* __WorldContext);
	static bool GetItemsReset(class UObject* __WorldContext);
	static TArray<class FString> GetSubItemsListView(int32 startIndex, int32 length, class UObject* __WorldContext);
	static int32 GetItemListViewCount(class UObject* __WorldContext);
	static void SetCombatStarted(bool started, int32 attackerIndex1, int32 targetIndex1, bool isDamage, bool isCure, bool isSkillUsed, bool isState, bool isKill, bool isReborn, class UObject* __WorldContext);
	static void SetTypeOpen(bool isDamage, bool isCure, bool isSkillUsed, bool isState, bool isKill, bool isReborn, class UObject* __WorldContext);
	static TArray<class FString> GetTargetCombatEntities(class UObject* __WorldContext);
	static TArray<class FString> GetAttackerCombatEntities(class UObject* __WorldContext);
	static void SetCurrentTarget(int32 index, class UObject* __WorldContext);
	static void OnItemsResetFinished(class UObject* __WorldContext);
	static struct FTransformDouble GetBaseCharacterTransform(class UObject* __WorldContext);
	static void SetActorExtraSkeletalMeshComponent(int32 entityId, class USkeletalMeshComponent* skeletalMeshComponent, class UObject* __WorldContext);
	static bool CanCharacterMonsterOrSummonedDisplayEffect(class ATsBaseCharacter_C* owner, class UObject* __WorldContext);
	static void DetachFromHost(int32 id1, bool isDetachFollower, bool isRecursion, class UObject* __WorldContext);
	static struct FVectorDouble GetCharacterGravityDirect(class UObject* __WorldContext);
	static struct FVectorDouble GetCharacterGravityUp(class UObject* __WorldContext);
	static void SetGravityDirect(int32 entityId, const struct FVectorDouble& gravityDirect, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterBlueprintFunctionLibrary_C">();
	}
	static class UCharacterBlueprintFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterBlueprintFunctionLibrary_C>();
	}
};
static_assert(alignof(UCharacterBlueprintFunctionLibrary_C) == 0x000008, "Wrong alignment on UCharacterBlueprintFunctionLibrary_C");
static_assert(sizeof(UCharacterBlueprintFunctionLibrary_C) == 0x000030, "Wrong size on UCharacterBlueprintFunctionLibrary_C");

}

