#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlotBlueprintFunctionLibrary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "SpineThingsInfo_structs.hpp"


namespace SDK::Params
{

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInSequence
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_IsInSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_IsInSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_IsInSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_IsInSequence) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_IsInSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_IsInSequence::__WorldContext' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInSequence, ReturnValue) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_IsInSequence::ReturnValue' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.SkipCurrentSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_SkipCurrentSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_SkipCurrentSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_SkipCurrentSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_SkipCurrentSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_SkipCurrentSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PauseSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PauseSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PauseSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PauseSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PauseSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_PauseSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PauseSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PauseSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ResumeSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ResumeSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ResumeSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ResumeSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ResumeSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_ResumeSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ResumeSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ResumeSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.UseEnterMoveMode
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_UseEnterMoveMode final
{
public:
	class AActor*                                 inCharacter1;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_UseEnterMoveMode");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_UseEnterMoveMode");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode, inCharacter1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_UseEnterMoveMode::inCharacter1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_UseEnterMoveMode, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_UseEnterMoveMode::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.StartPlotTs
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_StartPlotTs final
{
public:
	class FString                                 inRes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_StartPlotTs) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_StartPlotTs");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_StartPlotTs) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_StartPlotTs");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_StartPlotTs, inRes) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_StartPlotTs::inRes' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_StartPlotTs, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_StartPlotTs::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.IsInPerformingPlot
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_IsInPerformingPlot final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_IsInPerformingPlot");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_IsInPerformingPlot");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_IsInPerformingPlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_IsInPerformingPlot, ReturnValue) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_IsInPerformingPlot::ReturnValue' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerBlackSequence
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerBlackSequence final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerBlackSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerBlackSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerBlackSequence, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerBlackSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotWeather
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ChangePlotWeather final
{
public:
	int32                                         weatherId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isInherit;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         tweenTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ChangePlotWeather");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ChangePlotWeather");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, weatherId) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::weatherId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, isInherit) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::isInherit' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, tweenTime) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::tweenTime' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotWeather, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotWeather::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowNameInput
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ShowNameInput final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ShowNameInput) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ShowNameInput");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ShowNameInput) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_ShowNameInput");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowNameInput, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ShowNameInput::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddBurstEyeRenderingMaterial
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial final
{
public:
	bool                                          isBoy;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial, isBoy) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial::isBoy' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_AddBurstEyeRenderingMaterial::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveBurstEyeRenderingMaterial
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial final
{
public:
	bool                                          isBoy;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial, isBoy) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial::isBoy' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_RemoveBurstEyeRenderingMaterial::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ChangePlotTimeOfDay
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay final
{
public:
	bool                                          isInherit;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         startSecond;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         endSecond;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         tweenFrame;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, isInherit) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::isInherit' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, startSecond) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::startSecond' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, endSecond) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::endSecond' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, tweenFrame) == 0x00000C, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::tweenFrame' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ChangePlotTimeOfDay::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteSequenceEvents
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents final
{
public:
	class FString                                 key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents, key) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents::key' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteSequenceEvents::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerCutChange
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerCutChange final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerCutChange) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerCutChange");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerCutChange) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerCutChange");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerCutChange, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerCutChange::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenChapterUi
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenChapterUi final
{
public:
	int32                                         chapterState;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         chapterId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenChapterUi) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenChapterUi");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenChapterUi) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenChapterUi");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, chapterState) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::chapterState' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, chapterId) == 0x000004, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::chapterId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenChapterUi, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_OpenChapterUi::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowLogo
// 0x0010 (0x0010 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ShowLogo final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ShowLogo) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ShowLogo");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ShowLogo) == 0x000010, "Wrong size on PlotBlueprintFunctionLibrary_C_ShowLogo");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowLogo, time) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ShowLogo::time' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowLogo, __WorldContext) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ShowLogo::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseUiView
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseUiView final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseUiView) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseUiView");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseUiView) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseUiView");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseUiView, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseUiView::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiView
// 0x0050 (0x0050 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenUiView final
{
public:
	class FString                                 maleAssetName1;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 femaleAssetName1;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 maleSpineName1;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 femaleSpineName1;                                  // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          needLoop;                                          // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenUiView) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenUiView");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenUiView) == 0x000050, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenUiView");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, maleAssetName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::maleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, femaleAssetName1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::femaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, maleSpineName1) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::maleSpineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, femaleSpineName1) == 0x000030, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::femaleSpineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, needLoop) == 0x000040, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::needLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiView, __WorldContext) == 0x000048, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiView::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlayUiLevelSequence
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence final
{
public:
	class FString                                 seqName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence, seqName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence::seqName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlayUiLevelSequence::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ExecuteEntitySequenceEvents
// 0x0020 (0x0020 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents final
{
public:
	class FString                                 key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         entityId;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents) == 0x000020, "Wrong size on PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, key) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::key' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, entityId) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::entityId' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents, __WorldContext) == 0x000018, "Member 'PlotBlueprintFunctionLibrary_C_ExecuteEntitySequenceEvents::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGender
// 0x0030 (0x0030 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender final
{
public:
	class FString                                 maleSpineName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 femaleSpineName;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          needLoop;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender) == 0x000030, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, maleSpineName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::maleSpineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, femaleSpineName) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::femaleSpineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, needLoop) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::needLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender, __WorldContext) == 0x000028, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGender::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnim
// 0x0020 (0x0020 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnim final
{
public:
	class FString                                 spineName1;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          needLoop;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnim");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim) == 0x000020, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnim");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, spineName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::spineName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, needLoop) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::needLoop' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnim, __WorldContext) == 0x000018, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnim::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.OpenUiViewInArray
// 0x0048 (0x0048 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_OpenUiViewInArray final
{
public:
	class FString                                 maleAssetName1;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 femaleAssetName1;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSpineThingsInfo>               maleSpineArray1;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSpineThingsInfo>               femaleSpineArray1;                                 // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_OpenUiViewInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray) == 0x000048, "Wrong size on PlotBlueprintFunctionLibrary_C_OpenUiViewInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, maleAssetName1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::maleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, femaleAssetName1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::femaleAssetName1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, maleSpineArray1) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::maleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, femaleSpineArray1) == 0x000030, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::femaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_OpenUiViewInArray, __WorldContext) == 0x000040, "Member 'PlotBlueprintFunctionLibrary_C_OpenUiViewInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.PlaySpineAnimForGenderInArray
// 0x0028 (0x0028 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray final
{
public:
	TArray<struct FSpineThingsInfo>               maleSpineArray1;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSpineThingsInfo>               femaleSpineArray1;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray) == 0x000028, "Wrong size on PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, maleSpineArray1) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::maleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, femaleSpineArray1) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::femaleSpineArray1' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray, __WorldContext) == 0x000020, "Member 'PlotBlueprintFunctionLibrary_C_PlaySpineAnimForGenderInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnim
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseSpineAnim final
{
public:
	class FString                                 spineName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseSpineAnim");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseSpineAnim");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim, spineName) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnim::spineName' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnim, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnim::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.CloseSpineAnimInArray
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray final
{
public:
	TArray<class FString>                         spineArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray, spineArray) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray::spineArray' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_CloseSpineAnimInArray::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.AddInteractTagToInteractingGravityMachine
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_AddInteractTagToInteractingGravityMachine::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.RemoveInteractTagFromInteractingGravityMachine
// 0x0008 (0x0008 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine) == 0x000008, "Wrong size on PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine, __WorldContext) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_RemoveInteractTagFromInteractingGravityMachine::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.TriggerTagToInteractingGravityMachine
// 0x0018 (0x0018 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine) == 0x000018, "Wrong size on PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine, Tag) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine::Tag' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine, __WorldContext) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_TriggerTagToInteractingGravityMachine::__WorldContext' has a wrong offset!");

// Function PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C.ShowBgIcon
// 0x0020 (0x0020 - 0x0000)
struct PlotBlueprintFunctionLibrary_C_ShowBgIcon final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_KuroMasterSeqEvent_C*               obj;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlotBlueprintFunctionLibrary_C_ShowBgIcon) == 0x000008, "Wrong alignment on PlotBlueprintFunctionLibrary_C_ShowBgIcon");
static_assert(sizeof(PlotBlueprintFunctionLibrary_C_ShowBgIcon) == 0x000020, "Wrong size on PlotBlueprintFunctionLibrary_C_ShowBgIcon");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowBgIcon, bShow) == 0x000000, "Member 'PlotBlueprintFunctionLibrary_C_ShowBgIcon::bShow' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowBgIcon, texture) == 0x000008, "Member 'PlotBlueprintFunctionLibrary_C_ShowBgIcon::texture' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowBgIcon, obj) == 0x000010, "Member 'PlotBlueprintFunctionLibrary_C_ShowBgIcon::obj' has a wrong offset!");
static_assert(offsetof(PlotBlueprintFunctionLibrary_C_ShowBgIcon, __WorldContext) == 0x000018, "Member 'PlotBlueprintFunctionLibrary_C_ShowBgIcon::__WorldContext' has a wrong offset!");

}

