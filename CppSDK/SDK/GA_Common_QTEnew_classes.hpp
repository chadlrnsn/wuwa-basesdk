#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Common_QTEnew

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_Base_classes.hpp"
#include "SCameraModifier_Settings_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Common_QTEnew.GA_Common_QTEnew_C
// 0x0160 (0x06B8 - 0x0558)
class UGA_Common_QTEnew_C final : public UGA_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Common_QTEnew_C;                 // 0x0558(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FSCameraModifier_Settings              相机配置;                                          // 0x0560(0x0118)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     原来的角色;                                        // 0x0678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTE_Camera_C*                       RogueQteCamera;                                    // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QTE时停子弹;                                       // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QTE时停子弹2;                                      // 0x068C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTE_Camera_C*                       RogueQteCamera_2;                                  // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          已切回角色;                                        // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_699[0x3];                                      // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           今汐Tag;                                           // 0x069C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           赞尼Tag;                                           // 0x06A8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         层数;                                              // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Common_QTEnew(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void OnCompleted_5D118C384AE61F1C80292E814F2D26E4();
	void OnBlendOut_5D118C384AE61F1C80292E814F2D26E4();
	void OnInterrupted_5D118C384AE61F1C80292E814F2D26E4();
	void OnCancelled_5D118C384AE61F1C80292E814F2D26E4();
	void OnTick_5D118C384AE61F1C80292E814F2D26E4();
	void EventReceived_80CB82B346E566456E0E77861D2A3261(const struct FGameplayEventData& Payload);
	void EventReceived_E1111D36446963FA74DB968DBE3C7127(const struct FGameplayEventData& Payload);
	void EventReceived_18B59F5945020DB23C42FD88C6BCD2BE(const struct FGameplayEventData& Payload);
	void OnCompleted_5D118C384AE61F1C80292E8113708A85();
	void OnBlendOut_5D118C384AE61F1C80292E8113708A85();
	void OnInterrupted_5D118C384AE61F1C80292E8113708A85();
	void OnCancelled_5D118C384AE61F1C80292E8113708A85();
	void OnTick_5D118C384AE61F1C80292E8113708A85();
	void EventReceived_18B59F5945020DB23C42FD881AF45BEE(const struct FGameplayEventData& Payload);
	void EventReceived_18B59F5945020DB23C42FD88F156CF99(const struct FGameplayEventData& Payload);
	void OnCompleted_5D118C384AE61F1C80292E8122DE2A4F();
	void OnBlendOut_5D118C384AE61F1C80292E8122DE2A4F();
	void OnInterrupted_5D118C384AE61F1C80292E8122DE2A4F();
	void OnCancelled_5D118C384AE61F1C80292E8122DE2A4F();
	void OnTick_5D118C384AE61F1C80292E8122DE2A4F();
	void OnCompleted_5D118C384AE61F1C80292E818F6C1406();
	void OnBlendOut_5D118C384AE61F1C80292E818F6C1406();
	void OnInterrupted_5D118C384AE61F1C80292E818F6C1406();
	void OnCancelled_5D118C384AE61F1C80292E818F6C1406();
	void OnTick_5D118C384AE61F1C80292E818F6C1406();
	void OnCompleted_5D118C384AE61F1C80292E8177F0E83D();
	void OnBlendOut_5D118C384AE61F1C80292E8177F0E83D();
	void OnInterrupted_5D118C384AE61F1C80292E8177F0E83D();
	void OnCancelled_5D118C384AE61F1C80292E8177F0E83D();
	void OnTick_5D118C384AE61F1C80292E8177F0E83D();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Common_QTEnew_C">();
	}
	static class UGA_Common_QTEnew_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Common_QTEnew_C>();
	}
};
static_assert(alignof(UGA_Common_QTEnew_C) == 0x000008, "Wrong alignment on UGA_Common_QTEnew_C");
static_assert(sizeof(UGA_Common_QTEnew_C) == 0x0006B8, "Wrong size on UGA_Common_QTEnew_C");
static_assert(offsetof(UGA_Common_QTEnew_C, UberGraphFrame_GA_Common_QTEnew_C) == 0x000558, "Member 'UGA_Common_QTEnew_C::UberGraphFrame_GA_Common_QTEnew_C' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 相机配置) == 0x000560, "Member 'UGA_Common_QTEnew_C::相机配置' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 原来的角色) == 0x000678, "Member 'UGA_Common_QTEnew_C::原来的角色' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, RogueQteCamera) == 0x000680, "Member 'UGA_Common_QTEnew_C::RogueQteCamera' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, QTE时停子弹) == 0x000688, "Member 'UGA_Common_QTEnew_C::QTE时停子弹' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, QTE时停子弹2) == 0x00068C, "Member 'UGA_Common_QTEnew_C::QTE时停子弹2' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, RogueQteCamera_2) == 0x000690, "Member 'UGA_Common_QTEnew_C::RogueQteCamera_2' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 已切回角色) == 0x000698, "Member 'UGA_Common_QTEnew_C::已切回角色' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 今汐Tag) == 0x00069C, "Member 'UGA_Common_QTEnew_C::今汐Tag' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 赞尼Tag) == 0x0006A8, "Member 'UGA_Common_QTEnew_C::赞尼Tag' has a wrong offset!");
static_assert(offsetof(UGA_Common_QTEnew_C, 层数) == 0x0006B4, "Member 'UGA_Common_QTEnew_C::层数' has a wrong offset!");

}

