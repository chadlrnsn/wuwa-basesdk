#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalGI

#include "Basic.hpp"

#include "BP_GlobalGI_classes.hpp"
#include "BP_GlobalGI_parameters.hpp"


namespace SDK
{

// Function BP_GlobalGI.BP_GlobalGI_C.ExecuteUbergraph_BP_GlobalGI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::ExecuteUbergraph_BP_GlobalGI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "ExecuteUbergraph_BP_GlobalGI");

	Params::BP_GlobalGI_C_ExecuteUbergraph_BP_GlobalGI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroTickEditor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::OnKuroTickEditor(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroTickEditor");

	Params::BP_GlobalGI_C_OnKuroTickEditor Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::OnKuroTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroTick");

	Params::BP_GlobalGI_C_OnKuroTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroEndUiScene
// (Event, Public, BlueprintEvent)

void ABP_GlobalGI_C::OnKuroEndUiScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroEndUiScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroStartUiScene
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           InName                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class ULevel*                           InUILevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::OnKuroStartUiScene(const class FString& InName, class ULevel* InUILevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroStartUiScene");

	Params::BP_GlobalGI_C_OnKuroStartUiScene Parms{};

	Parms.InName = std::move(InName);
	Parms.InUILevel = InUILevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroSetRuntimeTime
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::OnKuroSetRuntimeTime(float CurrentTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroSetRuntimeTime");

	Params::BP_GlobalGI_C_OnKuroSetRuntimeTime Parms{};

	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroRuntimeDestroy
// (Event, Public, BlueprintEvent)

void ABP_GlobalGI_C::OnKuroRuntimeDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroRuntimeDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GlobalGI_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnKuroInit
// (Event, Public, BlueprintEvent)

void ABP_GlobalGI_C::OnKuroInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnKuroInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateCharacterGI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateCharacterGI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateCharacterGI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateGIData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Skip_Lerp_Data                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::UpdateGIData(bool Skip_Lerp_Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateGIData");

	Params::BP_GlobalGI_C_UpdateGIData Parms{};

	Parms.Skip_Lerp_Data = Skip_Lerp_Data;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateFog
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateFog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update Env
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_Env()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update Env");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Get2SkyboxLerpWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   startSetting                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndSetting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurrentTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::Get2SkyboxLerpWeight(float startSetting, float EndSetting, float CurrentTime, float* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Get2SkyboxLerpWeight");

	Params::BP_GlobalGI_C_Get2SkyboxLerpWeight Parms{};

	Parms.startSetting = startSetting;
	Parms.EndSetting = EndSetting;
	Parms.CurrentTime = CurrentTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateWind
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateWind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateWind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.InitMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::InitMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "InitMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.InitGICompoemnt
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::InitGICompoemnt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "InitGICompoemnt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Get Scene Light Direction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LightDir                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::Get_Scene_Light_Direction(struct FVector* LightDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Get Scene Light Direction");

	Params::BP_GlobalGI_C_Get_Scene_Light_Direction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LightDir != nullptr)
		*LightDir = std::move(Parms.LightDir);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateSkyLight
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateSkyLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateSkyLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateAtmosphere
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateAtmosphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateAtmosphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.CalculateLightDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Horizontal                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::CalculateLightDirection(float Vertical, float Horizontal, float Time, struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "CalculateLightDirection");

	Params::BP_GlobalGI_C_CalculateLightDirection Parms{};

	Parms.Vertical = Vertical;
	Parms.Horizontal = Horizontal;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_GlobalGI.BP_GlobalGI_C.CalculateLightDirectionWithLimit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   V                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   H                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::CalculateLightDirectionWithLimit(float V, float H, float Time, struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "CalculateLightDirectionWithLimit");

	Params::BP_GlobalGI_C_CalculateLightDirectionWithLimit Parms{};

	Parms.V = V;
	Parms.H = H;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_GlobalGI.BP_GlobalGI_C.InitFeature
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::InitFeature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "InitFeature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetViewLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          WorldPosition                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Suc                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::GetViewLocation(struct FVector* WorldPosition, bool* Suc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetViewLocation");

	Params::BP_GlobalGI_C_GetViewLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WorldPosition != nullptr)
		*WorldPosition = std::move(Parms.WorldPosition);

	if (Suc != nullptr)
		*Suc = Parms.Suc;
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateTime
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update UI Env
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_UI_Env()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update UI Env");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update Main Light
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_Main_Light()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update Main Light");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update Light Direction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_Light_Direction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update Light Direction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateLightParameters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateLightParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateLightParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdatePostProcessVolume
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdatePostProcessVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdatePostProcessVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetLightDirectionFromVH
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Horizontal                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::GetLightDirectionFromVH(float Vertical, float Horizontal, struct FRotator* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetLightDirectionFromVH");

	Params::BP_GlobalGI_C_GetLightDirectionFromVH Parms{};

	Parms.Vertical = Vertical;
	Parms.Horizontal = Horizontal;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateLightShaft
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateLightShaft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateLightShaft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Set All Components States
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::Set_All_Components_States(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Set All Components States");

	Params::BP_GlobalGI_C_Set_All_Components_States Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.InitGI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::InitGI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "InitGI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateSkyDome
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateSkyDome()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateSkyDome");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.清晨
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::清晨()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "清晨");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.中午
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::中午()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "中午");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.黄昏
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::黄昏()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "黄昏");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.黄昏到夜晚
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::黄昏到夜晚()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "黄昏到夜晚");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.夜晚到清晨
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::夜晚到清晨()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "夜晚到清晨");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.夜晚
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::夜晚()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "夜晚");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateCloudCard
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKuroCloudCardSetting            CloudCardSetting                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_GlobalGI_C::UpdateCloudCard(struct FKuroCloudCardSetting& CloudCardSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateCloudCard");

	Params::BP_GlobalGI_C_UpdateCloudCard Parms{};

	Parms.CloudCardSetting = std::move(CloudCardSetting);

	UObject::ProcessEvent(Func, &Parms);

	CloudCardSetting = std::move(Parms.CloudCardSetting);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update Day Night Data Layer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_Day_Night_Data_Layer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update Day Night Data Layer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.辰时
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::辰时()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "辰时");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.上午
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::上午()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "上午");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.下午
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::下午()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "下午");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.申时
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::申时()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "申时");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateFlowmapSkybox
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateFlowmapSkybox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateFlowmapSkybox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateMisc
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateMisc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateMisc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateSkybox
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateSkybox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateSkybox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetSkyboxDMI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DMIRet                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::GetSkyboxDMI(class UMaterialInstanceDynamic** DMIRet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetSkyboxDMI");

	Params::BP_GlobalGI_C_GetSkyboxDMI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DMIRet != nullptr)
		*DMIRet = Parms.DMIRet;
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateClusteredStuff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateClusteredStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateClusteredStuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetStarsDMI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DMIRet                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::GetStarsDMI(class UMaterialInstanceDynamic** DMIRet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetStarsDMI");

	Params::BP_GlobalGI_C_GetStarsDMI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DMIRet != nullptr)
		*DMIRet = Parms.DMIRet;
}


// Function BP_GlobalGI.BP_GlobalGI_C.SetLevelSequenceTimeControl
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_ControlTodTime_C*             TodTimeControl                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::SetLevelSequenceTimeControl(class ABP_ControlTodTime_C* TodTimeControl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "SetLevelSequenceTimeControl");

	Params::BP_GlobalGI_C_SetLevelSequenceTimeControl Parms{};

	Parms.TodTimeControl = TodTimeControl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalGI.BP_GlobalGI_C.Update Dynamic Clouds
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::Update_Dynamic_Clouds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Update Dynamic Clouds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.EulerToForward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Yaw                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_GlobalGI_C::EulerToForward(float Pitch, float Yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "EulerToForward");

	Params::BP_GlobalGI_C_EulerToForward Parms{};

	Parms.Pitch = Pitch;
	Parms.Yaw = Yaw;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GlobalGI.BP_GlobalGI_C.Clamp Luminance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Min                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ABP_GlobalGI_C::Clamp_Luminance(const struct FLinearColor& InColor, float Min, float Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "Clamp Luminance");

	Params::BP_GlobalGI_C_Clamp_Luminance Parms{};

	Parms.InColor = std::move(InColor);
	Parms.Min = Min;
	Parms.Max = Max;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetParallaxCorrectCachedShadowDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::GetParallaxCorrectCachedShadowDirection(struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetParallaxCorrectCachedShadowDirection");

	Params::BP_GlobalGI_C_GetParallaxCorrectCachedShadowDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetTODCharacterLighting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     mainLight                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   mainLightIntensity                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     skyLight                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   skyLightIntensity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     FrontSideLight                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     BackSideLight                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::GetTODCharacterLighting(const struct FLinearColor& mainLight, float mainLightIntensity, const struct FLinearColor& skyLight, float skyLightIntensity, struct FLinearColor* FrontSideLight, struct FLinearColor* BackSideLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetTODCharacterLighting");

	Params::BP_GlobalGI_C_GetTODCharacterLighting Parms{};

	Parms.mainLight = std::move(mainLight);
	Parms.mainLightIntensity = mainLightIntensity;
	Parms.skyLight = std::move(skyLight);
	Parms.skyLightIntensity = skyLightIntensity;

	UObject::ProcessEvent(Func, &Parms);

	if (FrontSideLight != nullptr)
		*FrontSideLight = std::move(Parms.FrontSideLight);

	if (BackSideLight != nullptr)
		*BackSideLight = std::move(Parms.BackSideLight);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetParallaxCorrectCachedCrossFadeShadowDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_GlobalGI_C::GetParallaxCorrectCachedCrossFadeShadowDirection(struct FRotator* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetParallaxCorrectCachedCrossFadeShadowDirection");

	Params::BP_GlobalGI_C_GetParallaxCorrectCachedCrossFadeShadowDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_GlobalGI.BP_GlobalGI_C.updateLightFunctions
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::updateLightFunctions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "updateLightFunctions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.GetMilkyWayDMI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         DMIRet                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalGI_C::GetMilkyWayDMI(class UMaterialInstanceDynamic** DMIRet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "GetMilkyWayDMI");

	Params::BP_GlobalGI_C_GetMilkyWayDMI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DMIRet != nullptr)
		*DMIRet = Parms.DMIRet;
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateMilkWay
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         MilkyWay_DMI                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKuroMilkyWaySetting             CloudCardSetting                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_GlobalGI_C::UpdateMilkWay(class UMaterialInstanceDynamic*& MilkyWay_DMI, struct FKuroMilkyWaySetting& CloudCardSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateMilkWay");

	Params::BP_GlobalGI_C_UpdateMilkWay Parms{};

	Parms.MilkyWay_DMI = MilkyWay_DMI;
	Parms.CloudCardSetting = std::move(CloudCardSetting);

	UObject::ProcessEvent(Func, &Parms);

	MilkyWay_DMI = Parms.MilkyWay_DMI;
	CloudCardSetting = std::move(Parms.CloudCardSetting);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateBigWorld
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateBigWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateBigWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.OnGlobalGITick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::OnGlobalGITick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "OnGlobalGITick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateEditor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateEditor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.UpdateOcean
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::UpdateOcean()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "UpdateOcean");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalGI.BP_GlobalGI_C.IsPerformanceLightExist
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalGI_C::IsPerformanceLightExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalGI_C", "IsPerformanceLightExist");

	UObject::ProcessEvent(Func, nullptr);
}

}

