#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskTeamWander

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsTaskAbortImmediatelyBase_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTaskTeamWander.TsTaskTeamWander_C
// 0x0018 (0x00D0 - 0x00B8)
class UTsTaskTeamWander_C final : public UTsTaskAbortImmediatelyBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TsTaskTeamWander_C;                 // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         AllyDetect;                                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSpeed;                                         // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WalkOff;                                           // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ExecuteUbergraph_TsTaskTeamWander(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTaskTeamWander_C">();
	}
	static class UTsTaskTeamWander_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsTaskTeamWander_C>();
	}
};
static_assert(alignof(UTsTaskTeamWander_C) == 0x000008, "Wrong alignment on UTsTaskTeamWander_C");
static_assert(sizeof(UTsTaskTeamWander_C) == 0x0000D0, "Wrong size on UTsTaskTeamWander_C");
static_assert(offsetof(UTsTaskTeamWander_C, UberGraphFrame_TsTaskTeamWander_C) == 0x0000B8, "Member 'UTsTaskTeamWander_C::UberGraphFrame_TsTaskTeamWander_C' has a wrong offset!");
static_assert(offsetof(UTsTaskTeamWander_C, AllyDetect) == 0x0000C0, "Member 'UTsTaskTeamWander_C::AllyDetect' has a wrong offset!");
static_assert(offsetof(UTsTaskTeamWander_C, TurnSpeed) == 0x0000C4, "Member 'UTsTaskTeamWander_C::TurnSpeed' has a wrong offset!");
static_assert(offsetof(UTsTaskTeamWander_C, WalkOff) == 0x0000C8, "Member 'UTsTaskTeamWander_C::WalkOff' has a wrong offset!");

}

